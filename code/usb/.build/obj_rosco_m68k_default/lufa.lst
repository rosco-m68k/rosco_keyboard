   1               		.file	"lufa.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.keyboard_leds,"ax",@progbits
  12               	keyboard_leds:
  13               	.LFB128:
  14               		.file 1 "./tmk_core/protocol/lufa/lufa.c"
   1:./tmk_core/protocol/lufa/lufa.c **** /*
   2:./tmk_core/protocol/lufa/lufa.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/protocol/lufa/lufa.c ****  * This file is based on:
   4:./tmk_core/protocol/lufa/lufa.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:./tmk_core/protocol/lufa/lufa.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:./tmk_core/protocol/lufa/lufa.c ****  */
   7:./tmk_core/protocol/lufa/lufa.c **** 
   8:./tmk_core/protocol/lufa/lufa.c **** /*
   9:./tmk_core/protocol/lufa/lufa.c ****              LUFA Library
  10:./tmk_core/protocol/lufa/lufa.c ****      Copyright (C) Dean Camera, 2012.
  11:./tmk_core/protocol/lufa/lufa.c **** 
  12:./tmk_core/protocol/lufa/lufa.c ****   dean [at] fourwalledcubicle [dot] com
  13:./tmk_core/protocol/lufa/lufa.c ****            www.lufa-lib.org
  14:./tmk_core/protocol/lufa/lufa.c **** */
  15:./tmk_core/protocol/lufa/lufa.c **** 
  16:./tmk_core/protocol/lufa/lufa.c **** /*
  17:./tmk_core/protocol/lufa/lufa.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:./tmk_core/protocol/lufa/lufa.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:./tmk_core/protocol/lufa/lufa.c **** 
  20:./tmk_core/protocol/lufa/lufa.c ****   Permission to use, copy, modify, distribute, and sell this
  21:./tmk_core/protocol/lufa/lufa.c ****   software and its documentation for any purpose is hereby granted
  22:./tmk_core/protocol/lufa/lufa.c ****   without fee, provided that the above copyright notice appear in
  23:./tmk_core/protocol/lufa/lufa.c ****   all copies and that both that the copyright notice and this
  24:./tmk_core/protocol/lufa/lufa.c ****   permission notice and warranty disclaimer appear in supporting
  25:./tmk_core/protocol/lufa/lufa.c ****   documentation, and that the name of the author not be used in
  26:./tmk_core/protocol/lufa/lufa.c ****   advertising or publicity pertaining to distribution of the
  27:./tmk_core/protocol/lufa/lufa.c ****   software without specific, written prior permission.
  28:./tmk_core/protocol/lufa/lufa.c **** 
  29:./tmk_core/protocol/lufa/lufa.c ****   The author disclaim all warranties with regard to this
  30:./tmk_core/protocol/lufa/lufa.c ****   software, including all implied warranties of merchantability
  31:./tmk_core/protocol/lufa/lufa.c ****   and fitness.  In no event shall the author be liable for any
  32:./tmk_core/protocol/lufa/lufa.c ****   special, indirect or consequential damages or any damages
  33:./tmk_core/protocol/lufa/lufa.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:./tmk_core/protocol/lufa/lufa.c ****   in an action of contract, negligence or other tortious action,
  35:./tmk_core/protocol/lufa/lufa.c ****   arising out of or in connection with the use or performance of
  36:./tmk_core/protocol/lufa/lufa.c ****   this software.
  37:./tmk_core/protocol/lufa/lufa.c **** */
  38:./tmk_core/protocol/lufa/lufa.c **** 
  39:./tmk_core/protocol/lufa/lufa.c **** #include "report.h"
  40:./tmk_core/protocol/lufa/lufa.c **** #include "host.h"
  41:./tmk_core/protocol/lufa/lufa.c **** #include "host_driver.h"
  42:./tmk_core/protocol/lufa/lufa.c **** #include "keyboard.h"
  43:./tmk_core/protocol/lufa/lufa.c **** #include "action.h"
  44:./tmk_core/protocol/lufa/lufa.c **** #include "led.h"
  45:./tmk_core/protocol/lufa/lufa.c **** #include "sendchar.h"
  46:./tmk_core/protocol/lufa/lufa.c **** #include "debug.h"
  47:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
  48:./tmk_core/protocol/lufa/lufa.c **** #include "sleep_led.h"
  49:./tmk_core/protocol/lufa/lufa.c **** #endif
  50:./tmk_core/protocol/lufa/lufa.c **** #include "suspend.h"
  51:./tmk_core/protocol/lufa/lufa.c **** 
  52:./tmk_core/protocol/lufa/lufa.c **** #include "descriptor.h"
  53:./tmk_core/protocol/lufa/lufa.c **** #include "lufa.h"
  54:./tmk_core/protocol/lufa/lufa.c **** #include "quantum.h"
  55:./tmk_core/protocol/lufa/lufa.c **** #include <util/atomic.h>
  56:./tmk_core/protocol/lufa/lufa.c **** 
  57:./tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
  58:./tmk_core/protocol/lufa/lufa.c ****   #include "keycode_config.h"
  59:./tmk_core/protocol/lufa/lufa.c **** 
  60:./tmk_core/protocol/lufa/lufa.c ****   extern keymap_config_t keymap_config;
  61:./tmk_core/protocol/lufa/lufa.c **** #endif
  62:./tmk_core/protocol/lufa/lufa.c **** 
  63:./tmk_core/protocol/lufa/lufa.c **** 
  64:./tmk_core/protocol/lufa/lufa.c **** #ifdef AUDIO_ENABLE
  65:./tmk_core/protocol/lufa/lufa.c ****     #include <audio.h>
  66:./tmk_core/protocol/lufa/lufa.c **** #endif
  67:./tmk_core/protocol/lufa/lufa.c **** 
  68:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
  69:./tmk_core/protocol/lufa/lufa.c ****     #include "bluetooth.h"
  70:./tmk_core/protocol/lufa/lufa.c **** #endif
  71:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
  72:./tmk_core/protocol/lufa/lufa.c ****     #include "adafruit_ble.h"
  73:./tmk_core/protocol/lufa/lufa.c **** #endif
  74:./tmk_core/protocol/lufa/lufa.c **** 
  75:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
  76:./tmk_core/protocol/lufa/lufa.c ****     #include "virtser.h"
  77:./tmk_core/protocol/lufa/lufa.c **** #endif
  78:./tmk_core/protocol/lufa/lufa.c **** 
  79:./tmk_core/protocol/lufa/lufa.c **** #if (defined(RGB_MIDI) | defined(RGBLIGHT_ANIMATIONS)) & defined(RGBLIGHT_ENABLE)
  80:./tmk_core/protocol/lufa/lufa.c ****     #include "rgblight.h"
  81:./tmk_core/protocol/lufa/lufa.c **** #endif
  82:./tmk_core/protocol/lufa/lufa.c **** 
  83:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
  84:./tmk_core/protocol/lufa/lufa.c ****   #include "sysex_tools.h"
  85:./tmk_core/protocol/lufa/lufa.c **** #endif
  86:./tmk_core/protocol/lufa/lufa.c **** 
  87:./tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
  88:./tmk_core/protocol/lufa/lufa.c **** 	#include "raw_hid.h"
  89:./tmk_core/protocol/lufa/lufa.c **** #endif
  90:./tmk_core/protocol/lufa/lufa.c **** 
  91:./tmk_core/protocol/lufa/lufa.c **** uint8_t keyboard_idle = 0;
  92:./tmk_core/protocol/lufa/lufa.c **** /* 0: Boot Protocol, 1: Report Protocol(default) */
  93:./tmk_core/protocol/lufa/lufa.c **** uint8_t keyboard_protocol = 1;
  94:./tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_led_stats = 0;
  95:./tmk_core/protocol/lufa/lufa.c **** 
  96:./tmk_core/protocol/lufa/lufa.c **** static report_keyboard_t keyboard_report_sent;
  97:./tmk_core/protocol/lufa/lufa.c **** 
  98:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
  99:./tmk_core/protocol/lufa/lufa.c **** static void usb_send_func(MidiDevice * device, uint16_t cnt, uint8_t byte0, uint8_t byte1, uint8_t 
 100:./tmk_core/protocol/lufa/lufa.c **** static void usb_get_midi(MidiDevice * device);
 101:./tmk_core/protocol/lufa/lufa.c **** static void midi_usb_init(MidiDevice * device);
 102:./tmk_core/protocol/lufa/lufa.c **** #endif
 103:./tmk_core/protocol/lufa/lufa.c **** 
 104:./tmk_core/protocol/lufa/lufa.c **** /* Host driver */
 105:./tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_leds(void);
 106:./tmk_core/protocol/lufa/lufa.c **** static void send_keyboard(report_keyboard_t *report);
 107:./tmk_core/protocol/lufa/lufa.c **** static void send_mouse(report_mouse_t *report);
 108:./tmk_core/protocol/lufa/lufa.c **** static void send_system(uint16_t data);
 109:./tmk_core/protocol/lufa/lufa.c **** static void send_consumer(uint16_t data);
 110:./tmk_core/protocol/lufa/lufa.c **** host_driver_t lufa_driver = {
 111:./tmk_core/protocol/lufa/lufa.c ****     keyboard_leds,
 112:./tmk_core/protocol/lufa/lufa.c ****     send_keyboard,
 113:./tmk_core/protocol/lufa/lufa.c ****     send_mouse,
 114:./tmk_core/protocol/lufa/lufa.c ****     send_system,
 115:./tmk_core/protocol/lufa/lufa.c ****     send_consumer,
 116:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 117:./tmk_core/protocol/lufa/lufa.c ****     usb_send_func,
 118:./tmk_core/protocol/lufa/lufa.c ****     usb_get_midi,
 119:./tmk_core/protocol/lufa/lufa.c ****     midi_usb_init
 120:./tmk_core/protocol/lufa/lufa.c **** #endif
 121:./tmk_core/protocol/lufa/lufa.c **** };
 122:./tmk_core/protocol/lufa/lufa.c **** 
 123:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 124:./tmk_core/protocol/lufa/lufa.c ****  * MIDI
 125:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 126:./tmk_core/protocol/lufa/lufa.c **** 
 127:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 128:./tmk_core/protocol/lufa/lufa.c **** USB_ClassInfo_MIDI_Device_t USB_MIDI_Interface =
 129:./tmk_core/protocol/lufa/lufa.c **** {
 130:./tmk_core/protocol/lufa/lufa.c ****   .Config =
 131:./tmk_core/protocol/lufa/lufa.c ****   {
 132:./tmk_core/protocol/lufa/lufa.c ****     .StreamingInterfaceNumber = AS_INTERFACE,
 133:./tmk_core/protocol/lufa/lufa.c ****     .DataINEndpoint           =
 134:./tmk_core/protocol/lufa/lufa.c ****     {
 135:./tmk_core/protocol/lufa/lufa.c ****       .Address          = MIDI_STREAM_IN_EPADDR,
 136:./tmk_core/protocol/lufa/lufa.c ****       .Size             = MIDI_STREAM_EPSIZE,
 137:./tmk_core/protocol/lufa/lufa.c ****       .Banks            = 1,
 138:./tmk_core/protocol/lufa/lufa.c ****     },
 139:./tmk_core/protocol/lufa/lufa.c ****     .DataOUTEndpoint          =
 140:./tmk_core/protocol/lufa/lufa.c ****     {
 141:./tmk_core/protocol/lufa/lufa.c ****       .Address          = MIDI_STREAM_OUT_EPADDR,
 142:./tmk_core/protocol/lufa/lufa.c ****       .Size             = MIDI_STREAM_EPSIZE,
 143:./tmk_core/protocol/lufa/lufa.c ****       .Banks            = 1,
 144:./tmk_core/protocol/lufa/lufa.c ****     },
 145:./tmk_core/protocol/lufa/lufa.c ****   },
 146:./tmk_core/protocol/lufa/lufa.c **** };
 147:./tmk_core/protocol/lufa/lufa.c **** 
 148:./tmk_core/protocol/lufa/lufa.c **** #define SYSEX_START_OR_CONT 0x40
 149:./tmk_core/protocol/lufa/lufa.c **** #define SYSEX_ENDS_IN_1 0x50
 150:./tmk_core/protocol/lufa/lufa.c **** #define SYSEX_ENDS_IN_2 0x60
 151:./tmk_core/protocol/lufa/lufa.c **** #define SYSEX_ENDS_IN_3 0x70
 152:./tmk_core/protocol/lufa/lufa.c **** 
 153:./tmk_core/protocol/lufa/lufa.c **** #define SYS_COMMON_1 0x50
 154:./tmk_core/protocol/lufa/lufa.c **** #define SYS_COMMON_2 0x20
 155:./tmk_core/protocol/lufa/lufa.c **** #define SYS_COMMON_3 0x30
 156:./tmk_core/protocol/lufa/lufa.c **** #endif
 157:./tmk_core/protocol/lufa/lufa.c **** 
 158:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 159:./tmk_core/protocol/lufa/lufa.c **** USB_ClassInfo_CDC_Device_t cdc_device =
 160:./tmk_core/protocol/lufa/lufa.c **** {
 161:./tmk_core/protocol/lufa/lufa.c ****   .Config =
 162:./tmk_core/protocol/lufa/lufa.c ****   {
 163:./tmk_core/protocol/lufa/lufa.c ****     .ControlInterfaceNumber = CCI_INTERFACE,
 164:./tmk_core/protocol/lufa/lufa.c ****     .DataINEndpoint         =
 165:./tmk_core/protocol/lufa/lufa.c ****     {
 166:./tmk_core/protocol/lufa/lufa.c ****       .Address		= CDC_IN_EPADDR,
 167:./tmk_core/protocol/lufa/lufa.c ****       .Size		= CDC_EPSIZE,
 168:./tmk_core/protocol/lufa/lufa.c ****       .Banks		= 1,
 169:./tmk_core/protocol/lufa/lufa.c ****     },
 170:./tmk_core/protocol/lufa/lufa.c ****     .DataOUTEndpoint	    =
 171:./tmk_core/protocol/lufa/lufa.c ****     {
 172:./tmk_core/protocol/lufa/lufa.c ****       .Address		= CDC_OUT_EPADDR,
 173:./tmk_core/protocol/lufa/lufa.c ****       .Size		= CDC_EPSIZE,
 174:./tmk_core/protocol/lufa/lufa.c ****       .Banks		= 1,
 175:./tmk_core/protocol/lufa/lufa.c ****     },
 176:./tmk_core/protocol/lufa/lufa.c ****     .NotificationEndpoint   =
 177:./tmk_core/protocol/lufa/lufa.c ****     {
 178:./tmk_core/protocol/lufa/lufa.c ****       .Address		= CDC_NOTIFICATION_EPADDR,
 179:./tmk_core/protocol/lufa/lufa.c ****       .Size		= CDC_NOTIFICATION_EPSIZE,
 180:./tmk_core/protocol/lufa/lufa.c ****       .Banks		= 1,
 181:./tmk_core/protocol/lufa/lufa.c ****     },
 182:./tmk_core/protocol/lufa/lufa.c ****   },
 183:./tmk_core/protocol/lufa/lufa.c **** };
 184:./tmk_core/protocol/lufa/lufa.c **** #endif
 185:./tmk_core/protocol/lufa/lufa.c **** 
 186:./tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
 187:./tmk_core/protocol/lufa/lufa.c **** 
 188:./tmk_core/protocol/lufa/lufa.c **** void raw_hid_send( uint8_t *data, uint8_t length )
 189:./tmk_core/protocol/lufa/lufa.c **** {
 190:./tmk_core/protocol/lufa/lufa.c **** 	// TODO: implement variable size packet
 191:./tmk_core/protocol/lufa/lufa.c **** 	if ( length != RAW_EPSIZE )
 192:./tmk_core/protocol/lufa/lufa.c **** 	{
 193:./tmk_core/protocol/lufa/lufa.c **** 		return;
 194:./tmk_core/protocol/lufa/lufa.c **** 	}
 195:./tmk_core/protocol/lufa/lufa.c **** 
 196:./tmk_core/protocol/lufa/lufa.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 197:./tmk_core/protocol/lufa/lufa.c **** 	{
 198:./tmk_core/protocol/lufa/lufa.c **** 		return;
 199:./tmk_core/protocol/lufa/lufa.c **** 	}
 200:./tmk_core/protocol/lufa/lufa.c **** 
 201:./tmk_core/protocol/lufa/lufa.c **** 	// TODO: decide if we allow calls to raw_hid_send() in the middle
 202:./tmk_core/protocol/lufa/lufa.c **** 	// of other endpoint usage.
 203:./tmk_core/protocol/lufa/lufa.c **** 	uint8_t ep = Endpoint_GetCurrentEndpoint();
 204:./tmk_core/protocol/lufa/lufa.c **** 
 205:./tmk_core/protocol/lufa/lufa.c **** 	Endpoint_SelectEndpoint(RAW_IN_EPNUM);
 206:./tmk_core/protocol/lufa/lufa.c **** 
 207:./tmk_core/protocol/lufa/lufa.c **** 	// Check to see if the host is ready to accept another packet
 208:./tmk_core/protocol/lufa/lufa.c **** 	if (Endpoint_IsINReady())
 209:./tmk_core/protocol/lufa/lufa.c **** 	{
 210:./tmk_core/protocol/lufa/lufa.c **** 		// Write data
 211:./tmk_core/protocol/lufa/lufa.c **** 		Endpoint_Write_Stream_LE(data, RAW_EPSIZE, NULL);
 212:./tmk_core/protocol/lufa/lufa.c **** 		// Finalize the stream transfer to send the last packet
 213:./tmk_core/protocol/lufa/lufa.c **** 		Endpoint_ClearIN();
 214:./tmk_core/protocol/lufa/lufa.c **** 	}
 215:./tmk_core/protocol/lufa/lufa.c **** 
 216:./tmk_core/protocol/lufa/lufa.c **** 	Endpoint_SelectEndpoint(ep);
 217:./tmk_core/protocol/lufa/lufa.c **** }
 218:./tmk_core/protocol/lufa/lufa.c **** 
 219:./tmk_core/protocol/lufa/lufa.c **** __attribute__ ((weak))
 220:./tmk_core/protocol/lufa/lufa.c **** void raw_hid_receive( uint8_t *data, uint8_t length )
 221:./tmk_core/protocol/lufa/lufa.c **** {
 222:./tmk_core/protocol/lufa/lufa.c **** 	// Users should #include "raw_hid.h" in their own code
 223:./tmk_core/protocol/lufa/lufa.c **** 	// and implement this function there. Leave this as weak linkage
 224:./tmk_core/protocol/lufa/lufa.c **** 	// so users can opt to not handle data coming in.
 225:./tmk_core/protocol/lufa/lufa.c **** }
 226:./tmk_core/protocol/lufa/lufa.c **** 
 227:./tmk_core/protocol/lufa/lufa.c **** static void raw_hid_task(void)
 228:./tmk_core/protocol/lufa/lufa.c **** {
 229:./tmk_core/protocol/lufa/lufa.c **** 	// Create a temporary buffer to hold the read in data from the host
 230:./tmk_core/protocol/lufa/lufa.c **** 	uint8_t data[RAW_EPSIZE];
 231:./tmk_core/protocol/lufa/lufa.c **** 	bool data_read = false;
 232:./tmk_core/protocol/lufa/lufa.c **** 
 233:./tmk_core/protocol/lufa/lufa.c **** 	// Device must be connected and configured for the task to run
 234:./tmk_core/protocol/lufa/lufa.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 235:./tmk_core/protocol/lufa/lufa.c **** 	return;
 236:./tmk_core/protocol/lufa/lufa.c **** 
 237:./tmk_core/protocol/lufa/lufa.c **** 	Endpoint_SelectEndpoint(RAW_OUT_EPNUM);
 238:./tmk_core/protocol/lufa/lufa.c **** 
 239:./tmk_core/protocol/lufa/lufa.c **** 	// Check to see if a packet has been sent from the host
 240:./tmk_core/protocol/lufa/lufa.c **** 	if (Endpoint_IsOUTReceived())
 241:./tmk_core/protocol/lufa/lufa.c **** 	{
 242:./tmk_core/protocol/lufa/lufa.c **** 		// Check to see if the packet contains data
 243:./tmk_core/protocol/lufa/lufa.c **** 		if (Endpoint_IsReadWriteAllowed())
 244:./tmk_core/protocol/lufa/lufa.c **** 		{
 245:./tmk_core/protocol/lufa/lufa.c **** 			/* Read data */
 246:./tmk_core/protocol/lufa/lufa.c **** 			Endpoint_Read_Stream_LE(data, sizeof(data), NULL);
 247:./tmk_core/protocol/lufa/lufa.c **** 			data_read = true;
 248:./tmk_core/protocol/lufa/lufa.c **** 		}
 249:./tmk_core/protocol/lufa/lufa.c **** 
 250:./tmk_core/protocol/lufa/lufa.c **** 		// Finalize the stream transfer to receive the last packet
 251:./tmk_core/protocol/lufa/lufa.c **** 		Endpoint_ClearOUT();
 252:./tmk_core/protocol/lufa/lufa.c **** 
 253:./tmk_core/protocol/lufa/lufa.c **** 		if ( data_read )
 254:./tmk_core/protocol/lufa/lufa.c **** 		{
 255:./tmk_core/protocol/lufa/lufa.c **** 			raw_hid_receive( data, sizeof(data) );
 256:./tmk_core/protocol/lufa/lufa.c **** 		}
 257:./tmk_core/protocol/lufa/lufa.c **** 	}
 258:./tmk_core/protocol/lufa/lufa.c **** }
 259:./tmk_core/protocol/lufa/lufa.c **** #endif
 260:./tmk_core/protocol/lufa/lufa.c **** 
 261:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 262:./tmk_core/protocol/lufa/lufa.c ****  * Console
 263:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 264:./tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 265:./tmk_core/protocol/lufa/lufa.c **** static void Console_Task(void)
 266:./tmk_core/protocol/lufa/lufa.c **** {
 267:./tmk_core/protocol/lufa/lufa.c ****     /* Device must be connected and configured for the task to run */
 268:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 269:./tmk_core/protocol/lufa/lufa.c ****         return;
 270:./tmk_core/protocol/lufa/lufa.c **** 
 271:./tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = Endpoint_GetCurrentEndpoint();
 272:./tmk_core/protocol/lufa/lufa.c **** 
 273:./tmk_core/protocol/lufa/lufa.c **** #if 0
 274:./tmk_core/protocol/lufa/lufa.c ****     // TODO: impl receivechar()/recvchar()
 275:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_OUT_EPNUM);
 276:./tmk_core/protocol/lufa/lufa.c **** 
 277:./tmk_core/protocol/lufa/lufa.c ****     /* Check to see if a packet has been sent from the host */
 278:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsOUTReceived())
 279:./tmk_core/protocol/lufa/lufa.c ****     {
 280:./tmk_core/protocol/lufa/lufa.c ****         /* Check to see if the packet contains data */
 281:./tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsReadWriteAllowed())
 282:./tmk_core/protocol/lufa/lufa.c ****         {
 283:./tmk_core/protocol/lufa/lufa.c ****             /* Create a temporary buffer to hold the read in report from the host */
 284:./tmk_core/protocol/lufa/lufa.c ****             uint8_t ConsoleData[CONSOLE_EPSIZE];
 285:./tmk_core/protocol/lufa/lufa.c **** 
 286:./tmk_core/protocol/lufa/lufa.c ****             /* Read Console Report Data */
 287:./tmk_core/protocol/lufa/lufa.c ****             Endpoint_Read_Stream_LE(&ConsoleData, sizeof(ConsoleData), NULL);
 288:./tmk_core/protocol/lufa/lufa.c **** 
 289:./tmk_core/protocol/lufa/lufa.c ****             /* Process Console Report Data */
 290:./tmk_core/protocol/lufa/lufa.c ****             //ProcessConsoleHIDReport(ConsoleData);
 291:./tmk_core/protocol/lufa/lufa.c ****         }
 292:./tmk_core/protocol/lufa/lufa.c **** 
 293:./tmk_core/protocol/lufa/lufa.c ****         /* Finalize the stream transfer to send the last packet */
 294:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearOUT();
 295:./tmk_core/protocol/lufa/lufa.c ****     }
 296:./tmk_core/protocol/lufa/lufa.c **** #endif
 297:./tmk_core/protocol/lufa/lufa.c **** 
 298:./tmk_core/protocol/lufa/lufa.c ****     /* IN packet */
 299:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_IN_EPNUM);
 300:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 301:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
 302:./tmk_core/protocol/lufa/lufa.c ****         return;
 303:./tmk_core/protocol/lufa/lufa.c ****     }
 304:./tmk_core/protocol/lufa/lufa.c **** 
 305:./tmk_core/protocol/lufa/lufa.c ****     // fill empty bank
 306:./tmk_core/protocol/lufa/lufa.c ****     while (Endpoint_IsReadWriteAllowed())
 307:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_8(0);
 308:./tmk_core/protocol/lufa/lufa.c **** 
 309:./tmk_core/protocol/lufa/lufa.c ****     // flash senchar packet
 310:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady()) {
 311:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 312:./tmk_core/protocol/lufa/lufa.c ****     }
 313:./tmk_core/protocol/lufa/lufa.c **** 
 314:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 315:./tmk_core/protocol/lufa/lufa.c **** }
 316:./tmk_core/protocol/lufa/lufa.c **** #endif
 317:./tmk_core/protocol/lufa/lufa.c **** 
 318:./tmk_core/protocol/lufa/lufa.c **** 
 319:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 320:./tmk_core/protocol/lufa/lufa.c ****  * USB Events
 321:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 322:./tmk_core/protocol/lufa/lufa.c **** /*
 323:./tmk_core/protocol/lufa/lufa.c ****  * Event Order of Plug in:
 324:./tmk_core/protocol/lufa/lufa.c ****  * 0) EVENT_USB_Device_Connect
 325:./tmk_core/protocol/lufa/lufa.c ****  * 1) EVENT_USB_Device_Suspend
 326:./tmk_core/protocol/lufa/lufa.c ****  * 2) EVENT_USB_Device_Reset
 327:./tmk_core/protocol/lufa/lufa.c ****  * 3) EVENT_USB_Device_Wake
 328:./tmk_core/protocol/lufa/lufa.c **** */
 329:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Connect(void)
 330:./tmk_core/protocol/lufa/lufa.c **** {
 331:./tmk_core/protocol/lufa/lufa.c ****     print("[C]");
 332:./tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 333:./tmk_core/protocol/lufa/lufa.c ****     if (!USB_IsInitialized) {
 334:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 335:./tmk_core/protocol/lufa/lufa.c ****         USB_Init();
 336:./tmk_core/protocol/lufa/lufa.c ****         USB_Device_EnableSOFEvents();
 337:./tmk_core/protocol/lufa/lufa.c ****     }
 338:./tmk_core/protocol/lufa/lufa.c **** }
 339:./tmk_core/protocol/lufa/lufa.c **** 
 340:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Disconnect(void)
 341:./tmk_core/protocol/lufa/lufa.c **** {
 342:./tmk_core/protocol/lufa/lufa.c ****     print("[D]");
 343:./tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 344:./tmk_core/protocol/lufa/lufa.c ****     USB_IsInitialized = false;
 345:./tmk_core/protocol/lufa/lufa.c **** /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 346:./tmk_core/protocol/lufa/lufa.c ****     if (USB_IsInitialized) {
 347:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();  // Disable all interrupts
 348:./tmk_core/protocol/lufa/lufa.c **** 	USB_Controller_Enable();
 349:./tmk_core/protocol/lufa/lufa.c ****         USB_INT_Enable(USB_INT_VBUSTI);
 350:./tmk_core/protocol/lufa/lufa.c ****     }
 351:./tmk_core/protocol/lufa/lufa.c **** */
 352:./tmk_core/protocol/lufa/lufa.c **** }
 353:./tmk_core/protocol/lufa/lufa.c **** 
 354:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Reset(void)
 355:./tmk_core/protocol/lufa/lufa.c **** {
 356:./tmk_core/protocol/lufa/lufa.c ****     print("[R]");
 357:./tmk_core/protocol/lufa/lufa.c **** }
 358:./tmk_core/protocol/lufa/lufa.c **** 
 359:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_Suspend()
 360:./tmk_core/protocol/lufa/lufa.c **** {
 361:./tmk_core/protocol/lufa/lufa.c ****     print("[S]");
 362:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 363:./tmk_core/protocol/lufa/lufa.c ****     sleep_led_enable();
 364:./tmk_core/protocol/lufa/lufa.c **** #endif
 365:./tmk_core/protocol/lufa/lufa.c **** }
 366:./tmk_core/protocol/lufa/lufa.c **** 
 367:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_WakeUp()
 368:./tmk_core/protocol/lufa/lufa.c **** {
 369:./tmk_core/protocol/lufa/lufa.c ****     print("[W]");
 370:./tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 371:./tmk_core/protocol/lufa/lufa.c **** 
 372:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 373:./tmk_core/protocol/lufa/lufa.c ****     sleep_led_disable();
 374:./tmk_core/protocol/lufa/lufa.c ****     // NOTE: converters may not accept this
 375:./tmk_core/protocol/lufa/lufa.c ****     led_set(host_keyboard_leds());
 376:./tmk_core/protocol/lufa/lufa.c **** #endif
 377:./tmk_core/protocol/lufa/lufa.c **** }
 378:./tmk_core/protocol/lufa/lufa.c **** 
 379:./tmk_core/protocol/lufa/lufa.c **** 
 380:./tmk_core/protocol/lufa/lufa.c **** 
 381:./tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 382:./tmk_core/protocol/lufa/lufa.c **** static bool console_flush = false;
 383:./tmk_core/protocol/lufa/lufa.c **** #define CONSOLE_FLUSH_SET(b)   do { \
 384:./tmk_core/protocol/lufa/lufa.c ****   ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {\
 385:./tmk_core/protocol/lufa/lufa.c ****     console_flush = b; \
 386:./tmk_core/protocol/lufa/lufa.c ****   } \
 387:./tmk_core/protocol/lufa/lufa.c **** } while (0)
 388:./tmk_core/protocol/lufa/lufa.c **** 
 389:./tmk_core/protocol/lufa/lufa.c **** // called every 1ms
 390:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_StartOfFrame(void)
 391:./tmk_core/protocol/lufa/lufa.c **** {
 392:./tmk_core/protocol/lufa/lufa.c ****     static uint8_t count;
 393:./tmk_core/protocol/lufa/lufa.c ****     if (++count % 50) return;
 394:./tmk_core/protocol/lufa/lufa.c ****     count = 0;
 395:./tmk_core/protocol/lufa/lufa.c **** 
 396:./tmk_core/protocol/lufa/lufa.c ****     if (!console_flush) return;
 397:./tmk_core/protocol/lufa/lufa.c ****     Console_Task();
 398:./tmk_core/protocol/lufa/lufa.c ****     console_flush = false;
 399:./tmk_core/protocol/lufa/lufa.c **** }
 400:./tmk_core/protocol/lufa/lufa.c **** 
 401:./tmk_core/protocol/lufa/lufa.c **** #endif
 402:./tmk_core/protocol/lufa/lufa.c **** 
 403:./tmk_core/protocol/lufa/lufa.c **** /** Event handler for the USB_ConfigurationChanged event.
 404:./tmk_core/protocol/lufa/lufa.c ****  * This is fired when the host sets the current configuration of the USB device after enumeration.
 405:./tmk_core/protocol/lufa/lufa.c ****  *
 406:./tmk_core/protocol/lufa/lufa.c ****  * ATMega32u2 supports dual bank(ping-pong mode) only on endpoint 3 and 4,
 407:./tmk_core/protocol/lufa/lufa.c ****  * it is safe to use singl bank for all endpoints.
 408:./tmk_core/protocol/lufa/lufa.c ****  */
 409:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_ConfigurationChanged(void)
 410:./tmk_core/protocol/lufa/lufa.c **** {
 411:./tmk_core/protocol/lufa/lufa.c ****     bool ConfigSuccess = true;
 412:./tmk_core/protocol/lufa/lufa.c **** 
 413:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Keyboard HID Report Endpoints */
 414:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(KEYBOARD_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 415:./tmk_core/protocol/lufa/lufa.c ****                                      KEYBOARD_EPSIZE, ENDPOINT_BANK_SINGLE);
 416:./tmk_core/protocol/lufa/lufa.c **** 
 417:./tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 418:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Mouse HID Report Endpoint */
 419:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(MOUSE_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 420:./tmk_core/protocol/lufa/lufa.c ****                                      MOUSE_EPSIZE, ENDPOINT_BANK_SINGLE);
 421:./tmk_core/protocol/lufa/lufa.c **** #endif
 422:./tmk_core/protocol/lufa/lufa.c **** 
 423:./tmk_core/protocol/lufa/lufa.c **** #ifdef EXTRAKEY_ENABLE
 424:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Extra HID Report Endpoint */
 425:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(EXTRAKEY_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 426:./tmk_core/protocol/lufa/lufa.c ****                                      EXTRAKEY_EPSIZE, ENDPOINT_BANK_SINGLE);
 427:./tmk_core/protocol/lufa/lufa.c **** #endif
 428:./tmk_core/protocol/lufa/lufa.c **** 
 429:./tmk_core/protocol/lufa/lufa.c **** #ifdef RAW_ENABLE
 430:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Raw HID Report Endpoints */
 431:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(RAW_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 432:./tmk_core/protocol/lufa/lufa.c **** 									 RAW_EPSIZE, ENDPOINT_BANK_SINGLE);
 433:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(RAW_OUT_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_OUT,
 434:./tmk_core/protocol/lufa/lufa.c **** 									 RAW_EPSIZE, ENDPOINT_BANK_SINGLE);
 435:./tmk_core/protocol/lufa/lufa.c **** #endif
 436:./tmk_core/protocol/lufa/lufa.c **** 
 437:./tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 438:./tmk_core/protocol/lufa/lufa.c ****     /* Setup Console HID Report Endpoints */
 439:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(CONSOLE_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 440:./tmk_core/protocol/lufa/lufa.c ****                                      CONSOLE_EPSIZE, ENDPOINT_BANK_SINGLE);
 441:./tmk_core/protocol/lufa/lufa.c **** #if 0
 442:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(CONSOLE_OUT_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_OUT,
 443:./tmk_core/protocol/lufa/lufa.c ****                                      CONSOLE_EPSIZE, ENDPOINT_BANK_SINGLE);
 444:./tmk_core/protocol/lufa/lufa.c **** #endif
 445:./tmk_core/protocol/lufa/lufa.c **** #endif
 446:./tmk_core/protocol/lufa/lufa.c **** 
 447:./tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 448:./tmk_core/protocol/lufa/lufa.c ****     /* Setup NKRO HID Report Endpoints */
 449:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= ENDPOINT_CONFIG(NKRO_IN_EPNUM, EP_TYPE_INTERRUPT, ENDPOINT_DIR_IN,
 450:./tmk_core/protocol/lufa/lufa.c ****                                      NKRO_EPSIZE, ENDPOINT_BANK_SINGLE);
 451:./tmk_core/protocol/lufa/lufa.c **** #endif
 452:./tmk_core/protocol/lufa/lufa.c **** 
 453:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 454:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(MIDI_STREAM_IN_EPADDR, EP_TYPE_BULK, MIDI_STREAM_EP
 455:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(MIDI_STREAM_OUT_EPADDR, EP_TYPE_BULK, MIDI_STREAM_E
 456:./tmk_core/protocol/lufa/lufa.c **** #endif
 457:./tmk_core/protocol/lufa/lufa.c **** 
 458:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 459:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_NOTIFICATION_EPADDR, EP_TYPE_INTERRUPT, CDC_NOT
 460:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_OUT_EPADDR, EP_TYPE_BULK, CDC_EPSIZE, ENDPOINT_
 461:./tmk_core/protocol/lufa/lufa.c ****     ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_IN_EPADDR, EP_TYPE_BULK, CDC_EPSIZE, ENDPOINT_B
 462:./tmk_core/protocol/lufa/lufa.c **** #endif
 463:./tmk_core/protocol/lufa/lufa.c **** }
 464:./tmk_core/protocol/lufa/lufa.c **** 
 465:./tmk_core/protocol/lufa/lufa.c **** /*
 466:./tmk_core/protocol/lufa/lufa.c **** Appendix G: HID Request Support Requirements
 467:./tmk_core/protocol/lufa/lufa.c **** 
 468:./tmk_core/protocol/lufa/lufa.c **** The following table enumerates the requests that need to be supported by various types of HID class
 469:./tmk_core/protocol/lufa/lufa.c **** 
 470:./tmk_core/protocol/lufa/lufa.c **** Device type     GetReport   SetReport   GetIdle     SetIdle     GetProtocol SetProtocol
 471:./tmk_core/protocol/lufa/lufa.c **** ------------------------------------------------------------------------------------------
 472:./tmk_core/protocol/lufa/lufa.c **** Boot Mouse      Required    Optional    Optional    Optional    Required    Required
 473:./tmk_core/protocol/lufa/lufa.c **** Non-Boot Mouse  Required    Optional    Optional    Optional    Optional    Optional
 474:./tmk_core/protocol/lufa/lufa.c **** Boot Keyboard   Required    Optional    Required    Required    Required    Required
 475:./tmk_core/protocol/lufa/lufa.c **** Non-Boot Keybrd Required    Optional    Required    Required    Optional    Optional
 476:./tmk_core/protocol/lufa/lufa.c **** Other Device    Required    Optional    Optional    Optional    Optional    Optional
 477:./tmk_core/protocol/lufa/lufa.c **** */
 478:./tmk_core/protocol/lufa/lufa.c **** /** Event handler for the USB_ControlRequest event.
 479:./tmk_core/protocol/lufa/lufa.c ****  *  This is fired before passing along unhandled control requests to the library for processing int
 480:./tmk_core/protocol/lufa/lufa.c ****  */
 481:./tmk_core/protocol/lufa/lufa.c **** void EVENT_USB_Device_ControlRequest(void)
 482:./tmk_core/protocol/lufa/lufa.c **** {
 483:./tmk_core/protocol/lufa/lufa.c ****     uint8_t* ReportData = NULL;
 484:./tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 485:./tmk_core/protocol/lufa/lufa.c **** 
 486:./tmk_core/protocol/lufa/lufa.c ****     /* Handle HID Class specific requests */
 487:./tmk_core/protocol/lufa/lufa.c ****     switch (USB_ControlRequest.bRequest)
 488:./tmk_core/protocol/lufa/lufa.c ****     {
 489:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetReport:
 490:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 491:./tmk_core/protocol/lufa/lufa.c ****             {
 492:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 493:./tmk_core/protocol/lufa/lufa.c **** 
 494:./tmk_core/protocol/lufa/lufa.c ****                 // Interface
 495:./tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 496:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 497:./tmk_core/protocol/lufa/lufa.c ****                     // TODO: test/check
 498:./tmk_core/protocol/lufa/lufa.c ****                     ReportData = (uint8_t*)&keyboard_report_sent;
 499:./tmk_core/protocol/lufa/lufa.c ****                     ReportSize = sizeof(keyboard_report_sent);
 500:./tmk_core/protocol/lufa/lufa.c ****                     break;
 501:./tmk_core/protocol/lufa/lufa.c ****                 }
 502:./tmk_core/protocol/lufa/lufa.c **** 
 503:./tmk_core/protocol/lufa/lufa.c ****                 /* Write the report data to the control endpoint */
 504:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_Control_Stream_LE(ReportData, ReportSize);
 505:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearOUT();
 506:./tmk_core/protocol/lufa/lufa.c ****             }
 507:./tmk_core/protocol/lufa/lufa.c **** 
 508:./tmk_core/protocol/lufa/lufa.c ****             break;
 509:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetReport:
 510:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 511:./tmk_core/protocol/lufa/lufa.c ****             {
 512:./tmk_core/protocol/lufa/lufa.c **** 
 513:./tmk_core/protocol/lufa/lufa.c ****                 // Interface
 514:./tmk_core/protocol/lufa/lufa.c ****                 switch (USB_ControlRequest.wIndex) {
 515:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 516:./tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 517:./tmk_core/protocol/lufa/lufa.c ****                 case NKRO_INTERFACE:
 518:./tmk_core/protocol/lufa/lufa.c **** #endif
 519:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 520:./tmk_core/protocol/lufa/lufa.c **** 
 521:./tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsOUTReceived())) {
 522:./tmk_core/protocol/lufa/lufa.c ****                         if (USB_DeviceState == DEVICE_STATE_Unattached)
 523:./tmk_core/protocol/lufa/lufa.c ****                           return;
 524:./tmk_core/protocol/lufa/lufa.c ****                     }
 525:./tmk_core/protocol/lufa/lufa.c ****                     keyboard_led_stats = Endpoint_Read_8();
 526:./tmk_core/protocol/lufa/lufa.c **** 
 527:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearOUT();
 528:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 529:./tmk_core/protocol/lufa/lufa.c ****                     break;
 530:./tmk_core/protocol/lufa/lufa.c ****                 }
 531:./tmk_core/protocol/lufa/lufa.c **** 
 532:./tmk_core/protocol/lufa/lufa.c ****             }
 533:./tmk_core/protocol/lufa/lufa.c **** 
 534:./tmk_core/protocol/lufa/lufa.c ****             break;
 535:./tmk_core/protocol/lufa/lufa.c **** 
 536:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetProtocol:
 537:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 538:./tmk_core/protocol/lufa/lufa.c ****             {
 539:./tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 540:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 541:./tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsINReady()));
 542:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 543:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearIN();
 544:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 545:./tmk_core/protocol/lufa/lufa.c ****                 }
 546:./tmk_core/protocol/lufa/lufa.c ****             }
 547:./tmk_core/protocol/lufa/lufa.c **** 
 548:./tmk_core/protocol/lufa/lufa.c ****             break;
 549:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetProtocol:
 550:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 551:./tmk_core/protocol/lufa/lufa.c ****             {
 552:./tmk_core/protocol/lufa/lufa.c ****                 if (USB_ControlRequest.wIndex == KEYBOARD_INTERFACE) {
 553:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 554:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 555:./tmk_core/protocol/lufa/lufa.c **** 
 556:./tmk_core/protocol/lufa/lufa.c ****                     keyboard_protocol = (USB_ControlRequest.wValue & 0xFF);
 557:./tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 558:./tmk_core/protocol/lufa/lufa.c ****                 }
 559:./tmk_core/protocol/lufa/lufa.c ****             }
 560:./tmk_core/protocol/lufa/lufa.c **** 
 561:./tmk_core/protocol/lufa/lufa.c ****             break;
 562:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_SetIdle:
 563:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_I
 564:./tmk_core/protocol/lufa/lufa.c ****             {
 565:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 566:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 567:./tmk_core/protocol/lufa/lufa.c **** 
 568:./tmk_core/protocol/lufa/lufa.c ****                 keyboard_idle = ((USB_ControlRequest.wValue & 0xFF00) >> 8);
 569:./tmk_core/protocol/lufa/lufa.c ****             }
 570:./tmk_core/protocol/lufa/lufa.c **** 
 571:./tmk_core/protocol/lufa/lufa.c ****             break;
 572:./tmk_core/protocol/lufa/lufa.c ****         case HID_REQ_GetIdle:
 573:./tmk_core/protocol/lufa/lufa.c ****             if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_I
 574:./tmk_core/protocol/lufa/lufa.c ****             {
 575:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearSETUP();
 576:./tmk_core/protocol/lufa/lufa.c ****                 while (!(Endpoint_IsINReady()));
 577:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 578:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearIN();
 579:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 580:./tmk_core/protocol/lufa/lufa.c ****             }
 581:./tmk_core/protocol/lufa/lufa.c **** 
 582:./tmk_core/protocol/lufa/lufa.c ****             break;
 583:./tmk_core/protocol/lufa/lufa.c ****     }
 584:./tmk_core/protocol/lufa/lufa.c **** 
 585:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
 586:./tmk_core/protocol/lufa/lufa.c ****     CDC_Device_ProcessControlRequest(&cdc_device);
 587:./tmk_core/protocol/lufa/lufa.c **** #endif
 588:./tmk_core/protocol/lufa/lufa.c **** }
 589:./tmk_core/protocol/lufa/lufa.c **** 
 590:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 591:./tmk_core/protocol/lufa/lufa.c ****  * Host driver
 592:./tmk_core/protocol/lufa/lufa.c **** p
 593:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 594:./tmk_core/protocol/lufa/lufa.c **** static uint8_t keyboard_leds(void)
 595:./tmk_core/protocol/lufa/lufa.c **** {
  15               		.loc 1 595 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 596:./tmk_core/protocol/lufa/lufa.c ****     return keyboard_led_stats;
  21               		.loc 1 596 5 view .LVU1
 597:./tmk_core/protocol/lufa/lufa.c **** }
  22               		.loc 1 597 1 is_stmt 0 view .LVU2
  23 0000 8091 0000 		lds r24,keyboard_led_stats
  24               	/* epilogue start */
  25 0004 0895      		ret
  26               		.cfi_endproc
  27               	.LFE128:
  29               		.section	.text.send_consumer,"ax",@progbits
  31               	send_consumer:
  32               	.LVL0:
  33               	.LFB133:
 598:./tmk_core/protocol/lufa/lufa.c **** 
 599:./tmk_core/protocol/lufa/lufa.c **** #define SendToUSB 1
 600:./tmk_core/protocol/lufa/lufa.c **** #define SendToBT  2
 601:./tmk_core/protocol/lufa/lufa.c **** #define SendToBLE 4
 602:./tmk_core/protocol/lufa/lufa.c **** 
 603:./tmk_core/protocol/lufa/lufa.c **** static inline uint8_t where_to_send(void) {
 604:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
 605:./tmk_core/protocol/lufa/lufa.c **** #if 0
 606:./tmk_core/protocol/lufa/lufa.c ****   if (adafruit_ble_is_connected()) {
 607:./tmk_core/protocol/lufa/lufa.c ****     // For testing, send to BLE as a priority
 608:./tmk_core/protocol/lufa/lufa.c ****     return SendToBLE;
 609:./tmk_core/protocol/lufa/lufa.c ****   }
 610:./tmk_core/protocol/lufa/lufa.c **** #endif
 611:./tmk_core/protocol/lufa/lufa.c **** 
 612:./tmk_core/protocol/lufa/lufa.c ****   // This is the real policy
 613:./tmk_core/protocol/lufa/lufa.c ****   if (USB_DeviceState != DEVICE_STATE_Configured) {
 614:./tmk_core/protocol/lufa/lufa.c ****     if (adafruit_ble_is_connected()) {
 615:./tmk_core/protocol/lufa/lufa.c ****       return SendToBLE;
 616:./tmk_core/protocol/lufa/lufa.c ****     }
 617:./tmk_core/protocol/lufa/lufa.c ****   }
 618:./tmk_core/protocol/lufa/lufa.c **** #endif
 619:./tmk_core/protocol/lufa/lufa.c ****   return ((USB_DeviceState == DEVICE_STATE_Configured) ? SendToUSB : 0)
 620:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 621:./tmk_core/protocol/lufa/lufa.c ****     || SendToBT
 622:./tmk_core/protocol/lufa/lufa.c **** #endif
 623:./tmk_core/protocol/lufa/lufa.c ****     ;
 624:./tmk_core/protocol/lufa/lufa.c **** }
 625:./tmk_core/protocol/lufa/lufa.c **** 
 626:./tmk_core/protocol/lufa/lufa.c **** static void send_keyboard(report_keyboard_t *report)
 627:./tmk_core/protocol/lufa/lufa.c **** {
 628:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 629:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0xFD);
 630:./tmk_core/protocol/lufa/lufa.c ****     for (uint8_t i = 0; i < KEYBOARD_EPSIZE; i++) {
 631:./tmk_core/protocol/lufa/lufa.c ****         bluefruit_serial_send(report->raw[i]);
 632:./tmk_core/protocol/lufa/lufa.c ****     }
 633:./tmk_core/protocol/lufa/lufa.c **** #endif
 634:./tmk_core/protocol/lufa/lufa.c **** 
 635:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 636:./tmk_core/protocol/lufa/lufa.c ****     uint8_t where = where_to_send();
 637:./tmk_core/protocol/lufa/lufa.c **** 
 638:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
 639:./tmk_core/protocol/lufa/lufa.c ****     if (where & SendToBLE) {
 640:./tmk_core/protocol/lufa/lufa.c ****       adafruit_ble_send_keys(report->mods, report->keys, sizeof(report->keys));
 641:./tmk_core/protocol/lufa/lufa.c ****     }
 642:./tmk_core/protocol/lufa/lufa.c **** #endif
 643:./tmk_core/protocol/lufa/lufa.c **** 
 644:./tmk_core/protocol/lufa/lufa.c ****     if (!(where & SendToUSB)) {
 645:./tmk_core/protocol/lufa/lufa.c ****       return;
 646:./tmk_core/protocol/lufa/lufa.c ****     }
 647:./tmk_core/protocol/lufa/lufa.c **** 
 648:./tmk_core/protocol/lufa/lufa.c ****     /* Select the Keyboard Report Endpoint */
 649:./tmk_core/protocol/lufa/lufa.c **** #ifdef NKRO_ENABLE
 650:./tmk_core/protocol/lufa/lufa.c ****     if (keyboard_protocol && keymap_config.nkro) {
 651:./tmk_core/protocol/lufa/lufa.c ****         /* Report protocol - NKRO */
 652:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(NKRO_IN_EPNUM);
 653:./tmk_core/protocol/lufa/lufa.c **** 
 654:./tmk_core/protocol/lufa/lufa.c ****         /* Check if write ready for a polling interval around 1ms */
 655:./tmk_core/protocol/lufa/lufa.c ****         while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(4);
 656:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 657:./tmk_core/protocol/lufa/lufa.c **** 
 658:./tmk_core/protocol/lufa/lufa.c ****         /* Write Keyboard Report Data */
 659:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(report, NKRO_EPSIZE, NULL);
 660:./tmk_core/protocol/lufa/lufa.c ****     }
 661:./tmk_core/protocol/lufa/lufa.c ****     else
 662:./tmk_core/protocol/lufa/lufa.c **** #endif
 663:./tmk_core/protocol/lufa/lufa.c ****     {
 664:./tmk_core/protocol/lufa/lufa.c ****         /* Boot protocol */
 665:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(KEYBOARD_IN_EPNUM);
 666:./tmk_core/protocol/lufa/lufa.c **** 
 667:./tmk_core/protocol/lufa/lufa.c ****         /* Check if write ready for a polling interval around 10ms */
 668:./tmk_core/protocol/lufa/lufa.c ****         while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 669:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 670:./tmk_core/protocol/lufa/lufa.c **** 
 671:./tmk_core/protocol/lufa/lufa.c ****         /* Write Keyboard Report Data */
 672:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_Write_Stream_LE(report, KEYBOARD_EPSIZE, NULL);
 673:./tmk_core/protocol/lufa/lufa.c ****     }
 674:./tmk_core/protocol/lufa/lufa.c **** 
 675:./tmk_core/protocol/lufa/lufa.c ****     /* Finalize the stream transfer to send the last packet */
 676:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 677:./tmk_core/protocol/lufa/lufa.c **** 
 678:./tmk_core/protocol/lufa/lufa.c ****     keyboard_report_sent = *report;
 679:./tmk_core/protocol/lufa/lufa.c **** }
 680:./tmk_core/protocol/lufa/lufa.c **** 
 681:./tmk_core/protocol/lufa/lufa.c **** static void send_mouse(report_mouse_t *report)
 682:./tmk_core/protocol/lufa/lufa.c **** {
 683:./tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 684:./tmk_core/protocol/lufa/lufa.c **** 
 685:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 686:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0xFD);
 687:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 688:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x03);
 689:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->buttons);
 690:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->x);
 691:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->y);
 692:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->v); // should try sending the wheel v here
 693:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(report->h); // should try sending the wheel h here
 694:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 695:./tmk_core/protocol/lufa/lufa.c **** #endif
 696:./tmk_core/protocol/lufa/lufa.c **** 
 697:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 698:./tmk_core/protocol/lufa/lufa.c **** 
 699:./tmk_core/protocol/lufa/lufa.c ****     uint8_t where = where_to_send();
 700:./tmk_core/protocol/lufa/lufa.c **** 
 701:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
 702:./tmk_core/protocol/lufa/lufa.c ****     if (where & SendToBLE) {
 703:./tmk_core/protocol/lufa/lufa.c ****       // FIXME: mouse buttons
 704:./tmk_core/protocol/lufa/lufa.c ****       adafruit_ble_send_mouse_move(report->x, report->y, report->v, report->h);
 705:./tmk_core/protocol/lufa/lufa.c ****     }
 706:./tmk_core/protocol/lufa/lufa.c **** #endif
 707:./tmk_core/protocol/lufa/lufa.c ****     if (!(where & SendToUSB)) {
 708:./tmk_core/protocol/lufa/lufa.c ****       return;
 709:./tmk_core/protocol/lufa/lufa.c ****     }
 710:./tmk_core/protocol/lufa/lufa.c **** 
 711:./tmk_core/protocol/lufa/lufa.c ****     /* Select the Mouse Report Endpoint */
 712:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(MOUSE_IN_EPNUM);
 713:./tmk_core/protocol/lufa/lufa.c **** 
 714:./tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 715:./tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 716:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 717:./tmk_core/protocol/lufa/lufa.c **** 
 718:./tmk_core/protocol/lufa/lufa.c ****     /* Write Mouse Report Data */
 719:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(report, sizeof(report_mouse_t), NULL);
 720:./tmk_core/protocol/lufa/lufa.c **** 
 721:./tmk_core/protocol/lufa/lufa.c ****     /* Finalize the stream transfer to send the last packet */
 722:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 723:./tmk_core/protocol/lufa/lufa.c **** #endif
 724:./tmk_core/protocol/lufa/lufa.c **** }
 725:./tmk_core/protocol/lufa/lufa.c **** 
 726:./tmk_core/protocol/lufa/lufa.c **** static void send_system(uint16_t data)
 727:./tmk_core/protocol/lufa/lufa.c **** {
 728:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 729:./tmk_core/protocol/lufa/lufa.c **** 
 730:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 731:./tmk_core/protocol/lufa/lufa.c ****         return;
 732:./tmk_core/protocol/lufa/lufa.c **** 
 733:./tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {
 734:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 735:./tmk_core/protocol/lufa/lufa.c ****         .usage = data - SYSTEM_POWER_DOWN + 1
 736:./tmk_core/protocol/lufa/lufa.c ****     };
 737:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(EXTRAKEY_IN_EPNUM);
 738:./tmk_core/protocol/lufa/lufa.c **** 
 739:./tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 740:./tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
 741:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 742:./tmk_core/protocol/lufa/lufa.c **** 
 743:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 744:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 745:./tmk_core/protocol/lufa/lufa.c **** }
 746:./tmk_core/protocol/lufa/lufa.c **** 
 747:./tmk_core/protocol/lufa/lufa.c **** static void send_consumer(uint16_t data)
 748:./tmk_core/protocol/lufa/lufa.c **** {
  34               		.loc 1 748 1 is_stmt 1 view -0
  35               		.cfi_startproc
  36               		.loc 1 748 1 is_stmt 0 view .LVU4
  37 0000 CF93      		push r28
  38               	.LCFI0:
  39               		.cfi_def_cfa_offset 3
  40               		.cfi_offset 28, -2
  41 0002 DF93      		push r29
  42               	.LCFI1:
  43               		.cfi_def_cfa_offset 4
  44               		.cfi_offset 29, -3
  45 0004 00D0      		rcall .
  46 0006 0F92      		push __tmp_reg__
  47               	.LCFI2:
  48               		.cfi_def_cfa_offset 7
  49 0008 CDB7      		in r28,__SP_L__
  50 000a DEB7      		in r29,__SP_H__
  51               	.LCFI3:
  52               		.cfi_def_cfa_register 28
  53               	/* prologue: function */
  54               	/* frame size = 3 */
  55               	/* stack size = 5 */
  56               	.L__stack_usage = 5
  57 000c 9C01      		movw r18,r24
 749:./tmk_core/protocol/lufa/lufa.c **** 
 750:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 751:./tmk_core/protocol/lufa/lufa.c ****     static uint16_t last_data = 0;
 752:./tmk_core/protocol/lufa/lufa.c ****     if (data == last_data) return;
 753:./tmk_core/protocol/lufa/lufa.c ****     last_data = data;
 754:./tmk_core/protocol/lufa/lufa.c ****     uint16_t bitmap = CONSUMER2BLUEFRUIT(data);
 755:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0xFD);
 756:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 757:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x02);
 758:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send((bitmap>>8)&0xFF);
 759:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(bitmap&0xFF);
 760:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 761:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 762:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 763:./tmk_core/protocol/lufa/lufa.c ****     bluefruit_serial_send(0x00);
 764:./tmk_core/protocol/lufa/lufa.c **** #endif
 765:./tmk_core/protocol/lufa/lufa.c **** 
 766:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
  58               		.loc 1 766 5 is_stmt 1 view .LVU5
  59               	.LVL1:
 767:./tmk_core/protocol/lufa/lufa.c ****     uint8_t where = where_to_send();
  60               		.loc 1 767 5 view .LVU6
  61               	.LBB177:
  62               	.LBI177:
 603:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
  63               		.loc 1 603 23 view .LVU7
  64               	.LBB178:
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
  65               		.loc 1 619 3 view .LVU8
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
  66               		.loc 1 619 68 is_stmt 0 view .LVU9
  67 000e 8091 0000 		lds r24,USB_DeviceState
  68               	.LVL2:
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
  69               		.loc 1 619 68 view .LVU10
  70               	.LBE178:
  71               	.LBE177:
 768:./tmk_core/protocol/lufa/lufa.c **** 
 769:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
 770:./tmk_core/protocol/lufa/lufa.c ****     if (where & SendToBLE) {
 771:./tmk_core/protocol/lufa/lufa.c ****       adafruit_ble_send_consumer_key(data, 0);
 772:./tmk_core/protocol/lufa/lufa.c ****     }
 773:./tmk_core/protocol/lufa/lufa.c **** #endif
 774:./tmk_core/protocol/lufa/lufa.c ****     if (!(where & SendToUSB)) {
  72               		.loc 1 774 5 is_stmt 1 view .LVU11
  73               		.loc 1 774 8 is_stmt 0 view .LVU12
  74 0012 8430      		cpi r24,lo8(4)
  75 0014 01F4      		brne .L2
 775:./tmk_core/protocol/lufa/lufa.c ****       return;
 776:./tmk_core/protocol/lufa/lufa.c ****     }
 777:./tmk_core/protocol/lufa/lufa.c **** 
 778:./tmk_core/protocol/lufa/lufa.c ****     report_extra_t r = {
  76               		.loc 1 778 5 is_stmt 1 view .LVU13
  77               		.loc 1 778 20 is_stmt 0 view .LVU14
  78 0016 93E0      		ldi r25,lo8(3)
  79 0018 9983      		std Y+1,r25
  80 001a 3B83      		std Y+3,r19
  81 001c 2A83      		std Y+2,r18
 779:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_CONSUMER,
 780:./tmk_core/protocol/lufa/lufa.c ****         .usage = data
 781:./tmk_core/protocol/lufa/lufa.c ****     };
 782:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(EXTRAKEY_IN_EPNUM);
  82               		.loc 1 782 5 is_stmt 1 view .LVU15
  83               	.LVL3:
  84               	.LBB179:
  85               	.LBI179:
  86               		.file 2 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 251:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 254:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
  87               		.loc 2 267 23 view .LVU16
  88               	.LBB180:
 268:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
  89               		.loc 2 270 6 view .LVU17
  90               		.loc 2 270 12 is_stmt 0 view .LVU18
  91 001e 9093 E900 		sts 233,r25
  92               		.loc 2 270 12 view .LVU19
  93               	.LBE180:
  94               	.LBE179:
 783:./tmk_core/protocol/lufa/lufa.c **** 
 784:./tmk_core/protocol/lufa/lufa.c ****     /* Check if write ready for a polling interval around 10ms */
 785:./tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
  95               		.loc 1 785 11 is_stmt 1 view .LVU20
  96               	.LVL4:
  97               	.LBB182:
  98               	.LBB181:
  99               		.loc 2 270 12 is_stmt 0 view .LVU21
 100 0022 8FEF      		ldi r24,lo8(-1)
 101               	.LVL5:
 102               	.L4:
 103               		.loc 2 270 12 view .LVU22
 104               	.LBE181:
 105               	.LBE182:
 106               	.LBB183:
 107               	.LBI183:
 271:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 304:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 312:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 314:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 108               		.loc 2 358 23 is_stmt 1 view .LVU23
 109               	.LBB184:
 359:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 110               		.loc 2 360 5 view .LVU24
 111               		.loc 2 360 14 is_stmt 0 view .LVU25
 112 0024 9091 E800 		lds r25,232
 113 0028 8150      		subi r24,lo8(-(-1))
 114               	.LVL6:
 115               		.loc 2 360 14 view .LVU26
 116               	.LBE184:
 117               	.LBE183:
 118               		.loc 1 785 22 view .LVU27
 119 002a 95FD      		sbrc r25,5
 120 002c 00C0      		rjmp .L5
 121               		.loc 1 785 57 is_stmt 1 view .LVU28
 122               	.LVL7:
 123               	.LBB185:
 124               	.LBI185:
 125               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** _delay_ms(double __ms)
 167:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	double __tmp ;
 169:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 189:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #else
 190:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	uint16_t __ticks;
 191:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 192:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 193:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 195:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	{
 196:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		while(__ticks)
 199:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		{
 200:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 202:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 			__ticks --;
 203:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		}
 204:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		return;
 205:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	}
 206:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	else
 207:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 208:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 209:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 210:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** }
 211:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 212:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /**
 213:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \ingroup util_delay
 214:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 215:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 216:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 217:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 218:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 219:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 220:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 221:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 222:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 223:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 224:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    will not be informed about this case.
 225:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 226:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 227:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 228:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 229:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    no delay i.e., 0us.
 230:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 231:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Conversion of \c __us into clock cycles may not always result in
 232:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 233:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __us
 234:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    microseconds of delay.
 235:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 236:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 237:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 238:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 239:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    respectively.
 240:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 241:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \note
 242:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 243:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 244:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 245:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 246:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    with previous versions, the macro \c __DELAY_BACKWARD_COMPATIBLE__
 247:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 248:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 249:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 250:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 251:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    not available to the compiler then.
 252:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 253:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****  */
 254:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** void
 255:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** _delay_us(double __us)
 126               		.loc 3 255 1 view .LVU29
 127               	.LBB186:
 256:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** {
 257:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	double __tmp ;
 128               		.loc 3 257 2 view .LVU30
 258:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 259:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 260:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 261:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 129               		.loc 3 261 2 view .LVU31
 262:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 130               		.loc 3 262 2 view .LVU32
 263:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 131               		.loc 3 263 2 view .LVU33
 264:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 265:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 266:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 267:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 268:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 269:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 270:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 271:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#else
 272:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		//round up by default
 273:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 132               		.loc 3 273 3 view .LVU34
 133               		.loc 3 273 3 is_stmt 0 view .LVU35
 134               	.LBE186:
 135               	.LBE185:
 136               		.file 4 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h"
   1:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* Copyright (c) 2002,2007-2009 Michael Stumpf
   2:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
   3:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    Portions of documentation Copyright (c) 1990 - 1994
   4:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    The Regents of the University of California.
   5:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    All rights reserved.
   7:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
   8:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    Redistribution and use in source and binary forms, with or without
   9:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    modification, are permitted provided that the following conditions are met:
  10:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  11:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    * Redistributions of source code must retain the above copyright
  12:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      notice, this list of conditions and the following disclaimer.
  13:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  14:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    * Redistributions in binary form must reproduce the above copyright
  15:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      notice, this list of conditions and the following disclaimer in
  16:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      the documentation and/or other materials provided with the
  17:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      distribution.
  18:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  19:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    * Neither the name of the copyright holders nor the names of
  20:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      contributors may be used to endorse or promote products derived
  21:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      from this software without specific prior written permission.
  22:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  23:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  25:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  26:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  27:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  28:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  29:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  30:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  31:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  32:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  33:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   POSSIBILITY OF SUCH DAMAGE. */
  34:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* $Id: math.h 2554 2021-05-20 22:22:24Z joerg_wunsch $ */
  36:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  37:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /*
  38:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    math.h - mathematical functions
  39:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  40:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    Author : Michael Stumpf
  41:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****             Michael.Stumpf@t-online.de
  42:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  43:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    __ATTR_CONST__ added by marekm@linux.org.pl for functions
  44:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    that "do not examine any values except their arguments, and have
  45:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    no effects except the return value", for better optimization by gcc.
  46:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
  47:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #ifndef __MATH_H
  49:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define __MATH_H
  50:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  51:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** \file */
  52:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** \defgroup avr_math <math.h>: Mathematics
  53:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     \code #include <math.h> \endcode
  54:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  55:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     This header file declares basic mathematics constants and
  56:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     functions.
  57:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  58:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     \par Notes:
  59:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     - In order to access the functions declared herein, it is usually
  60:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       also required to additionally link against the library \c libm.a.
  61:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       See also the related \ref faq_libm "FAQ entry".
  62:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     - Math functions do not raise exceptions and do not change the
  63:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       \c errno variable. Therefore the majority of them are declared
  64:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       with const attribute, for better optimization by GCC.	*/
  65:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  66:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  67:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** \ingroup avr_math	*/
  68:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /*@{*/
  69:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a e.	*/
  71:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_E		2.7182818284590452354
  72:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  73:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The logarithm of the \a e to base 2. */
  74:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LOG2E		1.4426950408889634074	/* log_2 e */
  75:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  76:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The logarithm of the \a e to base 10. */
  77:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LOG10E	0.43429448190325182765	/* log_10 e */
  78:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The natural logarithm of the 2.	*/
  80:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LN2		0.69314718055994530942	/* log_e 2 */
  81:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  82:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The natural logarithm of the 10.	*/
  83:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LN10		2.30258509299404568402	/* log_e 10 */
  84:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a pi.	*/
  86:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_PI		3.14159265358979323846	/* pi */
  87:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  88:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a pi/2.	*/
  89:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_PI_2		1.57079632679489661923	/* pi/2 */
  90:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  91:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a pi/4.	*/
  92:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_PI_4		0.78539816339744830962	/* pi/4 */
  93:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  94:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 1/pi.	*/
  95:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_1_PI		0.31830988618379067154	/* 1/pi */
  96:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 2/pi.	*/
  98:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_2_PI		0.63661977236758134308	/* 2/pi */
  99:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 100:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 2/sqrt(pi).	*/
 101:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_2_SQRTPI	1.12837916709551257390	/* 2/sqrt(pi) */
 102:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The square root of 2.	*/
 104:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_SQRT2		1.41421356237309504880	/* sqrt(2) */
 105:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 106:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 1/sqrt(2).	*/
 107:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_SQRT1_2	0.70710678118654752440	/* 1/sqrt(2) */
 108:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 109:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** NAN constant.	*/
 110:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define NAN	__builtin_nan("")
 111:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 112:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** INFINITY constant.	*/
 113:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define INFINITY	__builtin_inf()
 114:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 116:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #ifndef __ATTR_CONST__
 117:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** # define __ATTR_CONST__ __attribute__((__const__))
 118:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #endif
 119:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 120:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #if __SIZEOF_DOUBLE__ == __SIZEOF_FLOAT__
 121:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* In order to provide aliases for double functions in the case where
 122:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    double = float, use declarations with according assembler name.
 123:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    That way:
 124:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    1) We do *NOT* use macros like
 125:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****          #define sin sinf
 126:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       because that would interfere with C++.  For example, if some class
 127:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       would implement a method 'sin', or if there was polymorthism for
 128:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       a function 'sin', then we would silently rename these to 'sinf'.
 129:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    2) We have proper prototypes, both for 'sin' and for 'sinf'.
 130:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    3) It is zero-overhead.  */
 131:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define __ASM_ALIAS(x) __asm(#x)
 132:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #else
 133:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* double != float: Provide double prototypes. */
 134:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define __ASM_ALIAS(x) /* empty */
 135:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #endif
 136:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #ifdef __cplusplus
 138:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** extern "C" {
 139:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #endif
 140:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 141:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 142:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The cosf() function returns the cosine of \a __x, measured in radians.
 143:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 144:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern float cosf (float __x);
 145:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern double cos (double __x) __ASM_ALIAS(cosf);		/**< The alias for cosf().	*/
 146:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 148:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The sinf() function returns the sine of \a __x, measured in radians.
 149:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 150:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern float sinf (float __x);
 151:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern double sin (double __x) __ASM_ALIAS(sinf);		/**< The alias for sinf().	*/
 152:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 153:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 154:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The tanf() function returns the tangent of \a __x, measured in radians.
 155:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 156:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern float tanf (float __x);
 157:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern double tan (double __x) __ASM_ALIAS(tanf);		/**< The alias for tanf().	*/
 158:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 159:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 160:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The fabsf() function computes the absolute value of a floating-point
 161:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     number \a __x.
 162:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 163:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** static inline float fabsf (float __x)
 164:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** {
 165:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     return __builtin_fabsf (__x);
 166:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** }
 167:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 168:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** static inline double fabs (double __x)
 169:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** {
 170:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     return __builtin_fabs (__x);
 137               		.loc 4 170 5 is_stmt 1 view .LVU36
 138               	.LBB188:
 139               	.LBB187:
 274:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 275:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 276:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 140               		.loc 3 276 2 view .LVU37
 141 002e 95ED      		ldi r25,lo8(-43)
 142 0030 9A95      	1:	dec r25
 143 0032 01F4      		brne 1b
 144 0034 0000      		nop
 145               		.loc 3 276 2 is_stmt 0 view .LVU38
 146               	.LBE187:
 147               	.LBE188:
 148               		.loc 1 785 11 is_stmt 1 view .LVU39
 149               	.LVL8:
 150               		.loc 1 785 11 is_stmt 0 view .LVU40
 151 0036 8111      		cpse r24,__zero_reg__
 152 0038 00C0      		rjmp .L4
 153               	.LVL9:
 154               	.L5:
 786:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 155               		.loc 1 786 5 is_stmt 1 view .LVU41
 156               	.LBB189:
 157               	.LBI189:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 158               		.loc 2 358 23 view .LVU42
 159               	.LBB190:
 160               		.loc 2 360 5 view .LVU43
 161               		.loc 2 360 14 is_stmt 0 view .LVU44
 162 003a 8091 E800 		lds r24,232
 163               	.LBE190:
 164               	.LBE189:
 165               		.loc 1 786 8 view .LVU45
 166 003e 85FF      		sbrs r24,5
 167 0040 00C0      		rjmp .L2
 787:./tmk_core/protocol/lufa/lufa.c **** 
 788:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_Stream_LE(&r, sizeof(report_extra_t), NULL);
 168               		.loc 1 788 5 is_stmt 1 view .LVU46
 169 0042 50E0      		ldi r21,0
 170 0044 40E0      		ldi r20,0
 171 0046 63E0      		ldi r22,lo8(3)
 172 0048 70E0      		ldi r23,0
 173 004a CE01      		movw r24,r28
 174 004c 0196      		adiw r24,1
 175 004e 0E94 0000 		call Endpoint_Write_Stream_LE
 176               	.LVL10:
 789:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 177               		.loc 1 789 5 view .LVU47
 178               	.LBB191:
 179               	.LBI191:
 361:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 369:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 371:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 432:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 436:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 443:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 445:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 180               		.loc 2 453 23 view .LVU48
 181               	.LBB192:
 454:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 182               		.loc 2 456 6 view .LVU49
 183               		.loc 2 456 13 is_stmt 0 view .LVU50
 184 0052 8091 E800 		lds r24,232
 185 0056 8E77      		andi r24,lo8(126)
 186 0058 8093 E800 		sts 232,r24
 187               	.LVL11:
 188               	.L2:
 189               	/* epilogue start */
 190               		.loc 2 456 13 view .LVU51
 191               	.LBE192:
 192               	.LBE191:
 790:./tmk_core/protocol/lufa/lufa.c **** }
 193               		.loc 1 790 1 view .LVU52
 194 005c 0F90      		pop __tmp_reg__
 195 005e 0F90      		pop __tmp_reg__
 196 0060 0F90      		pop __tmp_reg__
 197 0062 DF91      		pop r29
 198 0064 CF91      		pop r28
 199 0066 0895      		ret
 200               		.cfi_endproc
 201               	.LFE133:
 203               		.section	.text.send_system,"ax",@progbits
 205               	send_system:
 206               	.LVL12:
 207               	.LFB132:
 727:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 208               		.loc 1 727 1 is_stmt 1 view -0
 209               		.cfi_startproc
 727:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = 255;
 210               		.loc 1 727 1 is_stmt 0 view .LVU54
 211 0000 CF93      		push r28
 212               	.LCFI4:
 213               		.cfi_def_cfa_offset 3
 214               		.cfi_offset 28, -2
 215 0002 DF93      		push r29
 216               	.LCFI5:
 217               		.cfi_def_cfa_offset 4
 218               		.cfi_offset 29, -3
 219 0004 00D0      		rcall .
 220 0006 0F92      		push __tmp_reg__
 221               	.LCFI6:
 222               		.cfi_def_cfa_offset 7
 223 0008 CDB7      		in r28,__SP_L__
 224 000a DEB7      		in r29,__SP_H__
 225               	.LCFI7:
 226               		.cfi_def_cfa_register 28
 227               	/* prologue: function */
 228               	/* frame size = 3 */
 229               	/* stack size = 5 */
 230               	.L__stack_usage = 5
 728:./tmk_core/protocol/lufa/lufa.c **** 
 231               		.loc 1 728 5 is_stmt 1 view .LVU55
 232               	.LVL13:
 730:./tmk_core/protocol/lufa/lufa.c ****         return;
 233               		.loc 1 730 5 view .LVU56
 730:./tmk_core/protocol/lufa/lufa.c ****         return;
 234               		.loc 1 730 25 is_stmt 0 view .LVU57
 235 000c 2091 0000 		lds r18,USB_DeviceState
 730:./tmk_core/protocol/lufa/lufa.c ****         return;
 236               		.loc 1 730 8 view .LVU58
 237 0010 2430      		cpi r18,lo8(4)
 238 0012 01F4      		brne .L14
 733:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 239               		.loc 1 733 5 is_stmt 1 view .LVU59
 733:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 240               		.loc 1 733 20 is_stmt 0 view .LVU60
 241 0014 22E0      		ldi r18,lo8(2)
 242 0016 2983      		std Y+1,r18
 735:./tmk_core/protocol/lufa/lufa.c ****     };
 243               		.loc 1 735 43 view .LVU61
 244 0018 8058      		subi r24,-128
 245 001a 9109      		sbc r25,__zero_reg__
 246               	.LVL14:
 733:./tmk_core/protocol/lufa/lufa.c ****         .report_id = REPORT_ID_SYSTEM,
 247               		.loc 1 733 20 view .LVU62
 248 001c 9B83      		std Y+3,r25
 249 001e 8A83      		std Y+2,r24
 737:./tmk_core/protocol/lufa/lufa.c **** 
 250               		.loc 1 737 5 is_stmt 1 view .LVU63
 251               	.LVL15:
 252               	.LBB193:
 253               	.LBI193:
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 254               		.loc 2 267 23 view .LVU64
 255               	.LBB194:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 256               		.loc 2 270 6 view .LVU65
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257               		.loc 2 270 12 is_stmt 0 view .LVU66
 258 0020 83E0      		ldi r24,lo8(3)
 259               	.LVL16:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 260               		.loc 2 270 12 view .LVU67
 261 0022 8093 E900 		sts 233,r24
 262               	.LVL17:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 263               		.loc 2 270 12 view .LVU68
 264               	.LBE194:
 265               	.LBE193:
 740:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 266               		.loc 1 740 11 is_stmt 1 view .LVU69
 267               	.LBB196:
 268               	.LBB195:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 269               		.loc 2 270 12 is_stmt 0 view .LVU70
 270 0026 8FEF      		ldi r24,lo8(-1)
 271               	.LVL18:
 272               	.L16:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 273               		.loc 2 270 12 view .LVU71
 274               	.LBE195:
 275               	.LBE196:
 276               	.LBB197:
 277               	.LBI197:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 278               		.loc 2 358 23 is_stmt 1 view .LVU72
 279               	.LBB198:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 280               		.loc 2 360 5 view .LVU73
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 281               		.loc 2 360 14 is_stmt 0 view .LVU74
 282 0028 9091 E800 		lds r25,232
 283 002c 8150      		subi r24,lo8(-(-1))
 284               	.LVL19:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285               		.loc 2 360 14 view .LVU75
 286               	.LBE198:
 287               	.LBE197:
 740:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 288               		.loc 1 740 22 view .LVU76
 289 002e 95FD      		sbrc r25,5
 290 0030 00C0      		rjmp .L17
 740:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 291               		.loc 1 740 57 is_stmt 1 view .LVU77
 292               	.LVL20:
 293               	.LBB199:
 294               	.LBI199:
 255:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** {
 295               		.loc 3 255 1 view .LVU78
 296               	.LBB200:
 257:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 297               		.loc 3 257 2 view .LVU79
 261:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 298               		.loc 3 261 2 view .LVU80
 262:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 299               		.loc 3 262 2 view .LVU81
 263:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 300               		.loc 3 263 2 view .LVU82
 273:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 301               		.loc 3 273 3 view .LVU83
 273:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 302               		.loc 3 273 3 is_stmt 0 view .LVU84
 303               	.LBE200:
 304               	.LBE199:
 305               		.loc 4 170 5 is_stmt 1 view .LVU85
 306               	.LBB202:
 307               	.LBB201:
 308               		.loc 3 276 2 view .LVU86
 309 0032 95ED      		ldi r25,lo8(-43)
 310 0034 9A95      	1:	dec r25
 311 0036 01F4      		brne 1b
 312 0038 0000      		nop
 313               		.loc 3 276 2 is_stmt 0 view .LVU87
 314               	.LBE201:
 315               	.LBE202:
 740:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 316               		.loc 1 740 11 is_stmt 1 view .LVU88
 317               	.LVL21:
 740:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 318               		.loc 1 740 11 is_stmt 0 view .LVU89
 319 003a 8111      		cpse r24,__zero_reg__
 320 003c 00C0      		rjmp .L16
 321               	.LVL22:
 322               	.L17:
 741:./tmk_core/protocol/lufa/lufa.c **** 
 323               		.loc 1 741 5 is_stmt 1 view .LVU90
 324               	.LBB203:
 325               	.LBI203:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 326               		.loc 2 358 23 view .LVU91
 327               	.LBB204:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 328               		.loc 2 360 5 view .LVU92
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329               		.loc 2 360 14 is_stmt 0 view .LVU93
 330 003e 8091 E800 		lds r24,232
 331               	.LBE204:
 332               	.LBE203:
 741:./tmk_core/protocol/lufa/lufa.c **** 
 333               		.loc 1 741 8 view .LVU94
 334 0042 85FF      		sbrs r24,5
 335 0044 00C0      		rjmp .L14
 743:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_ClearIN();
 336               		.loc 1 743 5 is_stmt 1 view .LVU95
 337 0046 50E0      		ldi r21,0
 338 0048 40E0      		ldi r20,0
 339 004a 63E0      		ldi r22,lo8(3)
 340 004c 70E0      		ldi r23,0
 341 004e CE01      		movw r24,r28
 342 0050 0196      		adiw r24,1
 343 0052 0E94 0000 		call Endpoint_Write_Stream_LE
 344               	.LVL23:
 744:./tmk_core/protocol/lufa/lufa.c **** }
 345               		.loc 1 744 5 view .LVU96
 346               	.LBB205:
 347               	.LBI205:
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 348               		.loc 2 453 23 view .LVU97
 349               	.LBB206:
 350               		.loc 2 456 6 view .LVU98
 351               		.loc 2 456 13 is_stmt 0 view .LVU99
 352 0056 8091 E800 		lds r24,232
 353 005a 8E77      		andi r24,lo8(126)
 354 005c 8093 E800 		sts 232,r24
 355               	.LVL24:
 356               	.L14:
 357               	/* epilogue start */
 358               		.loc 2 456 13 view .LVU100
 359               	.LBE206:
 360               	.LBE205:
 745:./tmk_core/protocol/lufa/lufa.c **** 
 361               		.loc 1 745 1 view .LVU101
 362 0060 0F90      		pop __tmp_reg__
 363 0062 0F90      		pop __tmp_reg__
 364 0064 0F90      		pop __tmp_reg__
 365 0066 DF91      		pop r29
 366 0068 CF91      		pop r28
 367 006a 0895      		ret
 368               		.cfi_endproc
 369               	.LFE132:
 371               		.section	.text.send_mouse,"ax",@progbits
 373               	send_mouse:
 374               	.LVL25:
 375               	.LFB131:
 682:./tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 376               		.loc 1 682 1 is_stmt 1 view -0
 377               		.cfi_startproc
 378               	/* prologue: function */
 379               	/* frame size = 0 */
 380               	/* stack size = 0 */
 381               	.L__stack_usage = 0
 682:./tmk_core/protocol/lufa/lufa.c **** #ifdef MOUSE_ENABLE
 382               		.loc 1 682 1 is_stmt 0 view .LVU103
 383 0000 9C01      		movw r18,r24
 697:./tmk_core/protocol/lufa/lufa.c **** 
 384               		.loc 1 697 5 is_stmt 1 view .LVU104
 385               	.LVL26:
 699:./tmk_core/protocol/lufa/lufa.c **** 
 386               		.loc 1 699 5 view .LVU105
 387               	.LBB207:
 388               	.LBI207:
 603:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
 389               		.loc 1 603 23 view .LVU106
 390               	.LBB208:
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 391               		.loc 1 619 3 view .LVU107
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 392               		.loc 1 619 68 is_stmt 0 view .LVU108
 393 0002 8091 0000 		lds r24,USB_DeviceState
 394               	.LVL27:
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 395               		.loc 1 619 68 view .LVU109
 396               	.LBE208:
 397               	.LBE207:
 707:./tmk_core/protocol/lufa/lufa.c ****       return;
 398               		.loc 1 707 5 is_stmt 1 view .LVU110
 707:./tmk_core/protocol/lufa/lufa.c ****       return;
 399               		.loc 1 707 8 is_stmt 0 view .LVU111
 400 0006 8430      		cpi r24,lo8(4)
 401 0008 01F4      		brne .L26
 712:./tmk_core/protocol/lufa/lufa.c **** 
 402               		.loc 1 712 5 is_stmt 1 view .LVU112
 403               	.LVL28:
 404               	.LBB209:
 405               	.LBI209:
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 406               		.loc 2 267 23 view .LVU113
 407               	.LBB210:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 408               		.loc 2 270 6 view .LVU114
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 409               		.loc 2 270 12 is_stmt 0 view .LVU115
 410 000a 82E0      		ldi r24,lo8(2)
 411               	.LVL29:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 412               		.loc 2 270 12 view .LVU116
 413 000c 8093 E900 		sts 233,r24
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 414               		.loc 2 270 12 view .LVU117
 415               	.LBE210:
 416               	.LBE209:
 715:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 417               		.loc 1 715 11 is_stmt 1 view .LVU118
 418               	.LVL30:
 419               	.LBB212:
 420               	.LBB211:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 421               		.loc 2 270 12 is_stmt 0 view .LVU119
 422 0010 9FEF      		ldi r25,lo8(-1)
 423               	.LVL31:
 424               	.L29:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 425               		.loc 2 270 12 view .LVU120
 426               	.LBE211:
 427               	.LBE212:
 428               	.LBB213:
 429               	.LBI213:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 430               		.loc 2 358 23 is_stmt 1 view .LVU121
 431               	.LBB214:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 432               		.loc 2 360 5 view .LVU122
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433               		.loc 2 360 14 is_stmt 0 view .LVU123
 434 0012 8091 E800 		lds r24,232
 435 0016 9150      		subi r25,lo8(-(-1))
 436               	.LVL32:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 437               		.loc 2 360 14 view .LVU124
 438               	.LBE214:
 439               	.LBE213:
 715:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 440               		.loc 1 715 22 view .LVU125
 441 0018 85FD      		sbrc r24,5
 442 001a 00C0      		rjmp .L30
 715:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 443               		.loc 1 715 57 is_stmt 1 view .LVU126
 444               	.LVL33:
 445               	.LBB215:
 446               	.LBI215:
 255:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** {
 447               		.loc 3 255 1 view .LVU127
 448               	.LBB216:
 257:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 449               		.loc 3 257 2 view .LVU128
 261:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 450               		.loc 3 261 2 view .LVU129
 262:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 451               		.loc 3 262 2 view .LVU130
 263:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 452               		.loc 3 263 2 view .LVU131
 273:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 453               		.loc 3 273 3 view .LVU132
 273:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 454               		.loc 3 273 3 is_stmt 0 view .LVU133
 455               	.LBE216:
 456               	.LBE215:
 457               		.loc 4 170 5 is_stmt 1 view .LVU134
 458               	.LBB218:
 459               	.LBB217:
 460               		.loc 3 276 2 view .LVU135
 461 001c 85ED      		ldi r24,lo8(-43)
 462 001e 8A95      	1:	dec r24
 463 0020 01F4      		brne 1b
 464 0022 0000      		nop
 465               		.loc 3 276 2 is_stmt 0 view .LVU136
 466               	.LBE217:
 467               	.LBE218:
 715:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 468               		.loc 1 715 11 is_stmt 1 view .LVU137
 469               	.LVL34:
 715:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) return;
 470               		.loc 1 715 11 is_stmt 0 view .LVU138
 471 0024 9111      		cpse r25,__zero_reg__
 472 0026 00C0      		rjmp .L29
 473               	.LVL35:
 474               	.L30:
 716:./tmk_core/protocol/lufa/lufa.c **** 
 475               		.loc 1 716 5 is_stmt 1 view .LVU139
 476               	.LBB219:
 477               	.LBI219:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 478               		.loc 2 358 23 view .LVU140
 479               	.LBB220:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 480               		.loc 2 360 5 view .LVU141
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 481               		.loc 2 360 14 is_stmt 0 view .LVU142
 482 0028 8091 E800 		lds r24,232
 483               	.LBE220:
 484               	.LBE219:
 716:./tmk_core/protocol/lufa/lufa.c **** 
 485               		.loc 1 716 8 view .LVU143
 486 002c 85FF      		sbrs r24,5
 487 002e 00C0      		rjmp .L26
 719:./tmk_core/protocol/lufa/lufa.c **** 
 488               		.loc 1 719 5 is_stmt 1 view .LVU144
 489 0030 50E0      		ldi r21,0
 490 0032 40E0      		ldi r20,0
 491 0034 65E0      		ldi r22,lo8(5)
 492 0036 70E0      		ldi r23,0
 493 0038 C901      		movw r24,r18
 494 003a 0E94 0000 		call Endpoint_Write_Stream_LE
 495               	.LVL36:
 722:./tmk_core/protocol/lufa/lufa.c **** #endif
 496               		.loc 1 722 5 view .LVU145
 497               	.LBB221:
 498               	.LBI221:
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 499               		.loc 2 453 23 view .LVU146
 500               	.LBB222:
 501               		.loc 2 456 6 view .LVU147
 502               		.loc 2 456 13 is_stmt 0 view .LVU148
 503 003e 8091 E800 		lds r24,232
 504 0042 8E77      		andi r24,lo8(126)
 505 0044 8093 E800 		sts 232,r24
 506               	.LVL37:
 507               	.L26:
 508               	/* epilogue start */
 509               		.loc 2 456 13 view .LVU149
 510               	.LBE222:
 511               	.LBE221:
 724:./tmk_core/protocol/lufa/lufa.c **** 
 512               		.loc 1 724 1 view .LVU150
 513 0048 0895      		ret
 514               		.cfi_endproc
 515               	.LFE131:
 517               		.section	.text.send_keyboard,"ax",@progbits
 519               	send_keyboard:
 520               	.LVL38:
 521               	.LFB130:
 627:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 522               		.loc 1 627 1 is_stmt 1 view -0
 523               		.cfi_startproc
 627:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 524               		.loc 1 627 1 is_stmt 0 view .LVU152
 525 0000 CF93      		push r28
 526               	.LCFI8:
 527               		.cfi_def_cfa_offset 3
 528               		.cfi_offset 28, -2
 529 0002 DF93      		push r29
 530               	.LCFI9:
 531               		.cfi_def_cfa_offset 4
 532               		.cfi_offset 29, -3
 533               	/* prologue: function */
 534               	/* frame size = 0 */
 535               	/* stack size = 2 */
 536               	.L__stack_usage = 2
 537 0004 EC01      		movw r28,r24
 635:./tmk_core/protocol/lufa/lufa.c ****     uint8_t where = where_to_send();
 538               		.loc 1 635 5 is_stmt 1 view .LVU153
 539               	.LVL39:
 636:./tmk_core/protocol/lufa/lufa.c **** 
 540               		.loc 1 636 5 view .LVU154
 541               	.LBB223:
 542               	.LBI223:
 603:./tmk_core/protocol/lufa/lufa.c **** #ifdef ADAFRUIT_BLE_ENABLE
 543               		.loc 1 603 23 view .LVU155
 544               	.LBB224:
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 545               		.loc 1 619 3 view .LVU156
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 546               		.loc 1 619 68 is_stmt 0 view .LVU157
 547 0006 8091 0000 		lds r24,USB_DeviceState
 548               	.LVL40:
 619:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
 549               		.loc 1 619 68 view .LVU158
 550               	.LBE224:
 551               	.LBE223:
 644:./tmk_core/protocol/lufa/lufa.c ****       return;
 552               		.loc 1 644 5 is_stmt 1 view .LVU159
 644:./tmk_core/protocol/lufa/lufa.c ****       return;
 553               		.loc 1 644 8 is_stmt 0 view .LVU160
 554 000a 8430      		cpi r24,lo8(4)
 555 000c 01F4      		brne .L39
 650:./tmk_core/protocol/lufa/lufa.c ****         /* Report protocol - NKRO */
 556               		.loc 1 650 5 is_stmt 1 view .LVU161
 650:./tmk_core/protocol/lufa/lufa.c ****         /* Report protocol - NKRO */
 557               		.loc 1 650 8 is_stmt 0 view .LVU162
 558 000e 9091 0000 		lds r25,keyboard_protocol
 559 0012 9923      		tst r25
 560 0014 01F0      		breq .L42
 650:./tmk_core/protocol/lufa/lufa.c ****         /* Report protocol - NKRO */
 561               		.loc 1 650 27 discriminator 1 view .LVU163
 562 0016 9091 0000 		lds r25,keymap_config
 563 001a 97FF      		sbrs r25,7
 564 001c 00C0      		rjmp .L42
 652:./tmk_core/protocol/lufa/lufa.c **** 
 565               		.loc 1 652 9 is_stmt 1 view .LVU164
 566               	.LVL41:
 567               	.LBB225:
 568               	.LBI225:
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 569               		.loc 2 267 23 view .LVU165
 570               	.LBB226:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 571               		.loc 2 270 6 view .LVU166
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 572               		.loc 2 270 12 is_stmt 0 view .LVU167
 573 001e 8093 E900 		sts 233,r24
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 574               		.loc 2 270 12 view .LVU168
 575               	.LBE226:
 576               	.LBE225:
 655:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 577               		.loc 1 655 15 is_stmt 1 view .LVU169
 578               	.LVL42:
 579               	.LBB228:
 580               	.LBB227:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 581               		.loc 2 270 12 is_stmt 0 view .LVU170
 582 0022 8FEF      		ldi r24,lo8(-1)
 583               	.LVL43:
 584               	.L43:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 585               		.loc 2 270 12 view .LVU171
 586               	.LBE227:
 587               	.LBE228:
 588               	.LBB229:
 589               	.LBI229:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 590               		.loc 2 358 23 is_stmt 1 view .LVU172
 591               	.LBB230:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 592               		.loc 2 360 5 view .LVU173
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 593               		.loc 2 360 14 is_stmt 0 view .LVU174
 594 0024 9091 E800 		lds r25,232
 595 0028 8150      		subi r24,lo8(-(-1))
 596               	.LVL44:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 597               		.loc 2 360 14 view .LVU175
 598               	.LBE230:
 599               	.LBE229:
 655:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 600               		.loc 1 655 26 view .LVU176
 601 002a 95FD      		sbrc r25,5
 602 002c 00C0      		rjmp .L44
 655:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 603               		.loc 1 655 61 is_stmt 1 view .LVU177
 604               	.LVL45:
 605               	.LBB231:
 606               	.LBI231:
 255:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** {
 607               		.loc 3 255 1 view .LVU178
 608               	.LBB232:
 257:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 609               		.loc 3 257 2 view .LVU179
 261:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 610               		.loc 3 261 2 view .LVU180
 262:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 611               		.loc 3 262 2 view .LVU181
 263:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 612               		.loc 3 263 2 view .LVU182
 273:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 613               		.loc 3 273 3 view .LVU183
 273:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 614               		.loc 3 273 3 is_stmt 0 view .LVU184
 615               	.LBE232:
 616               	.LBE231:
 617               		.loc 4 170 5 is_stmt 1 view .LVU185
 618               	.LBB234:
 619               	.LBB233:
 620               		.loc 3 276 2 view .LVU186
 621 002e 95E1      		ldi r25,lo8(21)
 622 0030 9A95      	1:	dec r25
 623 0032 01F4      		brne 1b
 624 0034 0000      		nop
 625               		.loc 3 276 2 is_stmt 0 view .LVU187
 626               	.LBE233:
 627               	.LBE234:
 655:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 628               		.loc 1 655 15 is_stmt 1 view .LVU188
 629               	.LVL46:
 655:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 630               		.loc 1 655 15 is_stmt 0 view .LVU189
 631 0036 8111      		cpse r24,__zero_reg__
 632 0038 00C0      		rjmp .L43
 633               	.LVL47:
 634               	.L44:
 656:./tmk_core/protocol/lufa/lufa.c **** 
 635               		.loc 1 656 9 is_stmt 1 view .LVU190
 636               	.LBB235:
 637               	.LBI235:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 638               		.loc 2 358 23 view .LVU191
 639               	.LBB236:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 640               		.loc 2 360 5 view .LVU192
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 641               		.loc 2 360 14 is_stmt 0 view .LVU193
 642 003a 8091 E800 		lds r24,232
 643               	.LBE236:
 644               	.LBE235:
 659:./tmk_core/protocol/lufa/lufa.c ****     }
 645               		.loc 1 659 9 view .LVU194
 646 003e 50E0      		ldi r21,0
 647 0040 40E0      		ldi r20,0
 648 0042 60E2      		ldi r22,lo8(32)
 649 0044 70E0      		ldi r23,0
 656:./tmk_core/protocol/lufa/lufa.c **** 
 650               		.loc 1 656 12 view .LVU195
 651 0046 85FD      		sbrc r24,5
 652 0048 00C0      		rjmp .L66
 653               	.LVL48:
 654               	.L39:
 655               	/* epilogue start */
 679:./tmk_core/protocol/lufa/lufa.c **** 
 656               		.loc 1 679 1 view .LVU196
 657 004a DF91      		pop r29
 658 004c CF91      		pop r28
 659               	.LVL49:
 679:./tmk_core/protocol/lufa/lufa.c **** 
 660               		.loc 1 679 1 view .LVU197
 661 004e 0895      		ret
 662               	.LVL50:
 663               	.L42:
 665:./tmk_core/protocol/lufa/lufa.c **** 
 664               		.loc 1 665 9 is_stmt 1 view .LVU198
 665               	.LBB237:
 666               	.LBI237:
 267:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 667               		.loc 2 267 23 view .LVU199
 668               	.LBB238:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 669               		.loc 2 270 6 view .LVU200
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 670               		.loc 2 270 12 is_stmt 0 view .LVU201
 671 0050 81E0      		ldi r24,lo8(1)
 672               	.LVL51:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 673               		.loc 2 270 12 view .LVU202
 674 0052 8093 E900 		sts 233,r24
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 675               		.loc 2 270 12 view .LVU203
 676               	.LBE238:
 677               	.LBE237:
 668:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 678               		.loc 1 668 15 is_stmt 1 view .LVU204
 679               	.LVL52:
 680               	.LBB240:
 681               	.LBB239:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 682               		.loc 2 270 12 is_stmt 0 view .LVU205
 683 0056 8FEF      		ldi r24,lo8(-1)
 684               	.LVL53:
 685               	.L48:
 270:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 686               		.loc 2 270 12 view .LVU206
 687               	.LBE239:
 688               	.LBE240:
 689               	.LBB241:
 690               	.LBI241:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 691               		.loc 2 358 23 is_stmt 1 view .LVU207
 692               	.LBB242:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 693               		.loc 2 360 5 view .LVU208
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 694               		.loc 2 360 14 is_stmt 0 view .LVU209
 695 0058 9091 E800 		lds r25,232
 696 005c 8150      		subi r24,lo8(-(-1))
 697               	.LVL54:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 698               		.loc 2 360 14 view .LVU210
 699               	.LBE242:
 700               	.LBE241:
 668:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 701               		.loc 1 668 26 view .LVU211
 702 005e 95FD      		sbrc r25,5
 703 0060 00C0      		rjmp .L49
 668:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 704               		.loc 1 668 61 is_stmt 1 view .LVU212
 705               	.LVL55:
 706               	.LBB243:
 707               	.LBI243:
 255:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** {
 708               		.loc 3 255 1 view .LVU213
 709               	.LBB244:
 257:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 710               		.loc 3 257 2 view .LVU214
 261:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 711               		.loc 3 261 2 view .LVU215
 262:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 712               		.loc 3 262 2 view .LVU216
 263:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 713               		.loc 3 263 2 view .LVU217
 273:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 714               		.loc 3 273 3 view .LVU218
 273:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 715               		.loc 3 273 3 is_stmt 0 view .LVU219
 716               	.LBE244:
 717               	.LBE243:
 718               		.loc 4 170 5 is_stmt 1 view .LVU220
 719               	.LBB246:
 720               	.LBB245:
 721               		.loc 3 276 2 view .LVU221
 722 0062 95ED      		ldi r25,lo8(-43)
 723 0064 9A95      	1:	dec r25
 724 0066 01F4      		brne 1b
 725 0068 0000      		nop
 726               		.loc 3 276 2 is_stmt 0 view .LVU222
 727               	.LBE245:
 728               	.LBE246:
 668:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 729               		.loc 1 668 15 is_stmt 1 view .LVU223
 730               	.LVL56:
 668:./tmk_core/protocol/lufa/lufa.c ****         if (!Endpoint_IsReadWriteAllowed()) return;
 731               		.loc 1 668 15 is_stmt 0 view .LVU224
 732 006a 8111      		cpse r24,__zero_reg__
 733 006c 00C0      		rjmp .L48
 734               	.LVL57:
 735               	.L49:
 669:./tmk_core/protocol/lufa/lufa.c **** 
 736               		.loc 1 669 9 is_stmt 1 view .LVU225
 737               	.LBB247:
 738               	.LBI247:
 358:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 739               		.loc 2 358 23 view .LVU226
 740               	.LBB248:
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 741               		.loc 2 360 5 view .LVU227
 360:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 742               		.loc 2 360 14 is_stmt 0 view .LVU228
 743 006e 8091 E800 		lds r24,232
 744               	.LBE248:
 745               	.LBE247:
 669:./tmk_core/protocol/lufa/lufa.c **** 
 746               		.loc 1 669 12 view .LVU229
 747 0072 85FF      		sbrs r24,5
 748 0074 00C0      		rjmp .L39
 672:./tmk_core/protocol/lufa/lufa.c ****     }
 749               		.loc 1 672 9 is_stmt 1 view .LVU230
 750 0076 50E0      		ldi r21,0
 751 0078 40E0      		ldi r20,0
 752 007a 68E0      		ldi r22,lo8(8)
 753 007c 70E0      		ldi r23,0
 754               	.LVL58:
 755               	.L66:
 672:./tmk_core/protocol/lufa/lufa.c ****     }
 756               		.loc 1 672 9 is_stmt 0 view .LVU231
 757 007e CE01      		movw r24,r28
 758 0080 0E94 0000 		call Endpoint_Write_Stream_LE
 759               	.LVL59:
 676:./tmk_core/protocol/lufa/lufa.c **** 
 760               		.loc 1 676 5 is_stmt 1 view .LVU232
 761               	.LBB249:
 762               	.LBI249:
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 763               		.loc 2 453 23 view .LVU233
 764               	.LBB250:
 765               		.loc 2 456 6 view .LVU234
 766               		.loc 2 456 13 is_stmt 0 view .LVU235
 767 0084 8091 E800 		lds r24,232
 768 0088 8E77      		andi r24,lo8(126)
 769 008a 8093 E800 		sts 232,r24
 770               	.LBE250:
 771               	.LBE249:
 678:./tmk_core/protocol/lufa/lufa.c **** }
 772               		.loc 1 678 5 is_stmt 1 view .LVU236
 678:./tmk_core/protocol/lufa/lufa.c **** }
 773               		.loc 1 678 26 is_stmt 0 view .LVU237
 774 008e 80E2      		ldi r24,lo8(32)
 775 0090 FE01      		movw r30,r28
 776 0092 A0E0      		ldi r26,lo8(keyboard_report_sent)
 777 0094 B0E0      		ldi r27,hi8(keyboard_report_sent)
 778               		0:
 779 0096 0190      		ld r0,Z+
 780 0098 0D92      		st X+,r0
 781 009a 8A95      		dec r24
 782 009c 01F4      		brne 0b
 783 009e 00C0      		rjmp .L39
 784               		.cfi_endproc
 785               	.LFE130:
 787               		.section	.text.EVENT_USB_Device_Connect,"ax",@progbits
 788               	.global	EVENT_USB_Device_Connect
 790               	EVENT_USB_Device_Connect:
 791               	.LFB121:
 330:./tmk_core/protocol/lufa/lufa.c ****     print("[C]");
 792               		.loc 1 330 1 is_stmt 1 view -0
 793               		.cfi_startproc
 794               	/* prologue: function */
 795               	/* frame size = 0 */
 796               	/* stack size = 0 */
 797               	.L__stack_usage = 0
 331:./tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 798               		.loc 1 331 17 view .LVU239
 333:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 799               		.loc 1 333 5 view .LVU240
 333:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 800               		.loc 1 333 9 is_stmt 0 view .LVU241
 801 0000 8091 0000 		lds r24,USB_IsInitialized
 333:./tmk_core/protocol/lufa/lufa.c ****         USB_Disable();
 802               		.loc 1 333 8 view .LVU242
 803 0004 8111      		cpse r24,__zero_reg__
 804 0006 00C0      		rjmp .L67
 334:./tmk_core/protocol/lufa/lufa.c ****         USB_Init();
 805               		.loc 1 334 9 is_stmt 1 view .LVU243
 806 0008 0E94 0000 		call USB_Disable
 807               	.LVL60:
 335:./tmk_core/protocol/lufa/lufa.c ****         USB_Device_EnableSOFEvents();
 808               		.loc 1 335 9 view .LVU244
 809 000c 0E94 0000 		call USB_Init
 810               	.LVL61:
 336:./tmk_core/protocol/lufa/lufa.c ****     }
 811               		.loc 1 336 9 view .LVU245
 812               	.LBB251:
 813               	.LBI251:
 814               		.file 5 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h"
   1:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
   2:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****              LUFA Library
   3:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   5:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****            www.lufa-lib.org
   7:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
   8:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   9:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
  10:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  12:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   all copies and that both that the copyright notice and this
  16:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   documentation, and that the name of the author not be used in
  18:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software without specific, written prior permission.
  20:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  21:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   The author disclaims all warranties with regard to this
  22:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software, including all implied warranties of merchantability
  23:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   special, indirect or consequential damages or any damages
  25:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   arising out of or in connection with the use or performance of
  28:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   this software.
  29:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
  30:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  31:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \file
  32:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  33:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \copydetails Group_Device_AVR8
  34:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  35:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  38:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  39:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \ingroup Group_Device
  40:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \defgroup Group_Device_AVR8 Device Management (AVR8)
  41:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  42:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  43:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  Architecture specific USB Device definitions for the Atmel 8-bit AVR microcontrollers.
  44:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  45:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  @{
  46:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  47:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  48:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #ifndef __USBDEVICE_AVR8_H__
  49:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #define __USBDEVICE_AVR8_H__
  50:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  51:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Includes: */
  52:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBController.h"
  54:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../StdDescriptors.h"
  55:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBInterrupt.h"
  56:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../Endpoint.h"
  57:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  58:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  59:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if defined(__cplusplus)
  60:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			extern "C" {
  61:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  62:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  63:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Preprocessor Checks: */
  64:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  65:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  66:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  67:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  68:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_RAM_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  69:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_RAM_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  70:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  71:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  72:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  73:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  74:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  75:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  76:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_RAM_DESCRIPTORS))
  77:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_RAM_DESCRIPTORS are mutually exclusive.
  78:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  79:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  80:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Public Interface - May be used in end-application: */
  81:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Macros: */
  82:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** \name USB Device Mode Option Masks */
  83:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@{
  84:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
  85:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  86:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  USB interface should be initialized in low speed (1.5Mb/s) mode.
  87:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  88:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Low Speed mode is not available on all USB AVR models.
  89:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        \n
  90:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  91:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Restrictions apply on the number, size and type of endpoints which can be used
  92:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        when running in low speed mode - please refer to the USB 2.0 specification.
  93:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
  94:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USB_DEVICE_OPT_LOWSPEED            (1 << 0)
  95:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
  96:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  USB interface should be initialized in full speed (12Mb/s) mode.
  99:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#define USB_DEVICE_OPT_FULLSPEED               (0 << 0)
 101:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@}
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if (!defined(NO_INTERNAL_SERIAL) && \
 104:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			     (defined(USB_SERIES_7_AVR) || defined(USB_SERIES_6_AVR) || \
 105:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			      defined(USB_SERIES_4_AVR) || defined(USB_SERIES_2_AVR) || \
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				  defined(__DOXYGEN__)))
 107:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** String descriptor index for the device's unique serial number string descriptor within the 
 108:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  This unique serial number is used by the host to associate resources to the device (such as
 109:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number allocations) to a device regardless of the port it is plugged in to on the host. Som
 110:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  a unique serial number internally, and setting the device descriptors serial number string 
 111:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  will cause it to use the internal serial number.
 112:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host
 114:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number for the device.
 115:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 116:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            0xDC
 117:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 118:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Length of the device's unique internal serial number, in bits, if present on the selected m
 119:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 120:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 121:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    80
 122:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 123:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Start address of the internal serial number, in the appropriate address space, if present o
 124:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 125:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 126:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0x0E
 127:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#else
 128:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            NO_DESCRIPTOR
 129:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 130:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    0
 131:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0
 132:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
 133:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 134:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Function Prototypes: */
 135:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Sends a Remote Wakeup request to the host. This signals to the host that the device should
 136:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  be taken out of suspended mode, and communications should resume.
 137:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 138:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  Typically, this is implemented so that HID devices (mice, keyboards, etc.) can wake up the
 139:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  host computer when the host has suspended all USB devices to enter a low power state.
 140:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 141:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention This function should only be used if the device has indicated to the host that it
 142:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             supports the Remote Wakeup feature in the device descriptors, and should only be
 143:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             issued if the host is currently allowing remote wakeup events from the device (i.
 144:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_Device_RemoteWakeupEnabled flag is set). When the \c NO_DEVICE_REMOT
 145:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             compile time option is used, this function is unavailable.
 146:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             \n\n
 147:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 148:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention The USB clock must be running for this function to operate. If the stack is initi
 149:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_OPT_MANUAL_PLL option enabled, the user must ensure that the PLL is 
 150:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             before attempting to call this function.
 151:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 152:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \see \ref Group_StdDescriptors for more information on the RMWAKEUP feature and device descr
 153:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 154:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			void USB_Device_SendRemoteWakeup(void);
 155:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 156:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 157:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Returns the current USB frame number, when in device mode. Every millisecond the USB bus is 
 158:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  the frame number is incremented by one.
 159:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 160:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \return Current USB frame number from the USB controller.
 161:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 162:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESUL
 163:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void)
 164:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 165:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				return UDFNUM;
 166:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 167:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 168:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if !defined(NO_SOF_EVENTS)
 169:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Enables the device mode Start Of Frame events. When enabled, this causes the
 170:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \ref EVENT_USB_Device_StartOfFrame() event to fire once per millisecond, synchronized to th
 171:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  at the start of each USB frame when enumerated in device mode.
 172:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 173:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is define
 174:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 175:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void) ATTR_ALWAYS_INLINE;
 176:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void)
 815               		.loc 5 176 24 view .LVU246
 816               	.LBE251:
 177:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 178:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					USB_INT_Enable(USB_INT_SOFI);
 817               		.loc 5 178 6 view .LVU247
 818               	.LBB254:
 819               	.LBB252:
 820               	.LBI252:
 821               		.file 6 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h"
   1:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
   2:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****              LUFA Library
   3:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   5:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****            www.lufa-lib.org
   7:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
   8:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   9:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
  10:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  12:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   all copies and that both that the copyright notice and this
  16:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   documentation, and that the name of the author not be used in
  18:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software without specific, written prior permission.
  20:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  21:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   The author disclaims all warranties with regard to this
  22:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software, including all implied warranties of merchantability
  23:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   special, indirect or consequential damages or any damages
  25:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   arising out of or in connection with the use or performance of
  28:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   this software.
  29:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
  30:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  31:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /** \file
  32:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \brief USB Controller Interrupt definitions for the AVR8 microcontrollers.
  33:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  34:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  This file contains definitions required for the correct handling of low level USB service routi
  35:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  from the USB controller.
  36:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  37:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  */
  40:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  41:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #ifndef __USBINTERRUPT_AVR8_H__
  42:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #define __USBINTERRUPT_AVR8_H__
  43:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  44:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Includes: */
  45:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#include "../../../../Common/Common.h"
  46:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  47:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  48:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if defined(__cplusplus)
  49:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			extern "C" {
  50:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  51:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  52:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Preprocessor Checks: */
  53:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  54:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  55:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  56:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  57:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Private Interface - For use in library only: */
  58:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	#if !defined(__DOXYGEN__)
  59:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Enums: */
  60:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			enum USB_Interrupts_t
  61:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  62:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || def
  63:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBUSTI  = 0,
  64:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  65:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__))
  66:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_IDTI    = 1,
  67:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  68:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__))
  69:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_WAKEUPI = 2,
  70:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SUSPI   = 3,
  71:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_EORSTI  = 4,
  72:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SOFI    = 5,
  73:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RXSTPI  = 6,
  74:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  75:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__))
  76:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_HSOFI   = 7,
  77:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DCONNI  = 8,
  78:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DDISCI  = 9,
  79:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RSTI    = 10,
  80:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_BCERRI  = 11,
  81:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBERRI  = 12,
  82:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SRPI    = 13,
  83:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  84:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			};
  85:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  86:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Inline Functions: */
  87:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
  88:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt)
 822               		.loc 6 88 23 view .LVU248
 823               	.LBB253:
  89:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  90:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 824               		.loc 6 90 5 view .LVU249
  91:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
  92:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
  93:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
  94:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << VBUSTE);
  95:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
  96:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
  99:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << IDTE);
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 101:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 104:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << WAKEUPE);
 105:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 107:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SUSPE);
 108:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 109:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 110:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << EORSTE);
 111:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 112:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SOFE);
 825               		.loc 6 113 7 view .LVU250
 826               		.loc 6 113 14 is_stmt 0 view .LVU251
 827 0010 8091 E200 		lds r24,226
 828 0014 8460      		ori r24,lo8(4)
 829 0016 8093 E200 		sts 226,r24
 114:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 830               		.loc 6 114 7 is_stmt 1 view .LVU252
 831               	.LVL62:
 832               	.L67:
 833               	/* epilogue start */
 834               		.loc 6 114 7 is_stmt 0 view .LVU253
 835               	.LBE253:
 836               	.LBE252:
 837               	.LBE254:
 338:./tmk_core/protocol/lufa/lufa.c **** 
 838               		.loc 1 338 1 view .LVU254
 839 001a 0895      		ret
 840               		.cfi_endproc
 841               	.LFE121:
 843               		.section	.text.EVENT_USB_Device_Disconnect,"ax",@progbits
 844               	.global	EVENT_USB_Device_Disconnect
 846               	EVENT_USB_Device_Disconnect:
 847               	.LFB122:
 341:./tmk_core/protocol/lufa/lufa.c ****     print("[D]");
 848               		.loc 1 341 1 is_stmt 1 view -0
 849               		.cfi_startproc
 850               	/* prologue: function */
 851               	/* frame size = 0 */
 852               	/* stack size = 0 */
 853               	.L__stack_usage = 0
 342:./tmk_core/protocol/lufa/lufa.c ****     /* For battery powered device */
 854               		.loc 1 342 17 view .LVU256
 344:./tmk_core/protocol/lufa/lufa.c **** /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 855               		.loc 1 344 5 view .LVU257
 344:./tmk_core/protocol/lufa/lufa.c **** /* TODO: This doesn't work. After several plug in/outs can not be enumerated.
 856               		.loc 1 344 23 is_stmt 0 view .LVU258
 857 0000 1092 0000 		sts USB_IsInitialized,__zero_reg__
 858               	/* epilogue start */
 352:./tmk_core/protocol/lufa/lufa.c **** 
 859               		.loc 1 352 1 view .LVU259
 860 0004 0895      		ret
 861               		.cfi_endproc
 862               	.LFE122:
 864               		.section	.text.EVENT_USB_Device_Reset,"ax",@progbits
 865               	.global	EVENT_USB_Device_Reset
 867               	EVENT_USB_Device_Reset:
 868               	.LFB139:
 869               		.cfi_startproc
 870               	/* prologue: function */
 871               	/* frame size = 0 */
 872               	/* stack size = 0 */
 873               	.L__stack_usage = 0
 874               	/* epilogue start */
 875 0000 0895      		ret
 876               		.cfi_endproc
 877               	.LFE139:
 879               		.section	.text.EVENT_USB_Device_Suspend,"ax",@progbits
 880               	.global	EVENT_USB_Device_Suspend
 882               	EVENT_USB_Device_Suspend:
 883               	.LFB124:
 360:./tmk_core/protocol/lufa/lufa.c ****     print("[S]");
 884               		.loc 1 360 1 is_stmt 1 view -0
 885               		.cfi_startproc
 886               	/* prologue: function */
 887               	/* frame size = 0 */
 888               	/* stack size = 0 */
 889               	.L__stack_usage = 0
 361:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
 890               		.loc 1 361 17 view .LVU261
 891               	/* epilogue start */
 365:./tmk_core/protocol/lufa/lufa.c **** 
 892               		.loc 1 365 1 is_stmt 0 view .LVU262
 893 0000 0895      		ret
 894               		.cfi_endproc
 895               	.LFE124:
 897               		.section	.text.EVENT_USB_Device_WakeUp,"ax",@progbits
 898               	.global	EVENT_USB_Device_WakeUp
 900               	EVENT_USB_Device_WakeUp:
 901               	.LFB125:
 368:./tmk_core/protocol/lufa/lufa.c ****     print("[W]");
 902               		.loc 1 368 1 is_stmt 1 view -0
 903               		.cfi_startproc
 904               	/* prologue: function */
 905               	/* frame size = 0 */
 906               	/* stack size = 0 */
 907               	.L__stack_usage = 0
 369:./tmk_core/protocol/lufa/lufa.c ****     suspend_wakeup_init();
 908               		.loc 1 369 17 view .LVU264
 370:./tmk_core/protocol/lufa/lufa.c **** 
 909               		.loc 1 370 5 view .LVU265
 910 0000 0C94 0000 		jmp suspend_wakeup_init
 911               	.LVL63:
 912               		.cfi_endproc
 913               	.LFE125:
 915               		.section	.text.EVENT_USB_Device_ConfigurationChanged,"ax",@progbits
 916               	.global	EVENT_USB_Device_ConfigurationChanged
 918               	EVENT_USB_Device_ConfigurationChanged:
 919               	.LFB126:
 410:./tmk_core/protocol/lufa/lufa.c ****     bool ConfigSuccess = true;
 920               		.loc 1 410 1 view -0
 921               		.cfi_startproc
 922               	/* prologue: function */
 923               	/* frame size = 0 */
 924               	/* stack size = 0 */
 925               	.L__stack_usage = 0
 411:./tmk_core/protocol/lufa/lufa.c **** 
 926               		.loc 1 411 5 view .LVU267
 927               	.LVL64:
 414:./tmk_core/protocol/lufa/lufa.c ****                                      KEYBOARD_EPSIZE, ENDPOINT_BANK_SINGLE);
 928               		.loc 1 414 5 view .LVU268
 929               	.LBB255:
 930               	.LBI255:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 931               		.loc 2 200 23 view .LVU269
 932               	.LBB256:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 933               		.loc 2 205 5 view .LVU270
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 934               		.loc 2 207 5 view .LVU271
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 935               		.loc 2 210 5 view .LVU272
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 936               		.loc 2 210 5 is_stmt 0 view .LVU273
 937               	.LBE256:
 938               	.LBE255:
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 939               		.loc 2 97 5 is_stmt 1 view .LVU274
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 940               		.loc 2 98 5 view .LVU275
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 941               		.loc 2 100 5 view .LVU276
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 942               		.loc 2 100 11 view .LVU277
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 943               		.loc 2 106 5 view .LVU278
 944               	.LBB258:
 945               	.LBB257:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 946               		.loc 2 210 12 is_stmt 0 view .LVU279
 947 0000 42E0      		ldi r20,lo8(2)
 948 0002 61EC      		ldi r22,lo8(-63)
 949 0004 81E0      		ldi r24,lo8(1)
 950 0006 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 951               	.LVL65:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 952               		.loc 2 210 12 view .LVU280
 953               	.LBE257:
 954               	.LBE258:
 419:./tmk_core/protocol/lufa/lufa.c ****                                      MOUSE_EPSIZE, ENDPOINT_BANK_SINGLE);
 955               		.loc 1 419 5 is_stmt 1 view .LVU281
 956               	.LBB259:
 957               	.LBI259:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 958               		.loc 2 200 23 view .LVU282
 959               	.LBB260:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 960               		.loc 2 205 5 view .LVU283
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 961               		.loc 2 207 5 view .LVU284
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 962               		.loc 2 210 5 view .LVU285
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 963               		.loc 2 210 5 is_stmt 0 view .LVU286
 964               	.LBE260:
 965               	.LBE259:
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 966               		.loc 2 97 5 is_stmt 1 view .LVU287
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 967               		.loc 2 98 5 view .LVU288
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 968               		.loc 2 100 5 view .LVU289
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 969               		.loc 2 100 11 view .LVU290
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 970               		.loc 2 106 5 view .LVU291
 971               	.LBB262:
 972               	.LBB261:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 973               		.loc 2 210 12 is_stmt 0 view .LVU292
 974 000a 42E0      		ldi r20,lo8(2)
 975 000c 61EC      		ldi r22,lo8(-63)
 976 000e 82E0      		ldi r24,lo8(2)
 977 0010 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 978               	.LVL66:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 979               		.loc 2 210 12 view .LVU293
 980               	.LBE261:
 981               	.LBE262:
 425:./tmk_core/protocol/lufa/lufa.c ****                                      EXTRAKEY_EPSIZE, ENDPOINT_BANK_SINGLE);
 982               		.loc 1 425 5 is_stmt 1 view .LVU294
 983               	.LBB263:
 984               	.LBI263:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 985               		.loc 2 200 23 view .LVU295
 986               	.LBB264:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 987               		.loc 2 205 5 view .LVU296
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 988               		.loc 2 207 5 view .LVU297
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 989               		.loc 2 210 5 view .LVU298
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 990               		.loc 2 210 5 is_stmt 0 view .LVU299
 991               	.LBE264:
 992               	.LBE263:
  97:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 993               		.loc 2 97 5 is_stmt 1 view .LVU300
  98:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 994               		.loc 2 98 5 view .LVU301
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 995               		.loc 2 100 5 view .LVU302
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 996               		.loc 2 100 11 view .LVU303
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 997               		.loc 2 106 5 view .LVU304
 998               	.LBB266:
 999               	.LBB265:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1000               		.loc 2 210 12 is_stmt 0 view .LVU305
 1001 0014 42E0      		ldi r20,lo8(2)
 1002 0016 61EC      		ldi r22,lo8(-63)
 1003 0018 83E0      		ldi r24,lo8(3)
 1004 001a 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 1005               	.LVL67:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1006               		.loc 2 210 12 view .LVU306
 1007               	.LBE265:
 1008               	.LBE266:
 449:./tmk_core/protocol/lufa/lufa.c ****                                      NKRO_EPSIZE, ENDPOINT_BANK_SINGLE);
 1009               		.loc 1 449 5 is_stmt 1 view .LVU307
 1010               	.LBB267:
 1011               	.LBI267:
 200:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 1012               		.loc 2 200 23 view .LVU308
 1013               	.LBB268:
 205:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 1014               		.loc 2 205 5 view .LVU309
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 1015               		.loc 2 207 5 view .LVU310
 207:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 1016               		.loc 2 207 5 is_stmt 0 view .LVU311
 1017               	.LBE268:
 1018               	.LBE267:
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 1019               		.loc 2 100 11 is_stmt 1 view .LVU312
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 1020               		.loc 2 102 6 view .LVU313
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 1021               		.loc 2 103 6 view .LVU314
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 1022               		.loc 2 100 11 view .LVU315
 102:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 1023               		.loc 2 102 6 view .LVU316
 103:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 1024               		.loc 2 103 6 view .LVU317
 100:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 1025               		.loc 2 100 11 view .LVU318
 106:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1026               		.loc 2 106 5 view .LVU319
 1027               	.LBB270:
 1028               	.LBB269:
 210:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 1029               		.loc 2 210 12 is_stmt 0 view .LVU320
 1030 001e 42E2      		ldi r20,lo8(34)
 1031 0020 61EC      		ldi r22,lo8(-63)
 1032 0022 84E0      		ldi r24,lo8(4)
 1033 0024 0C94 0000 		jmp Endpoint_ConfigureEndpoint_Prv
 1034               	.LVL68:
 1035               	.LBE269:
 1036               	.LBE270:
 1037               		.cfi_endproc
 1038               	.LFE126:
 1040               		.section	.text.EVENT_USB_Device_ControlRequest,"ax",@progbits
 1041               	.global	EVENT_USB_Device_ControlRequest
 1043               	EVENT_USB_Device_ControlRequest:
 1044               	.LFB127:
 482:./tmk_core/protocol/lufa/lufa.c ****     uint8_t* ReportData = NULL;
 1045               		.loc 1 482 1 is_stmt 1 view -0
 1046               		.cfi_startproc
 1047               	/* prologue: function */
 1048               	/* frame size = 0 */
 1049               	/* stack size = 0 */
 1050               	.L__stack_usage = 0
 483:./tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 1051               		.loc 1 483 5 view .LVU322
 1052               	.LVL69:
 484:./tmk_core/protocol/lufa/lufa.c **** 
 1053               		.loc 1 484 5 view .LVU323
 487:./tmk_core/protocol/lufa/lufa.c ****     {
 1054               		.loc 1 487 5 view .LVU324
 487:./tmk_core/protocol/lufa/lufa.c ****     {
 1055               		.loc 1 487 31 is_stmt 0 view .LVU325
 1056 0000 8091 0000 		lds r24,USB_ControlRequest+1
 487:./tmk_core/protocol/lufa/lufa.c ****     {
 1057               		.loc 1 487 5 view .LVU326
 1058 0004 8330      		cpi r24,lo8(3)
 1059 0006 01F4      		brne .+2
 1060 0008 00C0      		rjmp .L75
 1061 000a 00F4      		brsh .L76
 1062 000c 8130      		cpi r24,lo8(1)
 1063 000e 01F0      		breq .L77
 1064 0010 8230      		cpi r24,lo8(2)
 1065 0012 01F4      		brne .+2
 1066 0014 00C0      		rjmp .L78
 1067 0016 0895      		ret
 1068               	.L76:
 1069 0018 8A30      		cpi r24,lo8(10)
 1070 001a 01F4      		brne .+2
 1071 001c 00C0      		rjmp .L80
 1072 001e 8B30      		cpi r24,lo8(11)
 1073 0020 01F4      		brne .+2
 1074 0022 00C0      		rjmp .L81
 1075 0024 8930      		cpi r24,lo8(9)
 1076 0026 01F0      		breq .+2
 1077 0028 00C0      		rjmp .L74
 510:./tmk_core/protocol/lufa/lufa.c ****             {
 1078               		.loc 1 510 13 is_stmt 1 view .LVU327
 510:./tmk_core/protocol/lufa/lufa.c ****             {
 1079               		.loc 1 510 16 is_stmt 0 view .LVU328
 1080 002a 8091 0000 		lds r24,USB_ControlRequest
 1081 002e 8132      		cpi r24,lo8(33)
 1082 0030 01F0      		breq .+2
 1083 0032 00C0      		rjmp .L74
 514:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 1084               		.loc 1 514 17 is_stmt 1 view .LVU329
 514:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 1085               		.loc 1 514 43 is_stmt 0 view .LVU330
 1086 0034 8091 0000 		lds r24,USB_ControlRequest+4
 1087 0038 9091 0000 		lds r25,USB_ControlRequest+4+1
 1088 003c 0097      		sbiw r24,0
 1089 003e 01F0      		breq .L86
 1090 0040 0397      		sbiw r24,3
 1091 0042 01F4      		brne .L74
 1092               	.L86:
 519:./tmk_core/protocol/lufa/lufa.c **** 
 1093               		.loc 1 519 21 is_stmt 1 view .LVU331
 1094               	.LBB271:
 1095               	.LBI271:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1096               		.loc 2 442 23 view .LVU332
 1097               	.LBB272:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1098               		.loc 2 444 5 view .LVU333
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1099               		.loc 2 444 12 is_stmt 0 view .LVU334
 1100 0044 8091 E800 		lds r24,232
 1101 0048 877F      		andi r24,lo8(-9)
 1102 004a 8093 E800 		sts 232,r24
 1103               	.L87:
 1104               	.LBE272:
 1105               	.LBE271:
 521:./tmk_core/protocol/lufa/lufa.c ****                         if (USB_DeviceState == DEVICE_STATE_Unattached)
 1106               		.loc 1 521 27 is_stmt 1 view .LVU335
 1107               	.LBB273:
 1108               	.LBI273:
 417:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1109               		.loc 2 417 23 view .LVU336
 1110               	.LBB274:
 419:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1111               		.loc 2 419 5 view .LVU337
 419:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1112               		.loc 2 419 14 is_stmt 0 view .LVU338
 1113 004e 8091 E800 		lds r24,232
 1114               	.LBE274:
 1115               	.LBE273:
 521:./tmk_core/protocol/lufa/lufa.c ****                         if (USB_DeviceState == DEVICE_STATE_Unattached)
 1116               		.loc 1 521 27 view .LVU339
 1117 0052 82FF      		sbrs r24,2
 1118 0054 00C0      		rjmp .L88
 525:./tmk_core/protocol/lufa/lufa.c **** 
 1119               		.loc 1 525 21 is_stmt 1 view .LVU340
 1120               	.LBB275:
 1121               	.LBI275:
 457:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 464:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 469:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 472:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 473:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 474:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 476:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 477:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 478:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 479:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 480:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 481:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 482:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 483:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 484:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 485:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 487:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 489:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 490:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 492:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 495:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 496:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 497:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 498:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 499:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 500:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 501:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 502:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 503:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 504:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, \c false otherwise.
 505:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 506:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 507:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 508:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 509:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 510:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 511:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 512:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 513:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 514:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 515:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 516:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 517:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 518:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 519:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 520:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 521:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 522:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 523:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 524:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 526:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 528:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 529:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 531:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 532:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 533:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 534:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 535:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 536:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 537:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 538:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 539:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 540:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 1122               		.loc 2 540 26 view .LVU341
 1123               	.LBB276:
 541:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 542:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 1124               		.loc 2 542 5 view .LVU342
 1125               		.loc 2 542 12 is_stmt 0 view .LVU343
 1126 0056 8091 F100 		lds r24,241
 1127               	.LBE276:
 1128               	.LBE275:
 525:./tmk_core/protocol/lufa/lufa.c **** 
 1129               		.loc 1 525 40 view .LVU344
 1130 005a 8093 0000 		sts keyboard_led_stats,r24
 527:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 1131               		.loc 1 527 21 is_stmt 1 view .LVU345
 1132               	.LBB277:
 1133               	.LBI277:
 468:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1134               		.loc 2 468 23 view .LVU346
 1135               	.LBB278:
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1136               		.loc 2 471 6 view .LVU347
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1137               		.loc 2 471 13 is_stmt 0 view .LVU348
 1138 005e 8091 E800 		lds r24,232
 1139 0062 8B77      		andi r24,lo8(123)
 1140               	.L102:
 1141               	.LBE278:
 1142               	.LBE277:
 1143               	.LBB279:
 1144               	.LBB280:
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1145               		.loc 2 456 13 view .LVU349
 1146 0064 8093 E800 		sts 232,r24
 1147               	.LBE280:
 1148               	.LBE279:
 579:./tmk_core/protocol/lufa/lufa.c ****             }
 1149               		.loc 1 579 17 is_stmt 1 view .LVU350
 1150 0068 0C94 0000 		jmp Endpoint_ClearStatusStage
 1151               	.LVL70:
 1152               	.L77:
 490:./tmk_core/protocol/lufa/lufa.c ****             {
 1153               		.loc 1 490 13 view .LVU351
 490:./tmk_core/protocol/lufa/lufa.c ****             {
 1154               		.loc 1 490 16 is_stmt 0 view .LVU352
 1155 006c 8091 0000 		lds r24,USB_ControlRequest
 1156 0070 813A      		cpi r24,lo8(-95)
 1157 0072 01F4      		brne .L74
 492:./tmk_core/protocol/lufa/lufa.c **** 
 1158               		.loc 1 492 17 is_stmt 1 view .LVU353
 1159               	.LBB282:
 1160               	.LBI282:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1161               		.loc 2 442 23 view .LVU354
 1162               	.LBB283:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1163               		.loc 2 444 5 view .LVU355
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1164               		.loc 2 444 12 is_stmt 0 view .LVU356
 1165 0074 8091 E800 		lds r24,232
 1166 0078 877F      		andi r24,lo8(-9)
 1167 007a 8093 E800 		sts 232,r24
 1168               	.LBE283:
 1169               	.LBE282:
 495:./tmk_core/protocol/lufa/lufa.c ****                 case KEYBOARD_INTERFACE:
 1170               		.loc 1 495 17 is_stmt 1 view .LVU357
 1171 007e 8091 0000 		lds r24,USB_ControlRequest+4
 1172 0082 9091 0000 		lds r25,USB_ControlRequest+4+1
 1173 0086 892B      		or r24,r25
 1174 0088 01F4      		brne .L91
 499:./tmk_core/protocol/lufa/lufa.c ****                     break;
 1175               		.loc 1 499 32 is_stmt 0 view .LVU358
 1176 008a 60E2      		ldi r22,lo8(32)
 498:./tmk_core/protocol/lufa/lufa.c ****                     ReportSize = sizeof(keyboard_report_sent);
 1177               		.loc 1 498 32 view .LVU359
 1178 008c 80E0      		ldi r24,lo8(keyboard_report_sent)
 1179 008e 90E0      		ldi r25,hi8(keyboard_report_sent)
 1180               	.L84:
 1181               	.LVL71:
 504:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearOUT();
 1182               		.loc 1 504 17 is_stmt 1 view .LVU360
 1183 0090 70E0      		ldi r23,0
 1184 0092 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 1185               	.LVL72:
 505:./tmk_core/protocol/lufa/lufa.c ****             }
 1186               		.loc 1 505 17 view .LVU361
 1187               	.LBB284:
 1188               	.LBI284:
 468:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1189               		.loc 2 468 23 view .LVU362
 1190               	.LBB285:
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1191               		.loc 2 471 6 view .LVU363
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1192               		.loc 2 471 13 is_stmt 0 view .LVU364
 1193 0096 8091 E800 		lds r24,232
 1194 009a 8B77      		andi r24,lo8(123)
 1195 009c 8093 E800 		sts 232,r24
 1196 00a0 0895      		ret
 1197               	.LVL73:
 1198               	.L91:
 471:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1199               		.loc 2 471 13 view .LVU365
 1200               	.LBE285:
 1201               	.LBE284:
 484:./tmk_core/protocol/lufa/lufa.c **** 
 1202               		.loc 1 484 14 view .LVU366
 1203 00a2 60E0      		ldi r22,0
 483:./tmk_core/protocol/lufa/lufa.c ****     uint8_t  ReportSize = 0;
 1204               		.loc 1 483 14 view .LVU367
 1205 00a4 90E0      		ldi r25,0
 1206 00a6 80E0      		ldi r24,0
 1207 00a8 00C0      		rjmp .L84
 1208               	.L88:
 522:./tmk_core/protocol/lufa/lufa.c ****                           return;
 1209               		.loc 1 522 25 is_stmt 1 view .LVU368
 522:./tmk_core/protocol/lufa/lufa.c ****                           return;
 1210               		.loc 1 522 45 is_stmt 0 view .LVU369
 1211 00aa 8091 0000 		lds r24,USB_DeviceState
 522:./tmk_core/protocol/lufa/lufa.c ****                           return;
 1212               		.loc 1 522 28 view .LVU370
 1213 00ae 8111      		cpse r24,__zero_reg__
 1214 00b0 00C0      		rjmp .L87
 1215               	.L74:
 1216               	/* epilogue start */
 588:./tmk_core/protocol/lufa/lufa.c **** 
 1217               		.loc 1 588 1 view .LVU371
 1218 00b2 0895      		ret
 1219               	.L75:
 537:./tmk_core/protocol/lufa/lufa.c ****             {
 1220               		.loc 1 537 13 is_stmt 1 view .LVU372
 537:./tmk_core/protocol/lufa/lufa.c ****             {
 1221               		.loc 1 537 16 is_stmt 0 view .LVU373
 1222 00b4 8091 0000 		lds r24,USB_ControlRequest
 1223 00b8 813A      		cpi r24,lo8(-95)
 1224 00ba 01F4      		brne .L74
 539:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1225               		.loc 1 539 17 is_stmt 1 view .LVU374
 539:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1226               		.loc 1 539 20 is_stmt 0 view .LVU375
 1227 00bc 8091 0000 		lds r24,USB_ControlRequest+4
 1228 00c0 9091 0000 		lds r25,USB_ControlRequest+4+1
 1229 00c4 892B      		or r24,r25
 1230 00c6 01F4      		brne .L74
 540:./tmk_core/protocol/lufa/lufa.c ****                     while (!(Endpoint_IsINReady()));
 1231               		.loc 1 540 21 is_stmt 1 view .LVU376
 1232               	.LBB286:
 1233               	.LBI286:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1234               		.loc 2 442 23 view .LVU377
 1235               	.LBB287:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1236               		.loc 2 444 5 view .LVU378
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1237               		.loc 2 444 12 is_stmt 0 view .LVU379
 1238 00c8 8091 E800 		lds r24,232
 1239 00cc 877F      		andi r24,lo8(-9)
 1240 00ce 8093 E800 		sts 232,r24
 1241               	.L89:
 1242               	.LBE287:
 1243               	.LBE286:
 541:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 1244               		.loc 1 541 52 is_stmt 1 discriminator 1 view .LVU380
 541:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 1245               		.loc 1 541 27 discriminator 1 view .LVU381
 1246               	.LBB288:
 1247               	.LBI288:
 405:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1248               		.loc 2 405 23 discriminator 1 view .LVU382
 1249               	.LBB289:
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1250               		.loc 2 407 5 discriminator 1 view .LVU383
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1251               		.loc 2 407 14 is_stmt 0 discriminator 1 view .LVU384
 1252 00d2 8091 E800 		lds r24,232
 1253               	.LBE289:
 1254               	.LBE288:
 541:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_Write_8(keyboard_protocol);
 1255               		.loc 1 541 27 discriminator 1 view .LVU385
 1256 00d6 80FF      		sbrs r24,0
 1257 00d8 00C0      		rjmp .L89
 542:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearIN();
 1258               		.loc 1 542 21 is_stmt 1 view .LVU386
 1259 00da 8091 0000 		lds r24,keyboard_protocol
 1260               	.LVL74:
 1261               	.LBB290:
 1262               	.LBI290:
 543:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 544:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 545:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 546:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 547:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 548:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 549:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 550:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 551:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 552:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 1263               		.loc 2 552 23 view .LVU387
 1264               	.LBB291:
 553:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 554:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 1265               		.loc 2 554 5 view .LVU388
 1266               	.L103:
 1267               		.loc 2 554 5 is_stmt 0 view .LVU389
 1268               	.LBE291:
 1269               	.LBE290:
 1270               	.LBB292:
 1271               	.LBI292:
 552:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1272               		.loc 2 552 23 is_stmt 1 view .LVU390
 1273               	.LBB293:
 1274               		.loc 2 554 5 view .LVU391
 1275               		.loc 2 554 12 is_stmt 0 view .LVU392
 1276 00de 8093 F100 		sts 241,r24
 1277               	.LVL75:
 1278               		.loc 2 554 12 view .LVU393
 1279               	.LBE293:
 1280               	.LBE292:
 578:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 1281               		.loc 1 578 17 is_stmt 1 view .LVU394
 1282               	.LBB294:
 1283               	.LBI279:
 453:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1284               		.loc 2 453 23 view .LVU395
 1285               	.LBB281:
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1286               		.loc 2 456 6 view .LVU396
 456:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 1287               		.loc 2 456 13 is_stmt 0 view .LVU397
 1288 00e2 8091 E800 		lds r24,232
 1289 00e6 8E77      		andi r24,lo8(126)
 1290 00e8 00C0      		rjmp .L102
 1291               	.L81:
 1292               	.LBE281:
 1293               	.LBE294:
 550:./tmk_core/protocol/lufa/lufa.c ****             {
 1294               		.loc 1 550 13 is_stmt 1 view .LVU398
 550:./tmk_core/protocol/lufa/lufa.c ****             {
 1295               		.loc 1 550 16 is_stmt 0 view .LVU399
 1296 00ea 8091 0000 		lds r24,USB_ControlRequest
 1297 00ee 8132      		cpi r24,lo8(33)
 1298 00f0 01F4      		brne .L74
 552:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1299               		.loc 1 552 17 is_stmt 1 view .LVU400
 552:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearSETUP();
 1300               		.loc 1 552 20 is_stmt 0 view .LVU401
 1301 00f2 8091 0000 		lds r24,USB_ControlRequest+4
 1302 00f6 9091 0000 		lds r25,USB_ControlRequest+4+1
 1303 00fa 892B      		or r24,r25
 1304 00fc 01F4      		brne .L74
 553:./tmk_core/protocol/lufa/lufa.c ****                     Endpoint_ClearStatusStage();
 1305               		.loc 1 553 21 is_stmt 1 view .LVU402
 1306               	.LBB295:
 1307               	.LBI295:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1308               		.loc 2 442 23 view .LVU403
 1309               	.LBB296:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1310               		.loc 2 444 5 view .LVU404
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1311               		.loc 2 444 12 is_stmt 0 view .LVU405
 1312 00fe 8091 E800 		lds r24,232
 1313 0102 877F      		andi r24,lo8(-9)
 1314 0104 8093 E800 		sts 232,r24
 1315               	.LBE296:
 1316               	.LBE295:
 554:./tmk_core/protocol/lufa/lufa.c **** 
 1317               		.loc 1 554 21 is_stmt 1 view .LVU406
 1318 0108 0E94 0000 		call Endpoint_ClearStatusStage
 1319               	.LVL76:
 556:./tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 1320               		.loc 1 556 21 view .LVU407
 556:./tmk_core/protocol/lufa/lufa.c ****                     clear_keyboard();
 1321               		.loc 1 556 39 is_stmt 0 view .LVU408
 1322 010c 8091 0000 		lds r24,USB_ControlRequest+2
 1323 0110 8093 0000 		sts keyboard_protocol,r24
 557:./tmk_core/protocol/lufa/lufa.c ****                 }
 1324               		.loc 1 557 21 is_stmt 1 view .LVU409
 1325 0114 0C94 0000 		jmp clear_keyboard
 1326               	.LVL77:
 1327               	.L80:
 563:./tmk_core/protocol/lufa/lufa.c ****             {
 1328               		.loc 1 563 13 view .LVU410
 563:./tmk_core/protocol/lufa/lufa.c ****             {
 1329               		.loc 1 563 16 is_stmt 0 view .LVU411
 1330 0118 8091 0000 		lds r24,USB_ControlRequest
 1331 011c 8132      		cpi r24,lo8(33)
 1332 011e 01F4      		brne .L74
 565:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearStatusStage();
 1333               		.loc 1 565 17 is_stmt 1 view .LVU412
 1334               	.LBB297:
 1335               	.LBI297:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1336               		.loc 2 442 23 view .LVU413
 1337               	.LBB298:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1338               		.loc 2 444 5 view .LVU414
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1339               		.loc 2 444 12 is_stmt 0 view .LVU415
 1340 0120 8091 E800 		lds r24,232
 1341 0124 877F      		andi r24,lo8(-9)
 1342 0126 8093 E800 		sts 232,r24
 1343               	.LBE298:
 1344               	.LBE297:
 566:./tmk_core/protocol/lufa/lufa.c **** 
 1345               		.loc 1 566 17 is_stmt 1 view .LVU416
 1346 012a 0E94 0000 		call Endpoint_ClearStatusStage
 1347               	.LVL78:
 568:./tmk_core/protocol/lufa/lufa.c ****             }
 1348               		.loc 1 568 17 view .LVU417
 568:./tmk_core/protocol/lufa/lufa.c ****             }
 1349               		.loc 1 568 71 is_stmt 0 view .LVU418
 1350 012e 8091 0000 		lds r24,USB_ControlRequest+3
 568:./tmk_core/protocol/lufa/lufa.c ****             }
 1351               		.loc 1 568 31 view .LVU419
 1352 0132 8093 0000 		sts keyboard_idle,r24
 1353 0136 0895      		ret
 1354               	.L78:
 573:./tmk_core/protocol/lufa/lufa.c ****             {
 1355               		.loc 1 573 13 is_stmt 1 view .LVU420
 573:./tmk_core/protocol/lufa/lufa.c ****             {
 1356               		.loc 1 573 16 is_stmt 0 view .LVU421
 1357 0138 8091 0000 		lds r24,USB_ControlRequest
 1358 013c 813A      		cpi r24,lo8(-95)
 1359 013e 01F0      		breq .+2
 1360 0140 00C0      		rjmp .L74
 575:./tmk_core/protocol/lufa/lufa.c ****                 while (!(Endpoint_IsINReady()));
 1361               		.loc 1 575 17 is_stmt 1 view .LVU422
 1362               	.LBB299:
 1363               	.LBI299:
 442:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1364               		.loc 2 442 23 view .LVU423
 1365               	.LBB300:
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1366               		.loc 2 444 5 view .LVU424
 444:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1367               		.loc 2 444 12 is_stmt 0 view .LVU425
 1368 0142 8091 E800 		lds r24,232
 1369 0146 877F      		andi r24,lo8(-9)
 1370 0148 8093 E800 		sts 232,r24
 1371               	.L90:
 1372               	.LBE300:
 1373               	.LBE299:
 576:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 1374               		.loc 1 576 48 is_stmt 1 discriminator 1 view .LVU426
 576:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 1375               		.loc 1 576 23 discriminator 1 view .LVU427
 1376               	.LBB301:
 1377               	.LBI301:
 405:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 1378               		.loc 2 405 23 discriminator 1 view .LVU428
 1379               	.LBB302:
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1380               		.loc 2 407 5 discriminator 1 view .LVU429
 407:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 1381               		.loc 2 407 14 is_stmt 0 discriminator 1 view .LVU430
 1382 014c 8091 E800 		lds r24,232
 1383               	.LBE302:
 1384               	.LBE301:
 576:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_Write_8(keyboard_idle);
 1385               		.loc 1 576 23 discriminator 1 view .LVU431
 1386 0150 80FF      		sbrs r24,0
 1387 0152 00C0      		rjmp .L90
 577:./tmk_core/protocol/lufa/lufa.c ****                 Endpoint_ClearIN();
 1388               		.loc 1 577 17 is_stmt 1 view .LVU432
 1389 0154 8091 0000 		lds r24,keyboard_idle
 1390 0158 00C0      		rjmp .L103
 1391               		.cfi_endproc
 1392               	.LFE127:
 1394               		.section	.text.sendchar,"ax",@progbits
 1395               	.global	sendchar
 1397               	sendchar:
 1398               	.LVL79:
 1399               	.LFB134:
 791:./tmk_core/protocol/lufa/lufa.c **** 
 792:./tmk_core/protocol/lufa/lufa.c **** 
 793:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 794:./tmk_core/protocol/lufa/lufa.c ****  * sendchar
 795:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 796:./tmk_core/protocol/lufa/lufa.c **** #ifdef CONSOLE_ENABLE
 797:./tmk_core/protocol/lufa/lufa.c **** #define SEND_TIMEOUT 5
 798:./tmk_core/protocol/lufa/lufa.c **** int8_t sendchar(uint8_t c)
 799:./tmk_core/protocol/lufa/lufa.c **** {
 800:./tmk_core/protocol/lufa/lufa.c ****     // Not wait once timeouted.
 801:./tmk_core/protocol/lufa/lufa.c ****     // Because sendchar() is called so many times, waiting each call causes big lag.
 802:./tmk_core/protocol/lufa/lufa.c ****     static bool timeouted = false;
 803:./tmk_core/protocol/lufa/lufa.c **** 
 804:./tmk_core/protocol/lufa/lufa.c ****     // prevents Console_Task() from running during sendchar() runs.
 805:./tmk_core/protocol/lufa/lufa.c ****     // or char will be lost. These two function is mutually exclusive.
 806:./tmk_core/protocol/lufa/lufa.c ****     CONSOLE_FLUSH_SET(false);
 807:./tmk_core/protocol/lufa/lufa.c **** 
 808:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 809:./tmk_core/protocol/lufa/lufa.c ****         return -1;
 810:./tmk_core/protocol/lufa/lufa.c **** 
 811:./tmk_core/protocol/lufa/lufa.c ****     uint8_t ep = Endpoint_GetCurrentEndpoint();
 812:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(CONSOLE_IN_EPNUM);
 813:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
 814:./tmk_core/protocol/lufa/lufa.c ****         goto ERROR_EXIT;
 815:./tmk_core/protocol/lufa/lufa.c ****     }
 816:./tmk_core/protocol/lufa/lufa.c **** 
 817:./tmk_core/protocol/lufa/lufa.c ****     if (timeouted && !Endpoint_IsReadWriteAllowed()) {
 818:./tmk_core/protocol/lufa/lufa.c ****         goto ERROR_EXIT;
 819:./tmk_core/protocol/lufa/lufa.c ****     }
 820:./tmk_core/protocol/lufa/lufa.c **** 
 821:./tmk_core/protocol/lufa/lufa.c ****     timeouted = false;
 822:./tmk_core/protocol/lufa/lufa.c **** 
 823:./tmk_core/protocol/lufa/lufa.c ****     uint8_t timeout = SEND_TIMEOUT;
 824:./tmk_core/protocol/lufa/lufa.c ****     while (!Endpoint_IsReadWriteAllowed()) {
 825:./tmk_core/protocol/lufa/lufa.c ****         if (USB_DeviceState != DEVICE_STATE_Configured) {
 826:./tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 827:./tmk_core/protocol/lufa/lufa.c ****         }
 828:./tmk_core/protocol/lufa/lufa.c ****         if (Endpoint_IsStalled()) {
 829:./tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 830:./tmk_core/protocol/lufa/lufa.c ****         }
 831:./tmk_core/protocol/lufa/lufa.c ****         if (!(timeout--)) {
 832:./tmk_core/protocol/lufa/lufa.c ****             timeouted = true;
 833:./tmk_core/protocol/lufa/lufa.c ****             goto ERROR_EXIT;
 834:./tmk_core/protocol/lufa/lufa.c ****         }
 835:./tmk_core/protocol/lufa/lufa.c ****         _delay_ms(1);
 836:./tmk_core/protocol/lufa/lufa.c ****     }
 837:./tmk_core/protocol/lufa/lufa.c **** 
 838:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_8(c);
 839:./tmk_core/protocol/lufa/lufa.c **** 
 840:./tmk_core/protocol/lufa/lufa.c ****     // send when bank is full
 841:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsReadWriteAllowed()) {
 842:./tmk_core/protocol/lufa/lufa.c ****         while (!(Endpoint_IsINReady()));
 843:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_ClearIN();
 844:./tmk_core/protocol/lufa/lufa.c ****     } else {
 845:./tmk_core/protocol/lufa/lufa.c ****         CONSOLE_FLUSH_SET(true);
 846:./tmk_core/protocol/lufa/lufa.c ****     }
 847:./tmk_core/protocol/lufa/lufa.c **** 
 848:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 849:./tmk_core/protocol/lufa/lufa.c ****     return 0;
 850:./tmk_core/protocol/lufa/lufa.c **** ERROR_EXIT:
 851:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
 852:./tmk_core/protocol/lufa/lufa.c ****     return -1;
 853:./tmk_core/protocol/lufa/lufa.c **** }
 854:./tmk_core/protocol/lufa/lufa.c **** #else
 855:./tmk_core/protocol/lufa/lufa.c **** int8_t sendchar(uint8_t c)
 856:./tmk_core/protocol/lufa/lufa.c **** {
 1400               		.loc 1 856 1 view -0
 1401               		.cfi_startproc
 1402               	/* prologue: function */
 1403               	/* frame size = 0 */
 1404               	/* stack size = 0 */
 1405               	.L__stack_usage = 0
 857:./tmk_core/protocol/lufa/lufa.c ****     return 0;
 1406               		.loc 1 857 5 view .LVU434
 858:./tmk_core/protocol/lufa/lufa.c **** }
 1407               		.loc 1 858 1 is_stmt 0 view .LVU435
 1408 0000 80E0      		ldi r24,0
 1409               	.LVL80:
 1410               	/* epilogue start */
 1411               		.loc 1 858 1 view .LVU436
 1412 0002 0895      		ret
 1413               		.cfi_endproc
 1414               	.LFE134:
 1416               		.section	.text.startup.main,"ax",@progbits
 1417               		.weak	main
 1419               	main:
 1420               	.LFB137:
 859:./tmk_core/protocol/lufa/lufa.c **** #endif
 860:./tmk_core/protocol/lufa/lufa.c **** 
 861:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
 862:./tmk_core/protocol/lufa/lufa.c ****  * MIDI
 863:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
 864:./tmk_core/protocol/lufa/lufa.c **** 
 865:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
 866:./tmk_core/protocol/lufa/lufa.c **** static void usb_send_func(MidiDevice * device, uint16_t cnt, uint8_t byte0, uint8_t byte1, uint8_t 
 867:./tmk_core/protocol/lufa/lufa.c ****   MIDI_EventPacket_t event;
 868:./tmk_core/protocol/lufa/lufa.c ****   event.Data1 = byte0;
 869:./tmk_core/protocol/lufa/lufa.c ****   event.Data2 = byte1;
 870:./tmk_core/protocol/lufa/lufa.c ****   event.Data3 = byte2;
 871:./tmk_core/protocol/lufa/lufa.c **** 
 872:./tmk_core/protocol/lufa/lufa.c ****   uint8_t cable = 0;
 873:./tmk_core/protocol/lufa/lufa.c **** 
 874:./tmk_core/protocol/lufa/lufa.c **** // Endpoint_SelectEndpoint(MIDI_STREAM_IN_EPNUM);
 875:./tmk_core/protocol/lufa/lufa.c **** 
 876:./tmk_core/protocol/lufa/lufa.c ****   //if the length is undefined we assume it is a SYSEX message
 877:./tmk_core/protocol/lufa/lufa.c ****   if (midi_packet_length(byte0) == UNDEFINED) {
 878:./tmk_core/protocol/lufa/lufa.c ****     switch(cnt) {
 879:./tmk_core/protocol/lufa/lufa.c ****       case 3:
 880:./tmk_core/protocol/lufa/lufa.c ****         if (byte2 == SYSEX_END)
 881:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_ENDS_IN_3);
 882:./tmk_core/protocol/lufa/lufa.c ****         else
 883:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_START_OR_CONT);
 884:./tmk_core/protocol/lufa/lufa.c ****         break;
 885:./tmk_core/protocol/lufa/lufa.c ****       case 2:
 886:./tmk_core/protocol/lufa/lufa.c ****         if (byte1 == SYSEX_END)
 887:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_ENDS_IN_2);
 888:./tmk_core/protocol/lufa/lufa.c ****         else
 889:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_START_OR_CONT);
 890:./tmk_core/protocol/lufa/lufa.c ****         break;
 891:./tmk_core/protocol/lufa/lufa.c ****       case 1:
 892:./tmk_core/protocol/lufa/lufa.c ****         if (byte0 == SYSEX_END)
 893:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_ENDS_IN_1);
 894:./tmk_core/protocol/lufa/lufa.c ****         else
 895:./tmk_core/protocol/lufa/lufa.c ****           event.Event = MIDI_EVENT(cable, SYSEX_START_OR_CONT);
 896:./tmk_core/protocol/lufa/lufa.c ****         break;
 897:./tmk_core/protocol/lufa/lufa.c ****       default:
 898:./tmk_core/protocol/lufa/lufa.c ****         return; //invalid cnt
 899:./tmk_core/protocol/lufa/lufa.c ****     }
 900:./tmk_core/protocol/lufa/lufa.c ****   } else {
 901:./tmk_core/protocol/lufa/lufa.c ****     //deal with 'system common' messages
 902:./tmk_core/protocol/lufa/lufa.c ****     //TODO are there any more?
 903:./tmk_core/protocol/lufa/lufa.c ****     switch(byte0 & 0xF0){
 904:./tmk_core/protocol/lufa/lufa.c ****       case MIDI_SONGPOSITION:
 905:./tmk_core/protocol/lufa/lufa.c ****         event.Event = MIDI_EVENT(cable, SYS_COMMON_3);
 906:./tmk_core/protocol/lufa/lufa.c ****         break;
 907:./tmk_core/protocol/lufa/lufa.c ****       case MIDI_SONGSELECT:
 908:./tmk_core/protocol/lufa/lufa.c ****       case MIDI_TC_QUARTERFRAME:
 909:./tmk_core/protocol/lufa/lufa.c ****         event.Event = MIDI_EVENT(cable, SYS_COMMON_2);
 910:./tmk_core/protocol/lufa/lufa.c ****         break;
 911:./tmk_core/protocol/lufa/lufa.c ****       default:
 912:./tmk_core/protocol/lufa/lufa.c ****         event.Event = MIDI_EVENT(cable, byte0);
 913:./tmk_core/protocol/lufa/lufa.c ****         break;
 914:./tmk_core/protocol/lufa/lufa.c ****     }
 915:./tmk_core/protocol/lufa/lufa.c ****   }
 916:./tmk_core/protocol/lufa/lufa.c **** 
 917:./tmk_core/protocol/lufa/lufa.c **** // Endpoint_Write_Stream_LE(&event, sizeof(event), NULL);
 918:./tmk_core/protocol/lufa/lufa.c **** // Endpoint_ClearIN();
 919:./tmk_core/protocol/lufa/lufa.c **** 
 920:./tmk_core/protocol/lufa/lufa.c ****   MIDI_Device_SendEventPacket(&USB_MIDI_Interface, &event);
 921:./tmk_core/protocol/lufa/lufa.c ****   MIDI_Device_Flush(&USB_MIDI_Interface);
 922:./tmk_core/protocol/lufa/lufa.c ****   MIDI_Device_USBTask(&USB_MIDI_Interface);
 923:./tmk_core/protocol/lufa/lufa.c ****   USB_USBTask();
 924:./tmk_core/protocol/lufa/lufa.c **** }
 925:./tmk_core/protocol/lufa/lufa.c **** 
 926:./tmk_core/protocol/lufa/lufa.c **** static void usb_get_midi(MidiDevice * device) {
 927:./tmk_core/protocol/lufa/lufa.c ****   MIDI_EventPacket_t event;
 928:./tmk_core/protocol/lufa/lufa.c ****   while (MIDI_Device_ReceiveEventPacket(&USB_MIDI_Interface, &event)) {
 929:./tmk_core/protocol/lufa/lufa.c **** 
 930:./tmk_core/protocol/lufa/lufa.c ****     midi_packet_length_t length = midi_packet_length(event.Data1);
 931:./tmk_core/protocol/lufa/lufa.c ****     uint8_t input[3];
 932:./tmk_core/protocol/lufa/lufa.c ****     input[0] = event.Data1;
 933:./tmk_core/protocol/lufa/lufa.c ****     input[1] = event.Data2;
 934:./tmk_core/protocol/lufa/lufa.c ****     input[2] = event.Data3;
 935:./tmk_core/protocol/lufa/lufa.c ****     if (length == UNDEFINED) {
 936:./tmk_core/protocol/lufa/lufa.c ****       //sysex
 937:./tmk_core/protocol/lufa/lufa.c ****       if (event.Event == MIDI_EVENT(0, SYSEX_START_OR_CONT) || event.Event == MIDI_EVENT(0, SYSEX_E
 938:./tmk_core/protocol/lufa/lufa.c ****         length = 3;
 939:./tmk_core/protocol/lufa/lufa.c ****       } else if (event.Event == MIDI_EVENT(0, SYSEX_ENDS_IN_2)) {
 940:./tmk_core/protocol/lufa/lufa.c ****         length = 2;
 941:./tmk_core/protocol/lufa/lufa.c ****       } else if(event.Event ==  MIDI_EVENT(0, SYSEX_ENDS_IN_1)) {
 942:./tmk_core/protocol/lufa/lufa.c ****         length = 1;
 943:./tmk_core/protocol/lufa/lufa.c ****       } else {
 944:./tmk_core/protocol/lufa/lufa.c ****         //XXX what to do?
 945:./tmk_core/protocol/lufa/lufa.c ****       }
 946:./tmk_core/protocol/lufa/lufa.c ****     }
 947:./tmk_core/protocol/lufa/lufa.c **** 
 948:./tmk_core/protocol/lufa/lufa.c ****     //pass the data to the device input function
 949:./tmk_core/protocol/lufa/lufa.c ****     if (length != UNDEFINED)
 950:./tmk_core/protocol/lufa/lufa.c ****       midi_device_input(device, length, input);
 951:./tmk_core/protocol/lufa/lufa.c ****   }
 952:./tmk_core/protocol/lufa/lufa.c ****   MIDI_Device_USBTask(&USB_MIDI_Interface);
 953:./tmk_core/protocol/lufa/lufa.c ****   USB_USBTask();
 954:./tmk_core/protocol/lufa/lufa.c **** }
 955:./tmk_core/protocol/lufa/lufa.c **** 
 956:./tmk_core/protocol/lufa/lufa.c **** static void midi_usb_init(MidiDevice * device){
 957:./tmk_core/protocol/lufa/lufa.c ****   midi_device_init(device);
 958:./tmk_core/protocol/lufa/lufa.c ****   midi_device_set_send_func(device, usb_send_func);
 959:./tmk_core/protocol/lufa/lufa.c ****   midi_device_set_pre_input_process_func(device, usb_get_midi);
 960:./tmk_core/protocol/lufa/lufa.c **** 
 961:./tmk_core/protocol/lufa/lufa.c ****   // SetupHardware();
 962:./tmk_core/protocol/lufa/lufa.c ****   sei();
 963:./tmk_core/protocol/lufa/lufa.c **** }
 964:./tmk_core/protocol/lufa/lufa.c **** 
 965:./tmk_core/protocol/lufa/lufa.c **** void MIDI_Task(void)
 966:./tmk_core/protocol/lufa/lufa.c **** {
 967:./tmk_core/protocol/lufa/lufa.c **** 
 968:./tmk_core/protocol/lufa/lufa.c ****     /* Device must be connected and configured for the task to run */
 969:./tmk_core/protocol/lufa/lufa.c ****     dprint("in MIDI_TASK\n");
 970:./tmk_core/protocol/lufa/lufa.c ****     if (USB_DeviceState != DEVICE_STATE_Configured)
 971:./tmk_core/protocol/lufa/lufa.c ****       return;
 972:./tmk_core/protocol/lufa/lufa.c ****     dprint("continuing in MIDI_TASK\n");
 973:./tmk_core/protocol/lufa/lufa.c **** 
 974:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(MIDI_STREAM_IN_EPADDR);
 975:./tmk_core/protocol/lufa/lufa.c **** 
 976:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady())
 977:./tmk_core/protocol/lufa/lufa.c ****     {
 978:./tmk_core/protocol/lufa/lufa.c **** 
 979:./tmk_core/protocol/lufa/lufa.c ****         dprint("Endpoint is ready\n");
 980:./tmk_core/protocol/lufa/lufa.c **** 
 981:./tmk_core/protocol/lufa/lufa.c ****         uint8_t MIDICommand = 0;
 982:./tmk_core/protocol/lufa/lufa.c ****         uint8_t MIDIPitch;
 983:./tmk_core/protocol/lufa/lufa.c **** 
 984:./tmk_core/protocol/lufa/lufa.c ****         /* Get board button status - if pressed use channel 10 (percussion), otherwise use channel 
 985:./tmk_core/protocol/lufa/lufa.c ****         uint8_t Channel = MIDI_CHANNEL(1);
 986:./tmk_core/protocol/lufa/lufa.c **** 
 987:./tmk_core/protocol/lufa/lufa.c ****         MIDICommand = MIDI_COMMAND_NOTE_ON;
 988:./tmk_core/protocol/lufa/lufa.c ****         MIDIPitch   = 0x3E;
 989:./tmk_core/protocol/lufa/lufa.c **** 
 990:./tmk_core/protocol/lufa/lufa.c ****         /* Check if a MIDI command is to be sent */
 991:./tmk_core/protocol/lufa/lufa.c ****         if (MIDICommand)
 992:./tmk_core/protocol/lufa/lufa.c ****         {
 993:./tmk_core/protocol/lufa/lufa.c ****             dprint("Command exists\n");
 994:./tmk_core/protocol/lufa/lufa.c ****             MIDI_EventPacket_t MIDIEvent = (MIDI_EventPacket_t)
 995:./tmk_core/protocol/lufa/lufa.c ****                 {
 996:./tmk_core/protocol/lufa/lufa.c ****                     .Event       = MIDI_EVENT(0, MIDICommand),
 997:./tmk_core/protocol/lufa/lufa.c **** 
 998:./tmk_core/protocol/lufa/lufa.c ****                     .Data1       = MIDICommand | Channel,
 999:./tmk_core/protocol/lufa/lufa.c ****                     .Data2       = MIDIPitch,
1000:./tmk_core/protocol/lufa/lufa.c ****                     .Data3       = MIDI_STANDARD_VELOCITY,
1001:./tmk_core/protocol/lufa/lufa.c ****                 };
1002:./tmk_core/protocol/lufa/lufa.c **** 
1003:./tmk_core/protocol/lufa/lufa.c ****             /* Write the MIDI event packet to the endpoint */
1004:./tmk_core/protocol/lufa/lufa.c ****             Endpoint_Write_Stream_LE(&MIDIEvent, sizeof(MIDIEvent), NULL);
1005:./tmk_core/protocol/lufa/lufa.c **** 
1006:./tmk_core/protocol/lufa/lufa.c ****             /* Send the data in the endpoint to the host */
1007:./tmk_core/protocol/lufa/lufa.c ****             Endpoint_ClearIN();
1008:./tmk_core/protocol/lufa/lufa.c ****         }
1009:./tmk_core/protocol/lufa/lufa.c ****     }
1010:./tmk_core/protocol/lufa/lufa.c **** 
1011:./tmk_core/protocol/lufa/lufa.c **** 
1012:./tmk_core/protocol/lufa/lufa.c ****     /* Select the MIDI OUT stream */
1013:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(MIDI_STREAM_OUT_EPADDR);
1014:./tmk_core/protocol/lufa/lufa.c **** 
1015:./tmk_core/protocol/lufa/lufa.c ****     /* Check if a MIDI command has been received */
1016:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsOUTReceived())
1017:./tmk_core/protocol/lufa/lufa.c ****     {
1018:./tmk_core/protocol/lufa/lufa.c ****         MIDI_EventPacket_t MIDIEvent;
1019:./tmk_core/protocol/lufa/lufa.c **** 
1020:./tmk_core/protocol/lufa/lufa.c ****         /* Read the MIDI event packet from the endpoint */
1021:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_Read_Stream_LE(&MIDIEvent, sizeof(MIDIEvent), NULL);
1022:./tmk_core/protocol/lufa/lufa.c **** 
1023:./tmk_core/protocol/lufa/lufa.c ****         /* If the endpoint is now empty, clear the bank */
1024:./tmk_core/protocol/lufa/lufa.c ****         if (!(Endpoint_BytesInEndpoint()))
1025:./tmk_core/protocol/lufa/lufa.c ****         {
1026:./tmk_core/protocol/lufa/lufa.c ****             /* Clear the endpoint ready for new packet */
1027:./tmk_core/protocol/lufa/lufa.c ****             Endpoint_ClearOUT();
1028:./tmk_core/protocol/lufa/lufa.c ****         }
1029:./tmk_core/protocol/lufa/lufa.c ****     }
1030:./tmk_core/protocol/lufa/lufa.c **** }
1031:./tmk_core/protocol/lufa/lufa.c **** 
1032:./tmk_core/protocol/lufa/lufa.c **** #endif
1033:./tmk_core/protocol/lufa/lufa.c **** 
1034:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
1035:./tmk_core/protocol/lufa/lufa.c ****  * VIRTUAL SERIAL
1036:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
1037:./tmk_core/protocol/lufa/lufa.c **** 
1038:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
1039:./tmk_core/protocol/lufa/lufa.c **** void virtser_init(void)
1040:./tmk_core/protocol/lufa/lufa.c **** {
1041:./tmk_core/protocol/lufa/lufa.c ****   cdc_device.State.ControlLineStates.DeviceToHost = CDC_CONTROL_LINE_IN_DSR ;
1042:./tmk_core/protocol/lufa/lufa.c ****   CDC_Device_SendControlLineStateChange(&cdc_device);
1043:./tmk_core/protocol/lufa/lufa.c **** }
1044:./tmk_core/protocol/lufa/lufa.c **** 
1045:./tmk_core/protocol/lufa/lufa.c **** void virtser_recv(uint8_t c) __attribute__ ((weak));
1046:./tmk_core/protocol/lufa/lufa.c **** void virtser_recv(uint8_t c)
1047:./tmk_core/protocol/lufa/lufa.c **** {
1048:./tmk_core/protocol/lufa/lufa.c ****   // Ignore by default
1049:./tmk_core/protocol/lufa/lufa.c **** }
1050:./tmk_core/protocol/lufa/lufa.c **** 
1051:./tmk_core/protocol/lufa/lufa.c **** void virtser_task(void)
1052:./tmk_core/protocol/lufa/lufa.c **** {
1053:./tmk_core/protocol/lufa/lufa.c ****   uint16_t count = CDC_Device_BytesReceived(&cdc_device);
1054:./tmk_core/protocol/lufa/lufa.c ****   uint8_t ch;
1055:./tmk_core/protocol/lufa/lufa.c ****   if (count)
1056:./tmk_core/protocol/lufa/lufa.c ****   {
1057:./tmk_core/protocol/lufa/lufa.c ****     ch = CDC_Device_ReceiveByte(&cdc_device);
1058:./tmk_core/protocol/lufa/lufa.c ****     virtser_recv(ch);
1059:./tmk_core/protocol/lufa/lufa.c ****   }
1060:./tmk_core/protocol/lufa/lufa.c **** }
1061:./tmk_core/protocol/lufa/lufa.c **** void virtser_send(const uint8_t byte)
1062:./tmk_core/protocol/lufa/lufa.c **** {
1063:./tmk_core/protocol/lufa/lufa.c ****   uint8_t timeout = 255;
1064:./tmk_core/protocol/lufa/lufa.c ****   uint8_t ep = Endpoint_GetCurrentEndpoint();
1065:./tmk_core/protocol/lufa/lufa.c **** 
1066:./tmk_core/protocol/lufa/lufa.c ****   if (cdc_device.State.ControlLineStates.HostToDevice & CDC_CONTROL_LINE_OUT_DTR)
1067:./tmk_core/protocol/lufa/lufa.c ****   {
1068:./tmk_core/protocol/lufa/lufa.c ****     /* IN packet */
1069:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(cdc_device.Config.DataINEndpoint.Address);
1070:./tmk_core/protocol/lufa/lufa.c **** 
1071:./tmk_core/protocol/lufa/lufa.c ****     if (!Endpoint_IsEnabled() || !Endpoint_IsConfigured()) {
1072:./tmk_core/protocol/lufa/lufa.c ****         Endpoint_SelectEndpoint(ep);
1073:./tmk_core/protocol/lufa/lufa.c ****         return;
1074:./tmk_core/protocol/lufa/lufa.c ****     }
1075:./tmk_core/protocol/lufa/lufa.c **** 
1076:./tmk_core/protocol/lufa/lufa.c ****     while (timeout-- && !Endpoint_IsReadWriteAllowed()) _delay_us(40);
1077:./tmk_core/protocol/lufa/lufa.c **** 
1078:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_Write_8(byte);
1079:./tmk_core/protocol/lufa/lufa.c ****     CDC_Device_Flush(&cdc_device);
1080:./tmk_core/protocol/lufa/lufa.c **** 
1081:./tmk_core/protocol/lufa/lufa.c ****     if (Endpoint_IsINReady()) {
1082:./tmk_core/protocol/lufa/lufa.c ****       Endpoint_ClearIN();
1083:./tmk_core/protocol/lufa/lufa.c ****     }
1084:./tmk_core/protocol/lufa/lufa.c **** 
1085:./tmk_core/protocol/lufa/lufa.c ****     Endpoint_SelectEndpoint(ep);
1086:./tmk_core/protocol/lufa/lufa.c ****   }
1087:./tmk_core/protocol/lufa/lufa.c **** }
1088:./tmk_core/protocol/lufa/lufa.c **** #endif
1089:./tmk_core/protocol/lufa/lufa.c **** 
1090:./tmk_core/protocol/lufa/lufa.c **** /*******************************************************************************
1091:./tmk_core/protocol/lufa/lufa.c ****  * main
1092:./tmk_core/protocol/lufa/lufa.c ****  ******************************************************************************/
1093:./tmk_core/protocol/lufa/lufa.c **** static void setup_mcu(void)
1094:./tmk_core/protocol/lufa/lufa.c **** {
1095:./tmk_core/protocol/lufa/lufa.c ****     /* Disable watchdog if enabled by bootloader/fuses */
1096:./tmk_core/protocol/lufa/lufa.c ****     MCUSR &= ~(1 << WDRF);
1097:./tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
1098:./tmk_core/protocol/lufa/lufa.c **** 
1099:./tmk_core/protocol/lufa/lufa.c ****     /* Disable clock division */
1100:./tmk_core/protocol/lufa/lufa.c ****     // clock_prescale_set(clock_div_1);
1101:./tmk_core/protocol/lufa/lufa.c **** 
1102:./tmk_core/protocol/lufa/lufa.c ****     CLKPR = (1 << CLKPCE);
1103:./tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
1104:./tmk_core/protocol/lufa/lufa.c **** }
1105:./tmk_core/protocol/lufa/lufa.c **** 
1106:./tmk_core/protocol/lufa/lufa.c **** static void setup_usb(void)
1107:./tmk_core/protocol/lufa/lufa.c **** {
1108:./tmk_core/protocol/lufa/lufa.c ****     // Leonardo needs. Without this USB device is not recognized.
1109:./tmk_core/protocol/lufa/lufa.c ****     USB_Disable();
1110:./tmk_core/protocol/lufa/lufa.c **** 
1111:./tmk_core/protocol/lufa/lufa.c ****     USB_Init();
1112:./tmk_core/protocol/lufa/lufa.c **** 
1113:./tmk_core/protocol/lufa/lufa.c ****     // for Console_Task
1114:./tmk_core/protocol/lufa/lufa.c ****     USB_Device_EnableSOFEvents();
1115:./tmk_core/protocol/lufa/lufa.c ****     print_set_sendchar(sendchar);
1116:./tmk_core/protocol/lufa/lufa.c **** }
1117:./tmk_core/protocol/lufa/lufa.c **** 
1118:./tmk_core/protocol/lufa/lufa.c **** 
1119:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
1120:./tmk_core/protocol/lufa/lufa.c **** void fallthrough_callback(MidiDevice * device,
1121:./tmk_core/protocol/lufa/lufa.c ****     uint16_t cnt, uint8_t byte0, uint8_t byte1, uint8_t byte2);
1122:./tmk_core/protocol/lufa/lufa.c **** void cc_callback(MidiDevice * device,
1123:./tmk_core/protocol/lufa/lufa.c ****     uint8_t chan, uint8_t num, uint8_t val);
1124:./tmk_core/protocol/lufa/lufa.c **** void sysex_callback(MidiDevice * device,
1125:./tmk_core/protocol/lufa/lufa.c ****     uint16_t start, uint8_t length, uint8_t * data);
1126:./tmk_core/protocol/lufa/lufa.c **** #endif
1127:./tmk_core/protocol/lufa/lufa.c **** 
1128:./tmk_core/protocol/lufa/lufa.c **** int main(void)  __attribute__ ((weak));
1129:./tmk_core/protocol/lufa/lufa.c **** int main(void)
1130:./tmk_core/protocol/lufa/lufa.c **** {
 1421               		.loc 1 1130 1 is_stmt 1 view -0
 1422               		.cfi_startproc
 1423               	/* prologue: function */
 1424               	/* frame size = 0 */
 1425               	/* stack size = 0 */
 1426               	.L__stack_usage = 0
1131:./tmk_core/protocol/lufa/lufa.c **** 
1132:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
1133:./tmk_core/protocol/lufa/lufa.c ****     midi_device_init(&midi_device);
1134:./tmk_core/protocol/lufa/lufa.c ****     midi_device_set_send_func(&midi_device, usb_send_func);
1135:./tmk_core/protocol/lufa/lufa.c ****     midi_device_set_pre_input_process_func(&midi_device, usb_get_midi);
1136:./tmk_core/protocol/lufa/lufa.c **** #endif
1137:./tmk_core/protocol/lufa/lufa.c **** 
1138:./tmk_core/protocol/lufa/lufa.c ****     setup_mcu();
 1427               		.loc 1 1138 5 view .LVU438
 1428               	.LBB312:
 1429               	.LBI312:
1093:./tmk_core/protocol/lufa/lufa.c **** {
 1430               		.loc 1 1093 13 view .LVU439
 1431               	.LBB313:
1096:./tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 1432               		.loc 1 1096 5 view .LVU440
1096:./tmk_core/protocol/lufa/lufa.c ****     wdt_disable();
 1433               		.loc 1 1096 11 is_stmt 0 view .LVU441
 1434 0000 84B7      		in r24,0x34
 1435 0002 877F      		andi r24,lo8(-9)
 1436 0004 84BF      		out 0x34,r24
1097:./tmk_core/protocol/lufa/lufa.c **** 
 1437               		.loc 1 1097 5 is_stmt 1 view .LVU442
 1438               	.LBB314:
 1439               	.LBI314:
 1440               		.file 7 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h"
   1:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** /* Copyright (c) 2002, 2004 Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    Copyright (c) 2005, 2006, 2007 Eric B. Weddington
   3:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    All rights reserved.
   4:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
   5:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
   8:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  11:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****      the documentation and/or other materials provided with the
  14:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****      distribution.
  15:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  16:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****      contributors may be used to endorse or promote products derived
  18:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****      from this software without specific prior written permission.
  19:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  20:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  32:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** /* $Id: wdt.h 2522 2016-04-20 05:43:23Z joerg_wunsch $ */
  33:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  34:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** /*
  35:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    avr/wdt.h - macros for AVR watchdog timer
  36:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****  */
  37:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #ifndef _AVR_WDT_H_
  39:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #define _AVR_WDT_H_
  40:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  41:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #include <avr/io.h>
  42:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #include <stdint.h>
  43:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** /** \file */
  45:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** /** \defgroup avr_watchdog <avr/wdt.h>: Watchdog timer handling
  46:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     \code #include <avr/wdt.h> \endcode
  47:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     This header file declares the interface to some inline macros
  49:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     handling the watchdog timer present in many AVR devices.  In order
  50:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     to prevent the watchdog timer configuration from being
  51:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     accidentally altered by a crashing application, a special timed
  52:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     sequence is required in order to change it.  The macros within
  53:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     this header file handle the required sequence automatically
  54:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     before changing any value.  Interrupts will be disabled during
  55:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     the manipulation.
  56:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  57:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     \note Depending on the fuse configuration of the particular
  58:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     device, further restrictions might apply, in particular it might
  59:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     be disallowed to turn off the watchdog timer.
  60:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     Note that for newer devices (ATmega88 and newer, effectively any
  62:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     AVR that has the option to also generate interrupts), the watchdog
  63:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     timer remains active even after a system reset (except a power-on
  64:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     condition), using the fastest prescaler value (approximately 15
  65:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     ms).  It is therefore required to turn off the watchdog early
  66:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     during program startup, the datasheet recommends a sequence like
  67:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     the following:
  68:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  69:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     \code
  70:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     #include <stdint.h>
  71:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     #include <avr/wdt.h>
  72:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  73:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     uint8_t mcusr_mirror __attribute__ ((section (".noinit")));
  74:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  75:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     void get_mcusr(void) \
  76:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       __attribute__((naked)) \
  77:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       __attribute__((section(".init3")));
  78:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     void get_mcusr(void)
  79:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     {
  80:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       mcusr_mirror = MCUSR;
  81:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       MCUSR = 0;
  82:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       wdt_disable();
  83:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     }
  84:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     \endcode
  85:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  86:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     Saving the value of MCUSR in \c mcusr_mirror is only needed if the
  87:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     application later wants to examine the reset source, but in particular, 
  88:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     clearing the watchdog reset flag before disabling the
  89:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     watchdog is required, according to the datasheet.
  90:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** */
  91:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  92:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** /**
  93:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
  94:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    Reset the watchdog timer.  When the watchdog timer is enabled,
  95:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    a call to this instruction is required before the timer expires,
  96:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    otherwise a watchdog-initiated device reset will occur. 
  97:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** */
  98:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
  99:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #define wdt_reset() __asm__ __volatile__ ("wdr")
 100:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 101:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #ifndef __DOXYGEN__
 102:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #if defined(WDP3)
 104:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       _BV(WDP3)
 105:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #else
 106:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       0x00
 107:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #endif
 108:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 109:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #if defined(WDTCSR)
 110:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCSR
 111:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #elif defined(WDTCR)
 112:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCR
 113:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #else
 114:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDT
 115:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #endif
 116:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 117:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #if defined(WDTOE)
 118:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDTOE
 119:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #else
 120:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDCE
 121:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #endif
 122:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 123:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #endif	/* !__DOXYGEN__ */
 124:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 125:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** /**
 127:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
 128:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    Enable the watchdog timer, configuring it for expiry after
 129:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    \c timeout (which is a combination of the \c WDP0 through
 130:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    \c WDP2 bits to write into the \c WDTCR register; For those devices 
 131:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    that have a \c WDTCSR register, it uses the combination of the \c WDP0 
 132:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    through \c WDP3 bits).
 133:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 134:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    See also the symbolic constants \c WDTO_15MS et al.
 135:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** */
 136:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 138:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #if defined(__AVR_XMEGA__)
 139:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 140:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** /*
 141:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    wdt_enable(timeout) for xmega devices
 142:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** ** write signature (CCP_IOREG_gc) that enables change of protected I/O
 143:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    registers to the CCP register
 144:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** ** At the same time,
 145:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    1) set WDT change enable (WDT_CEN_bm)
 146:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    2) enable WDT (WDT_ENABLE_bm)
 147:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    3) set timeout (timeout)
 148:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** ** Synchronization starts when ENABLE bit of WDT is set. So, wait till it
 149:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    finishes (SYNCBUSY of STATUS register is automatically cleared after the
 150:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****    sync is finished).
 151:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** */
 152:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #define wdt_enable(timeout) \
 153:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** do { \
 154:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** uint8_t temp; \
 155:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** __asm__ __volatile__ (         \
 156:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"              "\n\t" \
 157:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"            "\n\t" \
 158:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]"     "\n\t" \
 159:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[wdt_enable_timeout]" "\n\t" \
 160:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "1:lds %[tmp], %[wdt_status_reg]"       "\n\t" \
 161:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "sbrc %[tmp], %[wdt_syncbusy_bit]"      "\n\t" \
 162:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "rjmp 1b"                               "\n\t" \
 163:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"             "\n\t" \
 164:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     : [tmp]                "=r" (temp) \
 165:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     : [rampd]              "I" (_SFR_IO_ADDR(RAMPD)),      \
 166:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [ccp_reg]            "I" (_SFR_IO_ADDR(CCP)),        \
 167:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [ioreg_cen_mask]     "r" ((uint8_t)CCP_IOREG_gc),     \
 168:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [wdt_reg]            "n" (_SFR_MEM_ADDR(WDT_CTRL)),   \
 169:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [wdt_enable_timeout] "r" ((uint8_t)(WDT_CEN_bm | WDT_ENABLE_bm | timeout)), \
 170:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [wdt_status_reg]     "n" (_SFR_MEM_ADDR(WDT_STATUS)), \
 171:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [wdt_syncbusy_bit]   "I" (WDT_SYNCBUSY_bm)            \
 172:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     : "r0" \
 173:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** ); \
 174:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** } while(0)
 175:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #define wdt_disable() \
 177:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** __asm__ __volatile__ (  \
 178:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"          "\n\t" \
 179:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"        "\n\t" \
 180:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]" "\n\t" \
 181:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[disable_mask]"   "\n\t" \
 182:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"         "\n\t" \
 183:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     : \
 184:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     : [rampd]             "I" (_SFR_IO_ADDR(RAMPD)),    \
 185:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [ccp_reg]           "I" (_SFR_IO_ADDR(CCP)),      \
 186:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [ioreg_cen_mask]    "r" ((uint8_t)CCP_IOREG_gc),   \
 187:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [wdt_reg]           "n" (_SFR_MEM_ADDR(WDT_CTRL)), \
 188:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [disable_mask]      "r" ((uint8_t)((~WDT_ENABLE_bm) | WDT_CEN_bm)) \
 189:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     : "r0" \
 190:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** );
 191:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 192:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #elif defined(__AVR_TINY__)
 193:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 194:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #define wdt_enable(value) \
 195:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 196:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 197:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 198:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 199:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 200:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "out %[WDTREG],%[WDVALUE]" "\n\t"  \
 201:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t"  \
 202:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     : /* no outputs */  \
 203:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),  \
 204:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 205:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 206:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00) \
 207:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       | _BV(WDE) | (value & 0x07) )) \
 208:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     : "r16" \
 209:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** )
 210:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 211:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #define wdt_disable() \
 212:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** do { \
 213:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** uint8_t temp_wd; \
 214:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 215:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 216:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 217:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 218:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 219:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "in  %[TEMP_WD],%[WDTREG]" "\n\t" \
 220:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "cbr %[TEMP_WD],%[WDVALUE]" "\n\t" \
 221:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "out %[WDTREG],%[TEMP_WD]" "\n\t" \
 222:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t" \
 223:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     : /*no output */ \
 224:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)), \
 225:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 226:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 227:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [TEMP_WD] "d" (temp_wd), \
 228:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****       [WDVALUE] "n" (1 << WDE) \
 229:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****     : "r16" \
 230:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** ); \
 231:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** }while(0)
 232:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 233:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #elif defined(CCP)
 234:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 235:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** static __inline__
 236:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 237:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 238:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** {
 239:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 240:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	{
 241:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 242:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 243:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 244:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 245:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 246:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 247:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 248:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			: /* no outputs */
 249:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 250:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 251:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 252:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 253:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 254:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			: "r0"
 255:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			);
 256:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	}
 257:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P (_WD_CONTROL_REG))
 258:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	{
 259:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 260:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 261:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 262:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 263:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 264:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 265:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 266:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			: /* no outputs */
 267:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 268:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 269:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 270:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 271:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 272:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			: "r0"
 273:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			);
 274:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	}
 275:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 276:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	{
 277:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 278:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 279:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 280:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 281:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 282:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 283:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 284:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			: /* no outputs */
 285:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 286:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 287:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 288:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 289:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 290:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			: "r0"
 291:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			);
 292:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	}
 293:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	else
 294:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****  	{
 295:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 296:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 297:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 298:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 299:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 300:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 301:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 302:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			: /* no outputs */
 303:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 304:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 305:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 306:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 307:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 308:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			: "r0"
 309:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 			);
 310:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	}
 311:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** }
 312:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 313:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** static __inline__
 314:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 315:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** void wdt_disable (void)
 316:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** {
 317:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 318:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	{
 319:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 320:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 321:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 322:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 323:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 324:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 325:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 326:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 327:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 328:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 329:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: /*no output */
 330:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 331:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 332:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 333:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 334:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 335:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: "r0"
 336:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				);
 337:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	}
 338:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P(_WD_CONTROL_REG))
 339:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	{
 340:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 341:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 342:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 343:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 344:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 345:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 346:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 347:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 348:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 349:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 350:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: /*no output */
 351:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 352:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 353:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 354:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 355:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 356:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: "r0"
 357:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				);
 358:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	}
 359:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 360:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	{
 361:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 362:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 363:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 364:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 365:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 366:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 367:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 368:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 369:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 370:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 371:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: /*no output */
 372:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 373:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 374:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 375:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 376:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 377:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: "r0"
 378:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				);
 379:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	}
 380:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	else
 381:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	{
 382:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 383:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 384:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 385:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 386:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 387:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 388:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 389:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 390:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 391:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 392:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: /*no output */
 393:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 394:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 395:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 396:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 397:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 398:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: "r0"
 399:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				);
 400:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	}
 401:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** }
 402:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 403:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** #else
 404:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 405:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** static __inline__
 406:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 407:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 408:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** {
 409:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 410:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	{
 411:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 412:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 413:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 414:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 415:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out %0, %1" "\n\t"
 416:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 417:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out %0, %2" "\n \t"
 418:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: /* no outputs */
 419:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 420:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 421:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 422:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 423:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: "r0"
 424:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 		);
 425:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	}
 426:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	else
 427:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	{
 428:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 429:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 430:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 431:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 432:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"sts %0, %1" "\n\t"
 433:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 434:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"sts %0, %2" "\n \t"
 435:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: /* no outputs */
 436:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 437:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 438:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 439:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 440:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: "r0"
 441:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 		);
 442:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	}
 443:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** }
 444:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 
 445:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** static __inline__
 446:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 447:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** void wdt_disable (void)
 1441               		.loc 7 447 6 view .LVU443
 1442               	.LBE314:
 1443               	.LBE313:
 1444               	.LBE312:
 448:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** {
 449:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 1445               		.loc 7 449 2 view .LVU444
 1446               	.LBB318:
 1447               	.LBB317:
 1448               	.LBB316:
 1449               	.LBB315:
 450:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	{
 451:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 452:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 453:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__"    "\n\t"
 454:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"cli"                        "\n\t"
 455:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"wdr"                        "\n\t"
 456:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"in  %[TEMPREG],%[WDTREG]"   "\n\t"
 457:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"ori %[TEMPREG],%[WDCE_WDE]" "\n\t"
 458:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMPREG]"   "\n\t"
 459:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out %[WDTREG],__zero_reg__" "\n\t"
 460:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__"   "\n\t"
 461:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: [TEMPREG] "=d" (temp_reg)
 462:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: [WDTREG]  "I"  (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 463:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
 464:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 				: "r0"
 465:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 		);
 466:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	}
 467:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	else
 468:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 	{
 469:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 1450               		.loc 7 469 9 view .LVU445
 470:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 1451               		.loc 7 470 3 view .LVU446
 1452               	/* #APP */
 1453               	 ;  470 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/avr/wdt.h" 1
 1454 0006 0FB6      		in __tmp_reg__,__SREG__
 1455 0008 F894      		cli
 1456 000a A895      		wdr
 1457 000c 8091 6000 		lds r24,96
 1458 0010 8861      		ori r24,24
 1459 0012 8093 6000 		sts 96,r24
 1460 0016 1092 6000 		sts 96,__zero_reg__
 1461 001a 0FBE      		out __SREG__,__tmp_reg__
 1462               		
 1463               	 ;  0 "" 2
 1464               	/* #NOAPP */
 1465               	.LBE315:
 1466               	.LBE316:
1102:./tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
 1467               		.loc 1 1102 5 view .LVU447
1102:./tmk_core/protocol/lufa/lufa.c ****     CLKPR = (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0);
 1468               		.loc 1 1102 11 is_stmt 0 view .LVU448
 1469 001c 80E8      		ldi r24,lo8(-128)
 1470 001e 8093 6100 		sts 97,r24
1103:./tmk_core/protocol/lufa/lufa.c **** }
 1471               		.loc 1 1103 5 is_stmt 1 view .LVU449
1103:./tmk_core/protocol/lufa/lufa.c **** }
 1472               		.loc 1 1103 11 is_stmt 0 view .LVU450
 1473 0022 1092 6100 		sts 97,__zero_reg__
 1474               	.LBE317:
 1475               	.LBE318:
1139:./tmk_core/protocol/lufa/lufa.c ****     keyboard_setup();
 1476               		.loc 1 1139 5 is_stmt 1 view .LVU451
 1477 0026 0E94 0000 		call keyboard_setup
 1478               	.LVL81:
1140:./tmk_core/protocol/lufa/lufa.c ****     setup_usb();
 1479               		.loc 1 1140 5 view .LVU452
 1480               	.LBB319:
 1481               	.LBI319:
1106:./tmk_core/protocol/lufa/lufa.c **** {
 1482               		.loc 1 1106 13 view .LVU453
 1483               	.LBB320:
1109:./tmk_core/protocol/lufa/lufa.c **** 
 1484               		.loc 1 1109 5 view .LVU454
 1485 002a 0E94 0000 		call USB_Disable
 1486               	.LVL82:
1111:./tmk_core/protocol/lufa/lufa.c **** 
 1487               		.loc 1 1111 5 view .LVU455
 1488 002e 0E94 0000 		call USB_Init
 1489               	.LVL83:
1114:./tmk_core/protocol/lufa/lufa.c ****     print_set_sendchar(sendchar);
 1490               		.loc 1 1114 5 view .LVU456
 1491               	.LBB321:
 1492               	.LBI321:
 176:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 1493               		.loc 5 176 24 view .LVU457
 1494               	.LBE321:
 1495               	.LBE320:
 1496               	.LBE319:
 1497               		.loc 5 178 6 view .LVU458
 1498               	.LBB326:
 1499               	.LBB325:
 1500               	.LBB324:
 1501               	.LBB322:
 1502               	.LBI322:
  88:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 1503               		.loc 6 88 23 view .LVU459
 1504               	.LBB323:
  90:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 1505               		.loc 6 90 5 view .LVU460
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 1506               		.loc 6 113 7 view .LVU461
 113:./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 1507               		.loc 6 113 14 is_stmt 0 view .LVU462
 1508 0032 8091 E200 		lds r24,226
 1509 0036 8460      		ori r24,lo8(4)
 1510 0038 8093 E200 		sts 226,r24
 1511               		.loc 6 114 7 is_stmt 1 view .LVU463
 1512               	.LVL84:
 1513               		.loc 6 114 7 is_stmt 0 view .LVU464
 1514               	.LBE323:
 1515               	.LBE322:
 1516               	.LBE324:
1115:./tmk_core/protocol/lufa/lufa.c **** }
 1517               		.loc 1 1115 33 is_stmt 1 view .LVU465
 1518               	.LBE325:
 1519               	.LBE326:
1141:./tmk_core/protocol/lufa/lufa.c ****     sei();
 1520               		.loc 1 1141 5 view .LVU466
 1521               	/* #APP */
 1522               	 ;  1141 "./tmk_core/protocol/lufa/lufa.c" 1
 1523 003c 7894      		sei
 1524               	 ;  0 "" 2
1142:./tmk_core/protocol/lufa/lufa.c **** 
1143:./tmk_core/protocol/lufa/lufa.c **** #ifdef MIDI_ENABLE
1144:./tmk_core/protocol/lufa/lufa.c ****     midi_register_fallthrough_callback(&midi_device, fallthrough_callback);
1145:./tmk_core/protocol/lufa/lufa.c ****     midi_register_cc_callback(&midi_device, cc_callback);
1146:./tmk_core/protocol/lufa/lufa.c ****     midi_register_sysex_callback(&midi_device, sysex_callback);
1147:./tmk_core/protocol/lufa/lufa.c **** 
1148:./tmk_core/protocol/lufa/lufa.c ****     // init_notes();
1149:./tmk_core/protocol/lufa/lufa.c ****     // midi_send_cc(&midi_device, 0, 1, 2);
1150:./tmk_core/protocol/lufa/lufa.c ****     // midi_send_cc(&midi_device, 15, 1, 0);
1151:./tmk_core/protocol/lufa/lufa.c ****     // midi_send_noteon(&midi_device, 0, 64, 127);
1152:./tmk_core/protocol/lufa/lufa.c ****     // midi_send_noteoff(&midi_device, 0, 64, 127);
1153:./tmk_core/protocol/lufa/lufa.c **** #endif
1154:./tmk_core/protocol/lufa/lufa.c **** 
1155:./tmk_core/protocol/lufa/lufa.c **** #ifdef BLUETOOTH_ENABLE
1156:./tmk_core/protocol/lufa/lufa.c ****     serial_init();
1157:./tmk_core/protocol/lufa/lufa.c **** #endif
1158:./tmk_core/protocol/lufa/lufa.c **** 
1159:./tmk_core/protocol/lufa/lufa.c ****     /* wait for USB startup & debug output */
1160:./tmk_core/protocol/lufa/lufa.c **** 
1161:./tmk_core/protocol/lufa/lufa.c **** #ifdef WAIT_FOR_USB
1162:./tmk_core/protocol/lufa/lufa.c ****     while (USB_DeviceState != DEVICE_STATE_Configured) {
1163:./tmk_core/protocol/lufa/lufa.c ****     #if defined(INTERRUPT_CONTROL_ENDPOINT)
1164:./tmk_core/protocol/lufa/lufa.c ****             ;
1165:./tmk_core/protocol/lufa/lufa.c ****     #else
1166:./tmk_core/protocol/lufa/lufa.c ****             USB_USBTask();
1167:./tmk_core/protocol/lufa/lufa.c ****     #endif
1168:./tmk_core/protocol/lufa/lufa.c ****     }
1169:./tmk_core/protocol/lufa/lufa.c ****     print("USB configured.\n");
1170:./tmk_core/protocol/lufa/lufa.c **** #else
1171:./tmk_core/protocol/lufa/lufa.c ****     USB_USBTask();
 1525               		.loc 1 1171 5 view .LVU467
 1526               	/* #NOAPP */
 1527 003e 0E94 0000 		call USB_USBTask
 1528               	.LVL85:
1172:./tmk_core/protocol/lufa/lufa.c **** #endif
1173:./tmk_core/protocol/lufa/lufa.c ****     /* init modules */
1174:./tmk_core/protocol/lufa/lufa.c ****     keyboard_init();
 1529               		.loc 1 1174 5 view .LVU468
 1530 0042 0E94 0000 		call keyboard_init
 1531               	.LVL86:
1175:./tmk_core/protocol/lufa/lufa.c ****     host_set_driver(&lufa_driver);
 1532               		.loc 1 1175 5 view .LVU469
 1533 0046 80E0      		ldi r24,lo8(lufa_driver)
 1534 0048 90E0      		ldi r25,hi8(lufa_driver)
 1535 004a 0E94 0000 		call host_set_driver
 1536               	.LVL87:
 1537               	.L106:
1176:./tmk_core/protocol/lufa/lufa.c **** #ifdef SLEEP_LED_ENABLE
1177:./tmk_core/protocol/lufa/lufa.c ****     sleep_led_init();
1178:./tmk_core/protocol/lufa/lufa.c **** #endif
1179:./tmk_core/protocol/lufa/lufa.c **** 
1180:./tmk_core/protocol/lufa/lufa.c **** #ifdef VIRTSER_ENABLE
1181:./tmk_core/protocol/lufa/lufa.c ****     virtser_init();
1182:./tmk_core/protocol/lufa/lufa.c **** #endif
1183:./tmk_core/protocol/lufa/lufa.c **** 
1184:./tmk_core/protocol/lufa/lufa.c ****     print("Keyboard start.\n");
1185:./tmk_core/protocol/lufa/lufa.c ****     while (1) {
1186:./tmk_core/protocol/lufa/lufa.c ****         #if !defined(BLUETOOTH_ENABLE) && !defined(ADAFRUIT_BLE_ENABLE)
1187:./tmk_core/protocol/lufa/lufa.c ****         while (USB_DeviceState == DEVICE_STATE_Suspended) {
 1538               		.loc 1 1187 15 view .LVU470
 1539               		.loc 1 1187 32 is_stmt 0 view .LVU471
 1540 004e 8091 0000 		lds r24,USB_DeviceState
 1541               		.loc 1 1187 15 view .LVU472
 1542 0052 8530      		cpi r24,lo8(5)
 1543 0054 01F0      		breq .L110
1188:./tmk_core/protocol/lufa/lufa.c ****             print("[s]");
1189:./tmk_core/protocol/lufa/lufa.c ****             suspend_power_down();
1190:./tmk_core/protocol/lufa/lufa.c ****             if (USB_Device_RemoteWakeupEnabled && suspend_wakeup_condition()) {
1191:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
1192:./tmk_core/protocol/lufa/lufa.c ****             }
1193:./tmk_core/protocol/lufa/lufa.c ****         }
1194:./tmk_core/protocol/lufa/lufa.c ****         #endif
1195:./tmk_core/protocol/lufa/lufa.c **** 
1196:./tmk_core/protocol/lufa/lufa.c ****         keyboard_task();
 1544               		.loc 1 1196 9 is_stmt 1 view .LVU473
 1545 0056 0E94 0000 		call keyboard_task
 1546               	.LVL88:
1185:./tmk_core/protocol/lufa/lufa.c ****         #if !defined(BLUETOOTH_ENABLE) && !defined(ADAFRUIT_BLE_ENABLE)
 1547               		.loc 1 1185 11 view .LVU474
1187:./tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 1548               		.loc 1 1187 15 is_stmt 0 view .LVU475
 1549 005a 00C0      		rjmp .L106
 1550               	.L110:
1188:./tmk_core/protocol/lufa/lufa.c ****             print("[s]");
 1551               		.loc 1 1188 25 is_stmt 1 view .LVU476
1189:./tmk_core/protocol/lufa/lufa.c ****             if (USB_Device_RemoteWakeupEnabled && suspend_wakeup_condition()) {
 1552               		.loc 1 1189 13 view .LVU477
 1553 005c 0E94 0000 		call suspend_power_down
 1554               	.LVL89:
1190:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1555               		.loc 1 1190 13 view .LVU478
1190:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1556               		.loc 1 1190 16 is_stmt 0 view .LVU479
 1557 0060 8091 0000 		lds r24,USB_Device_RemoteWakeupEnabled
 1558 0064 8823      		tst r24
 1559 0066 01F0      		breq .L106
1190:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1560               		.loc 1 1190 51 discriminator 1 view .LVU480
 1561 0068 0E94 0000 		call suspend_wakeup_condition
 1562               	.LVL90:
1190:./tmk_core/protocol/lufa/lufa.c ****                     USB_Device_SendRemoteWakeup();
 1563               		.loc 1 1190 48 discriminator 1 view .LVU481
 1564 006c 8823      		tst r24
 1565 006e 01F0      		breq .L106
1191:./tmk_core/protocol/lufa/lufa.c ****             }
 1566               		.loc 1 1191 21 is_stmt 1 view .LVU482
 1567 0070 0E94 0000 		call USB_Device_SendRemoteWakeup
 1568               	.LVL91:
 1569 0074 00C0      		rjmp .L106
 1570               		.cfi_endproc
 1571               	.LFE137:
 1573               	.global	lufa_driver
 1574               		.section	.data.lufa_driver,"aw"
 1577               	lufa_driver:
 1578 0000 0000      		.word	gs(keyboard_leds)
 1579 0002 0000      		.word	gs(send_keyboard)
 1580 0004 0000      		.word	gs(send_mouse)
 1581 0006 0000      		.word	gs(send_system)
 1582 0008 0000      		.word	gs(send_consumer)
 1583               		.section	.bss.keyboard_report_sent,"aw",@nobits
 1586               	keyboard_report_sent:
 1587 0000 0000 0000 		.zero	32
 1587      0000 0000 
 1587      0000 0000 
 1587      0000 0000 
 1587      0000 0000 
 1588               		.section	.bss.keyboard_led_stats,"aw",@nobits
 1591               	keyboard_led_stats:
 1592 0000 00        		.zero	1
 1593               	.global	keyboard_protocol
 1594               		.section	.data.keyboard_protocol,"aw"
 1597               	keyboard_protocol:
 1598 0000 01        		.byte	1
 1599               	.global	keyboard_idle
 1600               		.section	.bss.keyboard_idle,"aw",@nobits
 1603               	keyboard_idle:
 1604 0000 00        		.zero	1
 1605               		.text
 1606               	.Letext0:
 1607               		.file 8 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/stdint.h"
 1608               		.file 9 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/lib/avr-gcc/8/gcc/avr/8.5.0/include/stddef.h"
 1609               		.file 10 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../Device.h"
 1610               		.file 11 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 1611               		.file 12 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 1612               		.file 13 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 1613               		.file 14 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 1614               		.file 15 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/stdio.h"
 1615               		.file 16 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDClassCommon
 1616               		.file 17 "./tmk_core/common/report.h"
 1617               		.file 18 "./tmk_core/common/host_driver.h"
 1618               		.file 19 "./tmk_core/common/host.h"
 1619               		.file 20 "./tmk_core/common/action.h"
 1620               		.file 21 "./tmk_core/common/debug.h"
 1621               		.file 22 "./tmk_core/protocol/lufa/lufa.h"
 1622               		.file 23 "./quantum/keycode_config.h"
 1623               		.file 24 "./quantum/keymap.h"
 1624               		.file 25 "./tmk_core/common/action_layer.h"
 1625               		.file 26 "./tmk_core/common/timer.h"
 1626               		.file 27 "./tmk_core/common/action_util.h"
 1627               		.file 28 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/stdlib.h"
 1628               		.file 29 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h"
 1629               		.file 30 "./tmk_core/common/keyboard.h"
 1630               		.file 31 "./tmk_core/common/suspend.h"
 1631               		.file 32 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../AVR8/EndpointStream_AVR8
DEFINED SYMBOLS
                            *ABS*:00000000 lufa.c
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:2      *ABS*:0000003e __SP_H__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:3      *ABS*:0000003d __SP_L__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:4      *ABS*:0000003f __SREG__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6      *ABS*:00000001 __zero_reg__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:12     .text.keyboard_leds:00000000 keyboard_leds
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:15     .text.keyboard_leds:00000000 .Loc.0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:16     .text.keyboard_leds:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:21     .text.keyboard_leds:00000000 .Loc.1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:22     .text.keyboard_leds:00000000 .Loc.2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1591   .bss.keyboard_led_stats:00000000 keyboard_led_stats
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:26     .text.keyboard_leds:00000006 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:31     .text.send_consumer:00000000 send_consumer
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:34     .text.send_consumer:00000000 .Loc.3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:35     .text.send_consumer:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:36     .text.send_consumer:00000000 .Loc.4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:45     .text.send_consumer:00000006 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:58     .text.send_consumer:0000000e .Loc.5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:60     .text.send_consumer:0000000e .Loc.6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:63     .text.send_consumer:0000000e .Loc.7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:65     .text.send_consumer:0000000e .Loc.8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:66     .text.send_consumer:0000000e .Loc.9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:69     .text.send_consumer:00000012 .Loc.10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:72     .text.send_consumer:00000012 .Loc.11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:73     .text.send_consumer:00000012 .Loc.12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:76     .text.send_consumer:00000016 .Loc.13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:77     .text.send_consumer:00000016 .Loc.14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:82     .text.send_consumer:0000001e .Loc.15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:87     .text.send_consumer:0000001e .Loc.16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:89     .text.send_consumer:0000001e .Loc.17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:90     .text.send_consumer:0000001e .Loc.18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:92     .text.send_consumer:00000022 .Loc.19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:95     .text.send_consumer:00000022 .Loc.20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:99     .text.send_consumer:00000022 .Loc.21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:103    .text.send_consumer:00000024 .Loc.22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:108    .text.send_consumer:00000024 .Loc.23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:110    .text.send_consumer:00000024 .Loc.24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:111    .text.send_consumer:00000024 .Loc.25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:115    .text.send_consumer:0000002a .Loc.26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:118    .text.send_consumer:0000002a .Loc.27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:121    .text.send_consumer:0000002e .Loc.28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:126    .text.send_consumer:0000002e .Loc.29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:128    .text.send_consumer:0000002e .Loc.30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:129    .text.send_consumer:0000002e .Loc.31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:130    .text.send_consumer:0000002e .Loc.32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:131    .text.send_consumer:0000002e .Loc.33
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:132    .text.send_consumer:0000002e .Loc.34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:133    .text.send_consumer:0000002e .Loc.35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:137    .text.send_consumer:0000002e .Loc.36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:140    .text.send_consumer:0000002e .Loc.37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:145    .text.send_consumer:00000036 .Loc.38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:148    .text.send_consumer:00000036 .Loc.39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:150    .text.send_consumer:00000036 .Loc.40
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:155    .text.send_consumer:0000003a .Loc.41
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:158    .text.send_consumer:0000003a .Loc.42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:160    .text.send_consumer:0000003a .Loc.43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:161    .text.send_consumer:0000003a .Loc.44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:165    .text.send_consumer:0000003e .Loc.45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:168    .text.send_consumer:00000042 .Loc.46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:177    .text.send_consumer:00000052 .Loc.47
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:180    .text.send_consumer:00000052 .Loc.48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:182    .text.send_consumer:00000052 .Loc.49
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:183    .text.send_consumer:00000052 .Loc.50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:190    .text.send_consumer:0000005c .Loc.51
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:193    .text.send_consumer:0000005c .Loc.52
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:200    .text.send_consumer:00000068 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:205    .text.send_system:00000000 send_system
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:208    .text.send_system:00000000 .Loc.53
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:209    .text.send_system:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:210    .text.send_system:00000000 .Loc.54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:219    .text.send_system:00000006 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:231    .text.send_system:0000000c .Loc.55
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:233    .text.send_system:0000000c .Loc.56
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:234    .text.send_system:0000000c .Loc.57
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:236    .text.send_system:00000010 .Loc.58
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:239    .text.send_system:00000014 .Loc.59
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:240    .text.send_system:00000014 .Loc.60
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:243    .text.send_system:00000018 .Loc.61
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:247    .text.send_system:0000001c .Loc.62
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:250    .text.send_system:00000020 .Loc.63
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:254    .text.send_system:00000020 .Loc.64
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:256    .text.send_system:00000020 .Loc.65
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:257    .text.send_system:00000020 .Loc.66
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:260    .text.send_system:00000022 .Loc.67
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:263    .text.send_system:00000026 .Loc.68
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:266    .text.send_system:00000026 .Loc.69
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:269    .text.send_system:00000026 .Loc.70
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:273    .text.send_system:00000028 .Loc.71
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:278    .text.send_system:00000028 .Loc.72
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:280    .text.send_system:00000028 .Loc.73
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:281    .text.send_system:00000028 .Loc.74
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:285    .text.send_system:0000002e .Loc.75
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:288    .text.send_system:0000002e .Loc.76
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:291    .text.send_system:00000032 .Loc.77
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:295    .text.send_system:00000032 .Loc.78
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:297    .text.send_system:00000032 .Loc.79
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:298    .text.send_system:00000032 .Loc.80
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:299    .text.send_system:00000032 .Loc.81
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:300    .text.send_system:00000032 .Loc.82
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:301    .text.send_system:00000032 .Loc.83
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:302    .text.send_system:00000032 .Loc.84
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:305    .text.send_system:00000032 .Loc.85
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:308    .text.send_system:00000032 .Loc.86
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:313    .text.send_system:0000003a .Loc.87
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:316    .text.send_system:0000003a .Loc.88
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:318    .text.send_system:0000003a .Loc.89
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:323    .text.send_system:0000003e .Loc.90
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:326    .text.send_system:0000003e .Loc.91
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:328    .text.send_system:0000003e .Loc.92
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:329    .text.send_system:0000003e .Loc.93
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:333    .text.send_system:00000042 .Loc.94
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:336    .text.send_system:00000046 .Loc.95
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:345    .text.send_system:00000056 .Loc.96
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:348    .text.send_system:00000056 .Loc.97
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:350    .text.send_system:00000056 .Loc.98
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:351    .text.send_system:00000056 .Loc.99
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:358    .text.send_system:00000060 .Loc.100
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:361    .text.send_system:00000060 .Loc.101
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:368    .text.send_system:0000006c L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:373    .text.send_mouse:00000000 send_mouse
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:376    .text.send_mouse:00000000 .Loc.102
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:377    .text.send_mouse:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:382    .text.send_mouse:00000000 .Loc.103
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:384    .text.send_mouse:00000002 .Loc.104
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:386    .text.send_mouse:00000002 .Loc.105
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:389    .text.send_mouse:00000002 .Loc.106
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:391    .text.send_mouse:00000002 .Loc.107
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:392    .text.send_mouse:00000002 .Loc.108
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:395    .text.send_mouse:00000006 .Loc.109
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:398    .text.send_mouse:00000006 .Loc.110
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:399    .text.send_mouse:00000006 .Loc.111
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:402    .text.send_mouse:0000000a .Loc.112
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:406    .text.send_mouse:0000000a .Loc.113
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:408    .text.send_mouse:0000000a .Loc.114
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:409    .text.send_mouse:0000000a .Loc.115
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:412    .text.send_mouse:0000000c .Loc.116
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:414    .text.send_mouse:00000010 .Loc.117
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:417    .text.send_mouse:00000010 .Loc.118
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:421    .text.send_mouse:00000010 .Loc.119
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:425    .text.send_mouse:00000012 .Loc.120
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:430    .text.send_mouse:00000012 .Loc.121
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:432    .text.send_mouse:00000012 .Loc.122
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:433    .text.send_mouse:00000012 .Loc.123
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:437    .text.send_mouse:00000018 .Loc.124
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:440    .text.send_mouse:00000018 .Loc.125
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:443    .text.send_mouse:0000001c .Loc.126
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:447    .text.send_mouse:0000001c .Loc.127
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:449    .text.send_mouse:0000001c .Loc.128
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:450    .text.send_mouse:0000001c .Loc.129
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:451    .text.send_mouse:0000001c .Loc.130
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:452    .text.send_mouse:0000001c .Loc.131
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:453    .text.send_mouse:0000001c .Loc.132
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:454    .text.send_mouse:0000001c .Loc.133
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:457    .text.send_mouse:0000001c .Loc.134
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:460    .text.send_mouse:0000001c .Loc.135
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:465    .text.send_mouse:00000024 .Loc.136
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:468    .text.send_mouse:00000024 .Loc.137
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:470    .text.send_mouse:00000024 .Loc.138
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:475    .text.send_mouse:00000028 .Loc.139
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:478    .text.send_mouse:00000028 .Loc.140
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:480    .text.send_mouse:00000028 .Loc.141
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:481    .text.send_mouse:00000028 .Loc.142
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:485    .text.send_mouse:0000002c .Loc.143
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:488    .text.send_mouse:00000030 .Loc.144
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:496    .text.send_mouse:0000003e .Loc.145
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:499    .text.send_mouse:0000003e .Loc.146
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:501    .text.send_mouse:0000003e .Loc.147
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:502    .text.send_mouse:0000003e .Loc.148
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:509    .text.send_mouse:00000048 .Loc.149
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:512    .text.send_mouse:00000048 .Loc.150
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:514    .text.send_mouse:0000004a L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:519    .text.send_keyboard:00000000 send_keyboard
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:522    .text.send_keyboard:00000000 .Loc.151
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:523    .text.send_keyboard:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:524    .text.send_keyboard:00000000 .Loc.152
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:538    .text.send_keyboard:00000006 .Loc.153
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:540    .text.send_keyboard:00000006 .Loc.154
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:543    .text.send_keyboard:00000006 .Loc.155
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:545    .text.send_keyboard:00000006 .Loc.156
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:546    .text.send_keyboard:00000006 .Loc.157
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:549    .text.send_keyboard:0000000a .Loc.158
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:552    .text.send_keyboard:0000000a .Loc.159
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:553    .text.send_keyboard:0000000a .Loc.160
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:556    .text.send_keyboard:0000000e .Loc.161
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:557    .text.send_keyboard:0000000e .Loc.162
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1597   .data.keyboard_protocol:00000000 keyboard_protocol
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:561    .text.send_keyboard:00000016 .Loc.163
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:565    .text.send_keyboard:0000001e .Loc.164
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:569    .text.send_keyboard:0000001e .Loc.165
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:571    .text.send_keyboard:0000001e .Loc.166
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:572    .text.send_keyboard:0000001e .Loc.167
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:574    .text.send_keyboard:00000022 .Loc.168
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:577    .text.send_keyboard:00000022 .Loc.169
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:581    .text.send_keyboard:00000022 .Loc.170
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:585    .text.send_keyboard:00000024 .Loc.171
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:590    .text.send_keyboard:00000024 .Loc.172
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:592    .text.send_keyboard:00000024 .Loc.173
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:593    .text.send_keyboard:00000024 .Loc.174
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:597    .text.send_keyboard:0000002a .Loc.175
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:600    .text.send_keyboard:0000002a .Loc.176
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:603    .text.send_keyboard:0000002e .Loc.177
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:607    .text.send_keyboard:0000002e .Loc.178
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:609    .text.send_keyboard:0000002e .Loc.179
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:610    .text.send_keyboard:0000002e .Loc.180
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:611    .text.send_keyboard:0000002e .Loc.181
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:612    .text.send_keyboard:0000002e .Loc.182
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:613    .text.send_keyboard:0000002e .Loc.183
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:614    .text.send_keyboard:0000002e .Loc.184
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:617    .text.send_keyboard:0000002e .Loc.185
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:620    .text.send_keyboard:0000002e .Loc.186
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:625    .text.send_keyboard:00000036 .Loc.187
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:628    .text.send_keyboard:00000036 .Loc.188
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:630    .text.send_keyboard:00000036 .Loc.189
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:635    .text.send_keyboard:0000003a .Loc.190
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:638    .text.send_keyboard:0000003a .Loc.191
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:640    .text.send_keyboard:0000003a .Loc.192
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:641    .text.send_keyboard:0000003a .Loc.193
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:645    .text.send_keyboard:0000003e .Loc.194
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:650    .text.send_keyboard:00000046 .Loc.195
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:656    .text.send_keyboard:0000004a .Loc.196
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:660    .text.send_keyboard:0000004e .Loc.197
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:664    .text.send_keyboard:00000050 .Loc.198
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:667    .text.send_keyboard:00000050 .Loc.199
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:669    .text.send_keyboard:00000050 .Loc.200
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:670    .text.send_keyboard:00000050 .Loc.201
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:673    .text.send_keyboard:00000052 .Loc.202
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:675    .text.send_keyboard:00000056 .Loc.203
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:678    .text.send_keyboard:00000056 .Loc.204
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:682    .text.send_keyboard:00000056 .Loc.205
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:686    .text.send_keyboard:00000058 .Loc.206
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:691    .text.send_keyboard:00000058 .Loc.207
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:693    .text.send_keyboard:00000058 .Loc.208
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:694    .text.send_keyboard:00000058 .Loc.209
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:698    .text.send_keyboard:0000005e .Loc.210
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:701    .text.send_keyboard:0000005e .Loc.211
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:704    .text.send_keyboard:00000062 .Loc.212
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:708    .text.send_keyboard:00000062 .Loc.213
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:710    .text.send_keyboard:00000062 .Loc.214
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:711    .text.send_keyboard:00000062 .Loc.215
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:712    .text.send_keyboard:00000062 .Loc.216
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:713    .text.send_keyboard:00000062 .Loc.217
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:714    .text.send_keyboard:00000062 .Loc.218
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:715    .text.send_keyboard:00000062 .Loc.219
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:718    .text.send_keyboard:00000062 .Loc.220
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:721    .text.send_keyboard:00000062 .Loc.221
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:726    .text.send_keyboard:0000006a .Loc.222
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:729    .text.send_keyboard:0000006a .Loc.223
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:731    .text.send_keyboard:0000006a .Loc.224
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:736    .text.send_keyboard:0000006e .Loc.225
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:739    .text.send_keyboard:0000006e .Loc.226
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:741    .text.send_keyboard:0000006e .Loc.227
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:742    .text.send_keyboard:0000006e .Loc.228
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:746    .text.send_keyboard:00000072 .Loc.229
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:749    .text.send_keyboard:00000076 .Loc.230
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:756    .text.send_keyboard:0000007e .Loc.231
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:760    .text.send_keyboard:00000084 .Loc.232
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:763    .text.send_keyboard:00000084 .Loc.233
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:765    .text.send_keyboard:00000084 .Loc.234
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:766    .text.send_keyboard:00000084 .Loc.235
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:772    .text.send_keyboard:0000008e .Loc.236
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:773    .text.send_keyboard:0000008e .Loc.237
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1586   .bss.keyboard_report_sent:00000000 keyboard_report_sent
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:784    .text.send_keyboard:000000a0 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:790    .text.EVENT_USB_Device_Connect:00000000 EVENT_USB_Device_Connect
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:792    .text.EVENT_USB_Device_Connect:00000000 .Loc.238
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:793    .text.EVENT_USB_Device_Connect:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:798    .text.EVENT_USB_Device_Connect:00000000 .Loc.239
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:799    .text.EVENT_USB_Device_Connect:00000000 .Loc.240
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:800    .text.EVENT_USB_Device_Connect:00000000 .Loc.241
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:802    .text.EVENT_USB_Device_Connect:00000004 .Loc.242
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:805    .text.EVENT_USB_Device_Connect:00000008 .Loc.243
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:808    .text.EVENT_USB_Device_Connect:0000000c .Loc.244
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:811    .text.EVENT_USB_Device_Connect:00000010 .Loc.245
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:815    .text.EVENT_USB_Device_Connect:00000010 .Loc.246
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:817    .text.EVENT_USB_Device_Connect:00000010 .Loc.247
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:822    .text.EVENT_USB_Device_Connect:00000010 .Loc.248
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:824    .text.EVENT_USB_Device_Connect:00000010 .Loc.249
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:825    .text.EVENT_USB_Device_Connect:00000010 .Loc.250
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:826    .text.EVENT_USB_Device_Connect:00000010 .Loc.251
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:830    .text.EVENT_USB_Device_Connect:0000001a .Loc.252
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:834    .text.EVENT_USB_Device_Connect:0000001a .Loc.253
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:838    .text.EVENT_USB_Device_Connect:0000001a .Loc.254
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:840    .text.EVENT_USB_Device_Connect:0000001c L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:846    .text.EVENT_USB_Device_Disconnect:00000000 EVENT_USB_Device_Disconnect
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:848    .text.EVENT_USB_Device_Disconnect:00000000 .Loc.255
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:849    .text.EVENT_USB_Device_Disconnect:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:854    .text.EVENT_USB_Device_Disconnect:00000000 .Loc.256
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:855    .text.EVENT_USB_Device_Disconnect:00000000 .Loc.257
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:856    .text.EVENT_USB_Device_Disconnect:00000000 .Loc.258
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:859    .text.EVENT_USB_Device_Disconnect:00000004 .Loc.259
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:861    .text.EVENT_USB_Device_Disconnect:00000006 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:867    .text.EVENT_USB_Device_Reset:00000000 EVENT_USB_Device_Reset
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:869    .text.EVENT_USB_Device_Reset:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:876    .text.EVENT_USB_Device_Reset:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:882    .text.EVENT_USB_Device_Suspend:00000000 EVENT_USB_Device_Suspend
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:884    .text.EVENT_USB_Device_Suspend:00000000 .Loc.260
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:885    .text.EVENT_USB_Device_Suspend:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:890    .text.EVENT_USB_Device_Suspend:00000000 .Loc.261
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:892    .text.EVENT_USB_Device_Suspend:00000000 .Loc.262
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:894    .text.EVENT_USB_Device_Suspend:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:900    .text.EVENT_USB_Device_WakeUp:00000000 EVENT_USB_Device_WakeUp
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:902    .text.EVENT_USB_Device_WakeUp:00000000 .Loc.263
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:903    .text.EVENT_USB_Device_WakeUp:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:908    .text.EVENT_USB_Device_WakeUp:00000000 .Loc.264
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:909    .text.EVENT_USB_Device_WakeUp:00000000 .Loc.265
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:912    .text.EVENT_USB_Device_WakeUp:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:918    .text.EVENT_USB_Device_ConfigurationChanged:00000000 EVENT_USB_Device_ConfigurationChanged
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:920    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.266
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:921    .text.EVENT_USB_Device_ConfigurationChanged:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:926    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.267
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:928    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.268
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:931    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.269
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:933    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.270
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:934    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.271
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:935    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.272
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:936    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.273
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:939    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.274
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:940    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.275
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:941    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.276
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:942    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.277
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:943    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.278
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:946    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .Loc.279
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:952    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .Loc.280
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:955    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .Loc.281
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:958    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .Loc.282
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:960    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .Loc.283
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:961    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .Loc.284
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:962    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .Loc.285
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:963    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .Loc.286
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:966    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .Loc.287
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:967    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .Loc.288
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:968    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .Loc.289
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:969    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .Loc.290
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:970    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .Loc.291
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:973    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .Loc.292
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:979    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .Loc.293
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:982    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .Loc.294
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:985    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .Loc.295
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:987    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .Loc.296
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:988    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .Loc.297
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:989    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .Loc.298
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:990    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .Loc.299
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:993    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .Loc.300
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:994    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .Loc.301
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:995    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .Loc.302
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:996    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .Loc.303
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:997    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .Loc.304
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1000   .text.EVENT_USB_Device_ConfigurationChanged:00000014 .Loc.305
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1006   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.306
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1009   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.307
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1012   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.308
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1014   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.309
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1015   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.310
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1016   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.311
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1019   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.312
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1020   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.313
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1021   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.314
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1022   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.315
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1023   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.316
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1024   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.317
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1025   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.318
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1026   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.319
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1029   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .Loc.320
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1037   .text.EVENT_USB_Device_ConfigurationChanged:00000028 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1043   .text.EVENT_USB_Device_ControlRequest:00000000 EVENT_USB_Device_ControlRequest
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1045   .text.EVENT_USB_Device_ControlRequest:00000000 .Loc.321
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1046   .text.EVENT_USB_Device_ControlRequest:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1051   .text.EVENT_USB_Device_ControlRequest:00000000 .Loc.322
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1053   .text.EVENT_USB_Device_ControlRequest:00000000 .Loc.323
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1054   .text.EVENT_USB_Device_ControlRequest:00000000 .Loc.324
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1055   .text.EVENT_USB_Device_ControlRequest:00000000 .Loc.325
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1057   .text.EVENT_USB_Device_ControlRequest:00000004 .Loc.326
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1059   .text.EVENT_USB_Device_ControlRequest:00000008 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1065   .text.EVENT_USB_Device_ControlRequest:00000014 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1070   .text.EVENT_USB_Device_ControlRequest:0000001c L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1073   .text.EVENT_USB_Device_ControlRequest:00000022 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1076   .text.EVENT_USB_Device_ControlRequest:00000028 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1078   .text.EVENT_USB_Device_ControlRequest:0000002a .Loc.327
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1079   .text.EVENT_USB_Device_ControlRequest:0000002a .Loc.328
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1082   .text.EVENT_USB_Device_ControlRequest:00000032 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1084   .text.EVENT_USB_Device_ControlRequest:00000034 .Loc.329
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1085   .text.EVENT_USB_Device_ControlRequest:00000034 .Loc.330
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1093   .text.EVENT_USB_Device_ControlRequest:00000044 .Loc.331
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1096   .text.EVENT_USB_Device_ControlRequest:00000044 .Loc.332
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1098   .text.EVENT_USB_Device_ControlRequest:00000044 .Loc.333
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1099   .text.EVENT_USB_Device_ControlRequest:00000044 .Loc.334
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1106   .text.EVENT_USB_Device_ControlRequest:0000004e .Loc.335
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1109   .text.EVENT_USB_Device_ControlRequest:0000004e .Loc.336
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1111   .text.EVENT_USB_Device_ControlRequest:0000004e .Loc.337
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1112   .text.EVENT_USB_Device_ControlRequest:0000004e .Loc.338
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1116   .text.EVENT_USB_Device_ControlRequest:00000052 .Loc.339
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1119   .text.EVENT_USB_Device_ControlRequest:00000056 .Loc.340
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1122   .text.EVENT_USB_Device_ControlRequest:00000056 .Loc.341
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1124   .text.EVENT_USB_Device_ControlRequest:00000056 .Loc.342
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1125   .text.EVENT_USB_Device_ControlRequest:00000056 .Loc.343
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1129   .text.EVENT_USB_Device_ControlRequest:0000005a .Loc.344
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1131   .text.EVENT_USB_Device_ControlRequest:0000005e .Loc.345
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1134   .text.EVENT_USB_Device_ControlRequest:0000005e .Loc.346
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1136   .text.EVENT_USB_Device_ControlRequest:0000005e .Loc.347
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1137   .text.EVENT_USB_Device_ControlRequest:0000005e .Loc.348
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1145   .text.EVENT_USB_Device_ControlRequest:00000064 .Loc.349
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1149   .text.EVENT_USB_Device_ControlRequest:00000068 .Loc.350
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1153   .text.EVENT_USB_Device_ControlRequest:0000006c .Loc.351
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1154   .text.EVENT_USB_Device_ControlRequest:0000006c .Loc.352
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1158   .text.EVENT_USB_Device_ControlRequest:00000074 .Loc.353
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1161   .text.EVENT_USB_Device_ControlRequest:00000074 .Loc.354
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1163   .text.EVENT_USB_Device_ControlRequest:00000074 .Loc.355
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1164   .text.EVENT_USB_Device_ControlRequest:00000074 .Loc.356
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1170   .text.EVENT_USB_Device_ControlRequest:0000007e .Loc.357
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1175   .text.EVENT_USB_Device_ControlRequest:0000008a .Loc.358
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1177   .text.EVENT_USB_Device_ControlRequest:0000008c .Loc.359
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1182   .text.EVENT_USB_Device_ControlRequest:00000090 .Loc.360
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1186   .text.EVENT_USB_Device_ControlRequest:00000096 .Loc.361
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1189   .text.EVENT_USB_Device_ControlRequest:00000096 .Loc.362
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1191   .text.EVENT_USB_Device_ControlRequest:00000096 .Loc.363
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1192   .text.EVENT_USB_Device_ControlRequest:00000096 .Loc.364
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1199   .text.EVENT_USB_Device_ControlRequest:000000a2 .Loc.365
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1202   .text.EVENT_USB_Device_ControlRequest:000000a2 .Loc.366
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1204   .text.EVENT_USB_Device_ControlRequest:000000a4 .Loc.367
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1209   .text.EVENT_USB_Device_ControlRequest:000000aa .Loc.368
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1210   .text.EVENT_USB_Device_ControlRequest:000000aa .Loc.369
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1212   .text.EVENT_USB_Device_ControlRequest:000000ae .Loc.370
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1217   .text.EVENT_USB_Device_ControlRequest:000000b2 .Loc.371
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1220   .text.EVENT_USB_Device_ControlRequest:000000b4 .Loc.372
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1221   .text.EVENT_USB_Device_ControlRequest:000000b4 .Loc.373
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1225   .text.EVENT_USB_Device_ControlRequest:000000bc .Loc.374
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1226   .text.EVENT_USB_Device_ControlRequest:000000bc .Loc.375
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1231   .text.EVENT_USB_Device_ControlRequest:000000c8 .Loc.376
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1234   .text.EVENT_USB_Device_ControlRequest:000000c8 .Loc.377
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1236   .text.EVENT_USB_Device_ControlRequest:000000c8 .Loc.378
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1237   .text.EVENT_USB_Device_ControlRequest:000000c8 .Loc.379
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1244   .text.EVENT_USB_Device_ControlRequest:000000d2 .Loc.380
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1245   .text.EVENT_USB_Device_ControlRequest:000000d2 .Loc.381
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1248   .text.EVENT_USB_Device_ControlRequest:000000d2 .Loc.382
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1250   .text.EVENT_USB_Device_ControlRequest:000000d2 .Loc.383
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1251   .text.EVENT_USB_Device_ControlRequest:000000d2 .Loc.384
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1255   .text.EVENT_USB_Device_ControlRequest:000000d6 .Loc.385
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1258   .text.EVENT_USB_Device_ControlRequest:000000da .Loc.386
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1263   .text.EVENT_USB_Device_ControlRequest:000000de .Loc.387
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1265   .text.EVENT_USB_Device_ControlRequest:000000de .Loc.388
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1267   .text.EVENT_USB_Device_ControlRequest:000000de .Loc.389
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1272   .text.EVENT_USB_Device_ControlRequest:000000de .Loc.390
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1274   .text.EVENT_USB_Device_ControlRequest:000000de .Loc.391
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1275   .text.EVENT_USB_Device_ControlRequest:000000de .Loc.392
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1278   .text.EVENT_USB_Device_ControlRequest:000000e2 .Loc.393
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1281   .text.EVENT_USB_Device_ControlRequest:000000e2 .Loc.394
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1284   .text.EVENT_USB_Device_ControlRequest:000000e2 .Loc.395
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1286   .text.EVENT_USB_Device_ControlRequest:000000e2 .Loc.396
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1287   .text.EVENT_USB_Device_ControlRequest:000000e2 .Loc.397
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1294   .text.EVENT_USB_Device_ControlRequest:000000ea .Loc.398
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1295   .text.EVENT_USB_Device_ControlRequest:000000ea .Loc.399
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1299   .text.EVENT_USB_Device_ControlRequest:000000f2 .Loc.400
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1300   .text.EVENT_USB_Device_ControlRequest:000000f2 .Loc.401
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1305   .text.EVENT_USB_Device_ControlRequest:000000fe .Loc.402
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1308   .text.EVENT_USB_Device_ControlRequest:000000fe .Loc.403
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1310   .text.EVENT_USB_Device_ControlRequest:000000fe .Loc.404
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1311   .text.EVENT_USB_Device_ControlRequest:000000fe .Loc.405
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1317   .text.EVENT_USB_Device_ControlRequest:00000108 .Loc.406
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1320   .text.EVENT_USB_Device_ControlRequest:0000010c .Loc.407
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1321   .text.EVENT_USB_Device_ControlRequest:0000010c .Loc.408
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1324   .text.EVENT_USB_Device_ControlRequest:00000114 .Loc.409
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1328   .text.EVENT_USB_Device_ControlRequest:00000118 .Loc.410
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1329   .text.EVENT_USB_Device_ControlRequest:00000118 .Loc.411
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1333   .text.EVENT_USB_Device_ControlRequest:00000120 .Loc.412
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1336   .text.EVENT_USB_Device_ControlRequest:00000120 .Loc.413
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1338   .text.EVENT_USB_Device_ControlRequest:00000120 .Loc.414
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1339   .text.EVENT_USB_Device_ControlRequest:00000120 .Loc.415
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1345   .text.EVENT_USB_Device_ControlRequest:0000012a .Loc.416
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1348   .text.EVENT_USB_Device_ControlRequest:0000012e .Loc.417
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1349   .text.EVENT_USB_Device_ControlRequest:0000012e .Loc.418
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1351   .text.EVENT_USB_Device_ControlRequest:00000132 .Loc.419
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1603   .bss.keyboard_idle:00000000 keyboard_idle
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1355   .text.EVENT_USB_Device_ControlRequest:00000138 .Loc.420
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1356   .text.EVENT_USB_Device_ControlRequest:00000138 .Loc.421
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1359   .text.EVENT_USB_Device_ControlRequest:00000140 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1361   .text.EVENT_USB_Device_ControlRequest:00000142 .Loc.422
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1364   .text.EVENT_USB_Device_ControlRequest:00000142 .Loc.423
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1366   .text.EVENT_USB_Device_ControlRequest:00000142 .Loc.424
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1367   .text.EVENT_USB_Device_ControlRequest:00000142 .Loc.425
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1374   .text.EVENT_USB_Device_ControlRequest:0000014c .Loc.426
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1375   .text.EVENT_USB_Device_ControlRequest:0000014c .Loc.427
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1378   .text.EVENT_USB_Device_ControlRequest:0000014c .Loc.428
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1380   .text.EVENT_USB_Device_ControlRequest:0000014c .Loc.429
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1381   .text.EVENT_USB_Device_ControlRequest:0000014c .Loc.430
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1385   .text.EVENT_USB_Device_ControlRequest:00000150 .Loc.431
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1388   .text.EVENT_USB_Device_ControlRequest:00000154 .Loc.432
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1391   .text.EVENT_USB_Device_ControlRequest:0000015a L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1397   .text.sendchar:00000000 sendchar
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1400   .text.sendchar:00000000 .Loc.433
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1401   .text.sendchar:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1406   .text.sendchar:00000000 .Loc.434
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1407   .text.sendchar:00000000 .Loc.435
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1411   .text.sendchar:00000002 .Loc.436
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1413   .text.sendchar:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1419   .text.startup.main:00000000 main
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1421   .text.startup.main:00000000 .Loc.437
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1422   .text.startup.main:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1427   .text.startup.main:00000000 .Loc.438
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1430   .text.startup.main:00000000 .Loc.439
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1432   .text.startup.main:00000000 .Loc.440
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1433   .text.startup.main:00000000 .Loc.441
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1437   .text.startup.main:00000006 .Loc.442
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1441   .text.startup.main:00000006 .Loc.443
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1445   .text.startup.main:00000006 .Loc.444
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1450   .text.startup.main:00000006 .Loc.445
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1451   .text.startup.main:00000006 .Loc.446
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1467   .text.startup.main:0000001c .Loc.447
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1468   .text.startup.main:0000001c .Loc.448
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1471   .text.startup.main:00000022 .Loc.449
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1472   .text.startup.main:00000022 .Loc.450
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1476   .text.startup.main:00000026 .Loc.451
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1479   .text.startup.main:0000002a .Loc.452
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1482   .text.startup.main:0000002a .Loc.453
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1484   .text.startup.main:0000002a .Loc.454
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1487   .text.startup.main:0000002e .Loc.455
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1490   .text.startup.main:00000032 .Loc.456
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1493   .text.startup.main:00000032 .Loc.457
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1497   .text.startup.main:00000032 .Loc.458
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1503   .text.startup.main:00000032 .Loc.459
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1505   .text.startup.main:00000032 .Loc.460
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1506   .text.startup.main:00000032 .Loc.461
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1507   .text.startup.main:00000032 .Loc.462
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1511   .text.startup.main:0000003c .Loc.463
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1513   .text.startup.main:0000003c .Loc.464
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1517   .text.startup.main:0000003c .Loc.465
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1520   .text.startup.main:0000003c .Loc.466
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1525   .text.startup.main:0000003e .Loc.467
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1529   .text.startup.main:00000042 .Loc.468
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1532   .text.startup.main:00000046 .Loc.469
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1577   .data.lufa_driver:00000000 lufa_driver
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1538   .text.startup.main:0000004e .Loc.470
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1539   .text.startup.main:0000004e .Loc.471
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1541   .text.startup.main:00000052 .Loc.472
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1544   .text.startup.main:00000056 .Loc.473
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1547   .text.startup.main:0000005a .Loc.474
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1548   .text.startup.main:0000005a .Loc.475
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1551   .text.startup.main:0000005c .Loc.476
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1552   .text.startup.main:0000005c .Loc.477
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1555   .text.startup.main:00000060 .Loc.478
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1556   .text.startup.main:00000060 .Loc.479
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1560   .text.startup.main:00000068 .Loc.480
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1563   .text.startup.main:0000006c .Loc.481
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1566   .text.startup.main:00000070 .Loc.482
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1570   .text.startup.main:00000076 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:29     .text.keyboard_leds:00000006 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:203    .text.send_consumer:00000068 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:371    .text.send_system:0000006c L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:517    .text.send_mouse:0000004a L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:787    .text.send_keyboard:000000a0 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:843    .text.EVENT_USB_Device_Connect:0000001c L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:864    .text.EVENT_USB_Device_Disconnect:00000006 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:897    .text.EVENT_USB_Device_Suspend:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:915    .text.EVENT_USB_Device_WakeUp:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1040   .text.EVENT_USB_Device_ConfigurationChanged:00000028 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1394   .text.EVENT_USB_Device_ControlRequest:0000015a L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1416   .text.sendchar:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1574   .text.startup.main:00000076 L0
                     .debug_frame:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:188    .text.send_consumer:0000005c .L2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:154    .text.send_consumer:0000003a .L5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:142    .text.send_consumer:00000030 .L11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:102    .text.send_consumer:00000024 .L4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:356    .text.send_system:00000060 .L14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:322    .text.send_system:0000003e .L17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:310    .text.send_system:00000034 .L12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:272    .text.send_system:00000028 .L16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:507    .text.send_mouse:00000048 .L26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:474    .text.send_mouse:00000028 .L30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:462    .text.send_mouse:0000001e .L13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:424    .text.send_mouse:00000012 .L29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:654    .text.send_keyboard:0000004a .L39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:663    .text.send_keyboard:00000050 .L42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:634    .text.send_keyboard:0000003a .L44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:622    .text.send_keyboard:00000030 .L14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:584    .text.send_keyboard:00000024 .L43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:755    .text.send_keyboard:0000007e .L66
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:735    .text.send_keyboard:0000006e .L49
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:723    .text.send_keyboard:00000064 .L15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:685    .text.send_keyboard:00000058 .L48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:778    .text.send_keyboard:00000096 .L01
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:832    .text.EVENT_USB_Device_Connect:0000001a .L67
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1219   .text.EVENT_USB_Device_ControlRequest:000000b4 .L75
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1068   .text.EVENT_USB_Device_ControlRequest:00000018 .L76
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1152   .text.EVENT_USB_Device_ControlRequest:0000006c .L77
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1354   .text.EVENT_USB_Device_ControlRequest:00000138 .L78
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1327   .text.EVENT_USB_Device_ControlRequest:00000118 .L80
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1291   .text.EVENT_USB_Device_ControlRequest:000000ea .L81
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1215   .text.EVENT_USB_Device_ControlRequest:000000b2 .L74
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1092   .text.EVENT_USB_Device_ControlRequest:00000044 .L86
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1208   .text.EVENT_USB_Device_ControlRequest:000000aa .L88
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1198   .text.EVENT_USB_Device_ControlRequest:000000a2 .L91
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1180   .text.EVENT_USB_Device_ControlRequest:00000090 .L84
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1103   .text.EVENT_USB_Device_ControlRequest:0000004e .L87
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1241   .text.EVENT_USB_Device_ControlRequest:000000d2 .L89
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1140   .text.EVENT_USB_Device_ControlRequest:00000064 .L102
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1371   .text.EVENT_USB_Device_ControlRequest:0000014c .L90
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1266   .text.EVENT_USB_Device_ControlRequest:000000de .L103
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1550   .text.startup.main:0000005c .L110
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1537   .text.startup.main:0000004e .L106
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:4430   .debug_abbrev:00000000 .Ldebug_abbrev0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6730   .debug_ranges:00000000 .Ldebug_ranges0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6880   .debug_line:00000000 .Ldebug_line0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1420   .text.startup.main:00000000 .LFB137
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1571   .text.startup.main:00000076 .LFE137
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1429   .text.startup.main:00000000 .LBI312
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1439   .text.startup.main:00000006 .LBI314
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1449   .text.startup.main:00000006 .LBB315
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1465   .text.startup.main:0000001c .LBE315
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1481   .text.startup.main:0000002a .LBI319
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1492   .text.startup.main:00000032 .LBI321
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1502   .text.startup.main:00000032 .LBI322
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1501   .text.startup.main:00000032 .LBB322
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1515   .text.startup.main:0000003c .LBE322
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5641   .debug_loc:00000002 .LLST56
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5638   .debug_loc:00000000 .LVUS56
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1486   .text.startup.main:0000002e .LVL82
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1489   .text.startup.main:00000032 .LVL83
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1478   .text.startup.main:0000002a .LVL81
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1528   .text.startup.main:00000042 .LVL85
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1531   .text.startup.main:00000046 .LVL86
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1536   .text.startup.main:0000004e .LVL87
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1546   .text.startup.main:0000005a .LVL88
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1554   .text.startup.main:00000060 .LVL89
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1562   .text.startup.main:0000006c .LVL90
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1568   .text.startup.main:00000074 .LVL91
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1399   .text.sendchar:00000000 .LFB134
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1414   .text.sendchar:00000004 .LFE134
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5654   .debug_loc:0000001a .LLST55
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5649   .debug_loc:00000016 .LVUS55
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:33     .text.send_consumer:00000000 .LFB133
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:201    .text.send_consumer:00000068 .LFE133
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5668   .debug_loc:0000003b .LLST0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5707   .debug_loc:00000089 .LLST1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5700   .debug_loc:00000083 .LVUS1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5746   .debug_loc:000000c9 .LLST2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5735   .debug_loc:000000bf .LVUS2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5780   .debug_loc:00000112 .LLST3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5777   .debug_loc:00000110 .LVUS3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:62     .text.send_consumer:0000000e .LBI177
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:61     .text.send_consumer:0000000e .LBB177
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:71     .text.send_consumer:00000012 .LBE177
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:85     .text.send_consumer:0000001e .LBI179
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5797   .debug_loc:0000012e .LLST4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5794   .debug_loc:0000012c .LVUS4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:107    .text.send_consumer:00000024 .LBI183
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:106    .text.send_consumer:00000024 .LBB183
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:117    .text.send_consumer:0000002a .LBE183
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:124    .text.send_consumer:0000002e .LBI185
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5808   .debug_loc:00000144 .LLST5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5805   .debug_loc:00000142 .LVUS5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5820   .debug_loc:0000015e .LLST6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5817   .debug_loc:0000015c .LVUS6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5832   .debug_loc:00000178 .LLST7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5829   .debug_loc:00000176 .LVUS7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:157    .text.send_consumer:0000003a .LBI189
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:156    .text.send_consumer:0000003a .LBB189
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:164    .text.send_consumer:0000003e .LBE189
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:179    .text.send_consumer:00000052 .LBI191
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:178    .text.send_consumer:00000052 .LBB191
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:192    .text.send_consumer:0000005c .LBE191
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:176    .text.send_consumer:00000052 .LVL10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:207    .text.send_system:00000000 .LFB132
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:369    .text.send_system:0000006c .LFE132
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5841   .debug_loc:0000018e .LLST8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5882   .debug_loc:000001de .LLST9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5873   .debug_loc:000001d6 .LVUS9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5928   .debug_loc:0000022e .LLST10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5917   .debug_loc:00000224 .LVUS10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:253    .text.send_system:00000020 .LBI193
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5962   .debug_loc:00000277 .LLST11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5959   .debug_loc:00000275 .LVUS11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:277    .text.send_system:00000028 .LBI197
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:276    .text.send_system:00000028 .LBB197
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:287    .text.send_system:0000002e .LBE197
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:294    .text.send_system:00000032 .LBI199
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5973   .debug_loc:0000028d .LLST12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5970   .debug_loc:0000028b .LVUS12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5985   .debug_loc:000002a7 .LLST13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5982   .debug_loc:000002a5 .LVUS13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5997   .debug_loc:000002c1 .LLST14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:5994   .debug_loc:000002bf .LVUS14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:325    .text.send_system:0000003e .LBI203
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:324    .text.send_system:0000003e .LBB203
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:332    .text.send_system:00000042 .LBE203
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:347    .text.send_system:00000056 .LBI205
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:346    .text.send_system:00000056 .LBB205
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:360    .text.send_system:00000060 .LBE205
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:344    .text.send_system:00000056 .LVL23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:375    .text.send_mouse:00000000 .LFB131
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:515    .text.send_mouse:0000004a .LFE131
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6013   .debug_loc:000002dd .LLST15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6006   .debug_loc:000002d7 .LVUS15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6052   .debug_loc:0000031d .LLST16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6041   .debug_loc:00000313 .LVUS16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6086   .debug_loc:00000366 .LLST17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6083   .debug_loc:00000364 .LVUS17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:388    .text.send_mouse:00000002 .LBI207
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:387    .text.send_mouse:00000002 .LBB207
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:397    .text.send_mouse:00000006 .LBE207
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:405    .text.send_mouse:0000000a .LBI209
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6103   .debug_loc:00000382 .LLST18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6100   .debug_loc:00000380 .LVUS18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:429    .text.send_mouse:00000012 .LBI213
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:428    .text.send_mouse:00000012 .LBB213
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:439    .text.send_mouse:00000018 .LBE213
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:446    .text.send_mouse:0000001c .LBI215
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6114   .debug_loc:00000398 .LLST19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6111   .debug_loc:00000396 .LVUS19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6126   .debug_loc:000003b2 .LLST20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6123   .debug_loc:000003b0 .LVUS20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6138   .debug_loc:000003cc .LLST21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6135   .debug_loc:000003ca .LVUS21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:477    .text.send_mouse:00000028 .LBI219
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:476    .text.send_mouse:00000028 .LBB219
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:484    .text.send_mouse:0000002c .LBE219
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:498    .text.send_mouse:0000003e .LBI221
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:497    .text.send_mouse:0000003e .LBB221
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:511    .text.send_mouse:00000048 .LBE221
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:495    .text.send_mouse:0000003e .LVL36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:521    .text.send_keyboard:00000000 .LFB130
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:785    .text.send_keyboard:000000a0 .LFE130
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6147   .debug_loc:000003e2 .LLST22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6177   .debug_loc:00000419 .LLST23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6168   .debug_loc:00000411 .LVUS23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6235   .debug_loc:00000473 .LLST24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6214   .debug_loc:0000045f .LVUS24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6301   .debug_loc:000004ff .LLST25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6294   .debug_loc:000004f9 .LVUS25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:542    .text.send_keyboard:00000006 .LBI223
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:541    .text.send_keyboard:00000006 .LBB223
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:551    .text.send_keyboard:0000000a .LBE223
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:568    .text.send_keyboard:0000001e .LBI225
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6339   .debug_loc:0000053e .LLST26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6336   .debug_loc:0000053c .LVUS26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:589    .text.send_keyboard:00000024 .LBI229
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:588    .text.send_keyboard:00000024 .LBB229
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:599    .text.send_keyboard:0000002a .LBE229
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:606    .text.send_keyboard:0000002e .LBI231
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6350   .debug_loc:00000554 .LLST27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6347   .debug_loc:00000552 .LVUS27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6362   .debug_loc:0000056e .LLST28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6359   .debug_loc:0000056c .LVUS28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6374   .debug_loc:00000588 .LLST29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6371   .debug_loc:00000586 .LVUS29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:637    .text.send_keyboard:0000003a .LBI235
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:636    .text.send_keyboard:0000003a .LBB235
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:644    .text.send_keyboard:0000003e .LBE235
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:666    .text.send_keyboard:00000050 .LBI237
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6386   .debug_loc:0000059f .LLST30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6383   .debug_loc:0000059d .LVUS30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:690    .text.send_keyboard:00000058 .LBI241
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:689    .text.send_keyboard:00000058 .LBB241
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:700    .text.send_keyboard:0000005e .LBE241
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:707    .text.send_keyboard:00000062 .LBI243
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6397   .debug_loc:000005b5 .LLST31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6394   .debug_loc:000005b3 .LVUS31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6409   .debug_loc:000005cf .LLST32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6406   .debug_loc:000005cd .LVUS32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6421   .debug_loc:000005e9 .LLST33
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6418   .debug_loc:000005e7 .LVUS33
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:738    .text.send_keyboard:0000006e .LBI247
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:737    .text.send_keyboard:0000006e .LBB247
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:745    .text.send_keyboard:00000072 .LBE247
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:762    .text.send_keyboard:00000084 .LBI249
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:761    .text.send_keyboard:00000084 .LBB249
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:771    .text.send_keyboard:0000008e .LBE249
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:759    .text.send_keyboard:00000084 .LVL59
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:13     .text.keyboard_leds:00000000 .LFB128
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:27     .text.keyboard_leds:00000006 .LFE128
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1044   .text.EVENT_USB_Device_ControlRequest:00000000 .LFB127
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1392   .text.EVENT_USB_Device_ControlRequest:0000015a .LFE127
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6437   .debug_loc:00000605 .LLST51
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6430   .debug_loc:000005ff .LVUS51
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6466   .debug_loc:0000063b .LLST52
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6459   .debug_loc:00000635 .LVUS52
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1095   .text.EVENT_USB_Device_ControlRequest:00000044 .LBI271
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1094   .text.EVENT_USB_Device_ControlRequest:00000044 .LBB271
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1105   .text.EVENT_USB_Device_ControlRequest:0000004e .LBE271
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1108   .text.EVENT_USB_Device_ControlRequest:0000004e .LBI273
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1107   .text.EVENT_USB_Device_ControlRequest:0000004e .LBB273
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1115   .text.EVENT_USB_Device_ControlRequest:00000052 .LBE273
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1121   .text.EVENT_USB_Device_ControlRequest:00000056 .LBI275
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1120   .text.EVENT_USB_Device_ControlRequest:00000056 .LBB275
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1128   .text.EVENT_USB_Device_ControlRequest:0000005a .LBE275
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1133   .text.EVENT_USB_Device_ControlRequest:0000005e .LBI277
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1132   .text.EVENT_USB_Device_ControlRequest:0000005e .LBB277
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1142   .text.EVENT_USB_Device_ControlRequest:00000064 .LBE277
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1283   .text.EVENT_USB_Device_ControlRequest:000000e2 .LBI279
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1160   .text.EVENT_USB_Device_ControlRequest:00000074 .LBI282
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1159   .text.EVENT_USB_Device_ControlRequest:00000074 .LBB282
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1169   .text.EVENT_USB_Device_ControlRequest:0000007e .LBE282
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1188   .text.EVENT_USB_Device_ControlRequest:00000096 .LBI284
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1187   .text.EVENT_USB_Device_ControlRequest:00000096 .LBB284
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1201   .text.EVENT_USB_Device_ControlRequest:000000a2 .LBE284
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1233   .text.EVENT_USB_Device_ControlRequest:000000c8 .LBI286
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1232   .text.EVENT_USB_Device_ControlRequest:000000c8 .LBB286
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1243   .text.EVENT_USB_Device_ControlRequest:000000d2 .LBE286
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1247   .text.EVENT_USB_Device_ControlRequest:000000d2 .LBI288
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1246   .text.EVENT_USB_Device_ControlRequest:000000d2 .LBB288
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1254   .text.EVENT_USB_Device_ControlRequest:000000d6 .LBE288
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1262   .text.EVENT_USB_Device_ControlRequest:000000de .LBI290
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1261   .text.EVENT_USB_Device_ControlRequest:000000de .LBB290
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1269   .text.EVENT_USB_Device_ControlRequest:000000de .LBE290
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6486   .debug_loc:00000668 .LLST53
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6483   .debug_loc:00000666 .LVUS53
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1271   .text.EVENT_USB_Device_ControlRequest:000000de .LBI292
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1270   .text.EVENT_USB_Device_ControlRequest:000000de .LBB292
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1280   .text.EVENT_USB_Device_ControlRequest:000000e2 .LBE292
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6496   .debug_loc:0000067d .LLST54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6493   .debug_loc:0000067b .LVUS54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1307   .text.EVENT_USB_Device_ControlRequest:000000fe .LBI295
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1306   .text.EVENT_USB_Device_ControlRequest:000000fe .LBB295
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1316   .text.EVENT_USB_Device_ControlRequest:00000108 .LBE295
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1335   .text.EVENT_USB_Device_ControlRequest:00000120 .LBI297
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1334   .text.EVENT_USB_Device_ControlRequest:00000120 .LBB297
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1344   .text.EVENT_USB_Device_ControlRequest:0000012a .LBE297
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1363   .text.EVENT_USB_Device_ControlRequest:00000142 .LBI299
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1362   .text.EVENT_USB_Device_ControlRequest:00000142 .LBB299
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1373   .text.EVENT_USB_Device_ControlRequest:0000014c .LBE299
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1377   .text.EVENT_USB_Device_ControlRequest:0000014c .LBI301
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1376   .text.EVENT_USB_Device_ControlRequest:0000014c .LBB301
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1384   .text.EVENT_USB_Device_ControlRequest:00000150 .LBE301
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1151   .text.EVENT_USB_Device_ControlRequest:0000006c .LVL70
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1185   .text.EVENT_USB_Device_ControlRequest:00000096 .LVL72
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1319   .text.EVENT_USB_Device_ControlRequest:0000010c .LVL76
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1326   .text.EVENT_USB_Device_ControlRequest:00000118 .LVL77
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1347   .text.EVENT_USB_Device_ControlRequest:0000012e .LVL78
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:919    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .LFB126
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1038   .text.EVENT_USB_Device_ConfigurationChanged:00000028 .LFE126
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6506   .debug_loc:00000692 .LLST35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6503   .debug_loc:00000690 .LVUS35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:930    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .LBI255
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6517   .debug_loc:000006a8 .LLST36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6514   .debug_loc:000006a6 .LVUS36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6528   .debug_loc:000006be .LLST37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6525   .debug_loc:000006bc .LVUS37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6539   .debug_loc:000006d4 .LLST38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6536   .debug_loc:000006d2 .LVUS38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6550   .debug_loc:000006ea .LLST39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6547   .debug_loc:000006e8 .LVUS39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6562   .debug_loc:00000701 .LLST40
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6559   .debug_loc:000006ff .LVUS40
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:951    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .LVL65
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:957    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .LBI259
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6573   .debug_loc:00000717 .LLST41
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6570   .debug_loc:00000715 .LVUS41
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6584   .debug_loc:0000072d .LLST42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6581   .debug_loc:0000072b .LVUS42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6595   .debug_loc:00000743 .LLST43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6592   .debug_loc:00000741 .LVUS43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6606   .debug_loc:00000759 .LLST44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6603   .debug_loc:00000757 .LVUS44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6618   .debug_loc:00000770 .LLST45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6615   .debug_loc:0000076e .LVUS45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:978    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .LVL66
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:984    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .LBI263
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6629   .debug_loc:00000786 .LLST46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6626   .debug_loc:00000784 .LVUS46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6640   .debug_loc:0000079c .LLST47
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6637   .debug_loc:0000079a .LVUS47
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6651   .debug_loc:000007b2 .LLST48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6648   .debug_loc:000007b0 .LVUS48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6662   .debug_loc:000007c8 .LLST49
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6659   .debug_loc:000007c6 .LVUS49
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6674   .debug_loc:000007df .LLST50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6671   .debug_loc:000007dd .LVUS50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1005   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .LVL67
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1011   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .LBI267
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1034   .text.EVENT_USB_Device_ConfigurationChanged:00000028 .LVL68
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:901    .text.EVENT_USB_Device_WakeUp:00000000 .LFB125
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:913    .text.EVENT_USB_Device_WakeUp:00000004 .LFE125
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:911    .text.EVENT_USB_Device_WakeUp:00000004 .LVL63
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:883    .text.EVENT_USB_Device_Suspend:00000000 .LFB124
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:895    .text.EVENT_USB_Device_Suspend:00000002 .LFE124
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:847    .text.EVENT_USB_Device_Disconnect:00000000 .LFB122
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:862    .text.EVENT_USB_Device_Disconnect:00000006 .LFE122
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:791    .text.EVENT_USB_Device_Connect:00000000 .LFB121
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:841    .text.EVENT_USB_Device_Connect:0000001c .LFE121
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:813    .text.EVENT_USB_Device_Connect:00000010 .LBI251
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:820    .text.EVENT_USB_Device_Connect:00000010 .LBI252
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:819    .text.EVENT_USB_Device_Connect:00000010 .LBB252
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:836    .text.EVENT_USB_Device_Connect:0000001a .LBE252
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6685   .debug_loc:000007f5 .LLST34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:6682   .debug_loc:000007f3 .LVUS34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:807    .text.EVENT_USB_Device_Connect:0000000c .LVL60
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:810    .text.EVENT_USB_Device_Connect:00000010 .LVL61
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1512   .text.startup.main:0000003c .LVL84
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1398   .text.sendchar:00000000 .LVL79
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1409   .text.sendchar:00000002 .LVL80
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:38     .text.send_consumer:00000002 .LCFI0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:42     .text.send_consumer:00000004 .LCFI1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:47     .text.send_consumer:00000008 .LCFI2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:51     .text.send_consumer:0000000c .LCFI3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:32     .text.send_consumer:00000000 .LVL0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:68     .text.send_consumer:00000012 .LVL2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:59     .text.send_consumer:0000000e .LVL1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:96     .text.send_consumer:00000022 .LVL4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:101    .text.send_consumer:00000024 .LVL5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:114    .text.send_consumer:0000002a .LVL6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:149    .text.send_consumer:00000036 .LVL8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:153    .text.send_consumer:0000003a .LVL9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:83     .text.send_consumer:0000001e .LVL3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:187    .text.send_consumer:0000005c .LVL11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:122    .text.send_consumer:0000002e .LVL7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:212    .text.send_system:00000002 .LCFI4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:216    .text.send_system:00000004 .LCFI5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:221    .text.send_system:00000008 .LCFI6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:225    .text.send_system:0000000c .LCFI7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:206    .text.send_system:00000000 .LVL12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:246    .text.send_system:0000001c .LVL14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:259    .text.send_system:00000022 .LVL16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:262    .text.send_system:00000026 .LVL17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:232    .text.send_system:0000000c .LVL13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:271    .text.send_system:00000028 .LVL18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:284    .text.send_system:0000002e .LVL19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:317    .text.send_system:0000003a .LVL21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:321    .text.send_system:0000003e .LVL22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:251    .text.send_system:00000020 .LVL15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:355    .text.send_system:00000060 .LVL24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:292    .text.send_system:00000032 .LVL20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:374    .text.send_mouse:00000000 .LVL25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:394    .text.send_mouse:00000006 .LVL27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:385    .text.send_mouse:00000002 .LVL26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:418    .text.send_mouse:00000010 .LVL30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:423    .text.send_mouse:00000012 .LVL31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:436    .text.send_mouse:00000018 .LVL32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:469    .text.send_mouse:00000024 .LVL34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:473    .text.send_mouse:00000028 .LVL35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:411    .text.send_mouse:0000000c .LVL29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:403    .text.send_mouse:0000000a .LVL28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:506    .text.send_mouse:00000048 .LVL37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:444    .text.send_mouse:0000001c .LVL33
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:526    .text.send_keyboard:00000002 .LCFI8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:530    .text.send_keyboard:00000004 .LCFI9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:520    .text.send_keyboard:00000000 .LVL38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:548    .text.send_keyboard:0000000a .LVL40
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:659    .text.send_keyboard:0000004e .LVL49
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:662    .text.send_keyboard:00000050 .LVL50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:539    .text.send_keyboard:00000006 .LVL39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:578    .text.send_keyboard:00000022 .LVL42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:583    .text.send_keyboard:00000024 .LVL43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:596    .text.send_keyboard:0000002a .LVL44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:629    .text.send_keyboard:00000036 .LVL46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:633    .text.send_keyboard:0000003a .LVL47
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:679    .text.send_keyboard:00000056 .LVL52
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:684    .text.send_keyboard:00000058 .LVL53
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:697    .text.send_keyboard:0000005e .LVL54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:730    .text.send_keyboard:0000006a .LVL56
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:734    .text.send_keyboard:0000006e .LVL57
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:653    .text.send_keyboard:0000004a .LVL48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:672    .text.send_keyboard:00000052 .LVL51
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:566    .text.send_keyboard:0000001e .LVL41
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:604    .text.send_keyboard:0000002e .LVL45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:754    .text.send_keyboard:0000007e .LVL58
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:705    .text.send_keyboard:00000062 .LVL55
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1052   .text.EVENT_USB_Device_ControlRequest:00000000 .LVL69
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1181   .text.EVENT_USB_Device_ControlRequest:00000090 .LVL71
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1197   .text.EVENT_USB_Device_ControlRequest:000000a2 .LVL73
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1260   .text.EVENT_USB_Device_ControlRequest:000000de .LVL74
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1277   .text.EVENT_USB_Device_ControlRequest:000000e2 .LVL75
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:927    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .LVL64
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:831    .text.EVENT_USB_Device_Connect:0000001a .LVL62
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1633   .debug_info:00000000 .Ldebug_info0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:84     .text.send_consumer:0000001e .LBB179
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:94     .text.send_consumer:00000022 .LBE179
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:97     .text.send_consumer:00000022 .LBB182
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:105    .text.send_consumer:00000024 .LBE182
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:123    .text.send_consumer:0000002e .LBB185
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:135    .text.send_consumer:0000002e .LBE185
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:138    .text.send_consumer:0000002e .LBB188
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:147    .text.send_consumer:00000036 .LBE188
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:252    .text.send_system:00000020 .LBB193
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:265    .text.send_system:00000026 .LBE193
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:267    .text.send_system:00000026 .LBB196
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:275    .text.send_system:00000028 .LBE196
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:293    .text.send_system:00000032 .LBB199
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:304    .text.send_system:00000032 .LBE199
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:306    .text.send_system:00000032 .LBB202
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:315    .text.send_system:0000003a .LBE202
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:404    .text.send_mouse:0000000a .LBB209
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:416    .text.send_mouse:00000010 .LBE209
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:419    .text.send_mouse:00000010 .LBB212
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:427    .text.send_mouse:00000012 .LBE212
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:445    .text.send_mouse:0000001c .LBB215
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:456    .text.send_mouse:0000001c .LBE215
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:458    .text.send_mouse:0000001c .LBB218
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:467    .text.send_mouse:00000024 .LBE218
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:567    .text.send_keyboard:0000001e .LBB225
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:576    .text.send_keyboard:00000022 .LBE225
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:579    .text.send_keyboard:00000022 .LBB228
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:587    .text.send_keyboard:00000024 .LBE228
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:605    .text.send_keyboard:0000002e .LBB231
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:616    .text.send_keyboard:0000002e .LBE231
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:618    .text.send_keyboard:0000002e .LBB234
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:627    .text.send_keyboard:00000036 .LBE234
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:665    .text.send_keyboard:00000050 .LBB237
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:677    .text.send_keyboard:00000056 .LBE237
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:680    .text.send_keyboard:00000056 .LBB240
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:688    .text.send_keyboard:00000058 .LBE240
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:706    .text.send_keyboard:00000062 .LBB243
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:717    .text.send_keyboard:00000062 .LBE243
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:719    .text.send_keyboard:00000062 .LBB246
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:728    .text.send_keyboard:0000006a .LBE246
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:812    .text.EVENT_USB_Device_Connect:00000010 .LBB251
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:816    .text.EVENT_USB_Device_Connect:00000010 .LBE251
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:818    .text.EVENT_USB_Device_Connect:00000010 .LBB254
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:837    .text.EVENT_USB_Device_Connect:0000001a .LBE254
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:929    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .LBB255
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:938    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .LBE255
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:944    .text.EVENT_USB_Device_ConfigurationChanged:00000000 .LBB258
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:954    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .LBE258
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:956    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .LBB259
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:965    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .LBE259
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:971    .text.EVENT_USB_Device_ConfigurationChanged:0000000a .LBB262
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:981    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .LBE262
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:983    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .LBB263
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:992    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .LBE263
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:998    .text.EVENT_USB_Device_ConfigurationChanged:00000014 .LBB266
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1008   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .LBE266
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1010   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .LBB267
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1018   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .LBE267
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1027   .text.EVENT_USB_Device_ConfigurationChanged:0000001e .LBB270
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1036   .text.EVENT_USB_Device_ConfigurationChanged:00000028 .LBE270
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1143   .text.EVENT_USB_Device_ControlRequest:00000064 .LBB279
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1148   .text.EVENT_USB_Device_ControlRequest:00000068 .LBE279
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1282   .text.EVENT_USB_Device_ControlRequest:000000e2 .LBB294
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1293   .text.EVENT_USB_Device_ControlRequest:000000ea .LBE294
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1428   .text.startup.main:00000000 .LBB312
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1444   .text.startup.main:00000006 .LBE312
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1446   .text.startup.main:00000006 .LBB318
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1475   .text.startup.main:00000026 .LBE318
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1438   .text.startup.main:00000006 .LBB314
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1442   .text.startup.main:00000006 .LBE314
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1448   .text.startup.main:00000006 .LBB316
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1466   .text.startup.main:0000001c .LBE316
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1480   .text.startup.main:0000002a .LBB319
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1496   .text.startup.main:00000032 .LBE319
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1498   .text.startup.main:00000032 .LBB326
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1519   .text.startup.main:0000003c .LBE326
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1491   .text.startup.main:00000032 .LBB321
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1494   .text.startup.main:00000032 .LBE321
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1500   .text.startup.main:00000032 .LBB324
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccJAQ5FD.s:1516   .text.startup.main:0000003c .LBE324

UNDEFINED SYMBOLS
USB_DeviceState
Endpoint_Write_Stream_LE
keymap_config
USB_IsInitialized
USB_Disable
USB_Init
suspend_wakeup_init
Endpoint_ConfigureEndpoint_Prv
USB_ControlRequest
Endpoint_ClearStatusStage
Endpoint_Write_Control_Stream_LE
clear_keyboard
keyboard_setup
USB_USBTask
keyboard_init
host_set_driver
keyboard_task
suspend_power_down
USB_Device_RemoteWakeupEnabled
suspend_wakeup_condition
USB_Device_SendRemoteWakeup
__do_copy_data
__do_clear_bss
