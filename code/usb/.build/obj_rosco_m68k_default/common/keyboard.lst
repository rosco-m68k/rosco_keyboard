   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB107:
  15               		.file 1 "./tmk_core/common/keyboard.c"
   1:./tmk_core/common/keyboard.c **** /*
   2:./tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/keyboard.c **** 
   4:./tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/keyboard.c **** (at your option) any later version.
   8:./tmk_core/common/keyboard.c **** 
   9:./tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:./tmk_core/common/keyboard.c **** 
  14:./tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/keyboard.c **** */
  17:./tmk_core/common/keyboard.c **** #include <stdint.h>
  18:./tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:./tmk_core/common/keyboard.c **** #include "matrix.h"
  20:./tmk_core/common/keyboard.c **** #include "keymap.h"
  21:./tmk_core/common/keyboard.c **** #include "host.h"
  22:./tmk_core/common/keyboard.c **** #include "led.h"
  23:./tmk_core/common/keyboard.c **** #include "keycode.h"
  24:./tmk_core/common/keyboard.c **** #include "timer.h"
  25:./tmk_core/common/keyboard.c **** #include "print.h"
  26:./tmk_core/common/keyboard.c **** #include "debug.h"
  27:./tmk_core/common/keyboard.c **** #include "command.h"
  28:./tmk_core/common/keyboard.c **** #include "util.h"
  29:./tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:./tmk_core/common/keyboard.c **** #include "eeconfig.h"
  31:./tmk_core/common/keyboard.c **** #include "backlight.h"
  32:./tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  34:./tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  35:./tmk_core/common/keyboard.c **** #else
  36:./tmk_core/common/keyboard.c **** #   include "magic.h"
  37:./tmk_core/common/keyboard.c **** #endif
  38:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  39:./tmk_core/common/keyboard.c **** #   include "mousekey.h"
  40:./tmk_core/common/keyboard.c **** #endif
  41:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  42:./tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  43:./tmk_core/common/keyboard.c **** #endif
  44:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  45:./tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  46:./tmk_core/common/keyboard.c **** #endif
  47:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  48:./tmk_core/common/keyboard.c **** #   include "adb.h"
  49:./tmk_core/common/keyboard.c **** #endif
  50:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  51:./tmk_core/common/keyboard.c **** #   include "rgblight.h"
  52:./tmk_core/common/keyboard.c **** #endif
  53:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  54:./tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  55:./tmk_core/common/keyboard.c **** #endif
  56:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  57:./tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  58:./tmk_core/common/keyboard.c **** #endif
  59:./tmk_core/common/keyboard.c **** 
  60:./tmk_core/common/keyboard.c **** 
  61:./tmk_core/common/keyboard.c **** 
  62:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  63:./tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  64:./tmk_core/common/keyboard.c **** {
  65:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  66:./tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  67:./tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  68:./tmk_core/common/keyboard.c ****         return false;
  69:./tmk_core/common/keyboard.c **** 
  70:./tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  71:./tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  72:./tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  73:./tmk_core/common/keyboard.c ****             return true;
  74:./tmk_core/common/keyboard.c ****     }
  75:./tmk_core/common/keyboard.c ****     return false;
  76:./tmk_core/common/keyboard.c **** }
  77:./tmk_core/common/keyboard.c **** #endif
  78:./tmk_core/common/keyboard.c **** 
  79:./tmk_core/common/keyboard.c **** __attribute__ ((weak))
  80:./tmk_core/common/keyboard.c **** void matrix_setup(void) {
  16               		.loc 1 80 25 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  81:./tmk_core/common/keyboard.c **** }
  22               		.loc 1 81 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE107:
  28               		.section	.text.keyboard_setup,"ax",@progbits
  29               	.global	keyboard_setup
  31               	keyboard_setup:
  32               	.LFB108:
  82:./tmk_core/common/keyboard.c **** 
  83:./tmk_core/common/keyboard.c **** void keyboard_setup(void) {
  33               		.loc 1 83 27 view -0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  84:./tmk_core/common/keyboard.c ****     matrix_setup();
  39               		.loc 1 84 5 view .LVU3
  40 0000 0C94 0000 		jmp matrix_setup
  41               	.LVL0:
  42               		.cfi_endproc
  43               	.LFE108:
  45               		.section	.text.keyboard_init,"ax",@progbits
  46               	.global	keyboard_init
  48               	keyboard_init:
  49               	.LFB109:
  85:./tmk_core/common/keyboard.c **** }
  86:./tmk_core/common/keyboard.c **** 
  87:./tmk_core/common/keyboard.c **** void keyboard_init(void) {
  50               		.loc 1 87 26 view -0
  51               		.cfi_startproc
  52               	/* prologue: function */
  53               	/* frame size = 0 */
  54               	/* stack size = 0 */
  55               	.L__stack_usage = 0
  88:./tmk_core/common/keyboard.c ****     timer_init();
  56               		.loc 1 88 5 view .LVU5
  57 0000 0E94 0000 		call timer_init
  58               	.LVL1:
  89:./tmk_core/common/keyboard.c ****     matrix_init();
  59               		.loc 1 89 5 view .LVU6
  60 0004 0E94 0000 		call matrix_init
  61               	.LVL2:
  90:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  91:./tmk_core/common/keyboard.c ****     ps2_mouse_init();
  92:./tmk_core/common/keyboard.c **** #endif
  93:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  94:./tmk_core/common/keyboard.c ****     serial_mouse_init();
  95:./tmk_core/common/keyboard.c **** #endif
  96:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  97:./tmk_core/common/keyboard.c ****     adb_mouse_init();
  98:./tmk_core/common/keyboard.c **** #endif
  99:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 100:./tmk_core/common/keyboard.c ****     bootmagic();
  62               		.loc 1 100 5 view .LVU7
  63 0008 0E94 0000 		call bootmagic
  64               	.LVL3:
 101:./tmk_core/common/keyboard.c **** #else
 102:./tmk_core/common/keyboard.c ****     magic();
 103:./tmk_core/common/keyboard.c **** #endif
 104:./tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 105:./tmk_core/common/keyboard.c ****     backlight_init();
 106:./tmk_core/common/keyboard.c **** #endif
 107:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 108:./tmk_core/common/keyboard.c ****     rgblight_init();
 109:./tmk_core/common/keyboard.c **** #endif
 110:./tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 111:./tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
  65               		.loc 1 111 5 view .LVU8
  66               		.loc 1 111 24 is_stmt 0 view .LVU9
  67 000c E0E0      		ldi r30,lo8(keymap_config)
  68 000e F0E0      		ldi r31,hi8(keymap_config)
  69 0010 8081      		ld r24,Z
  70 0012 8068      		ori r24,lo8(1<<7)
  71 0014 8083      		st Z,r24
  72               	/* epilogue start */
 112:./tmk_core/common/keyboard.c **** #endif
 113:./tmk_core/common/keyboard.c **** }
  73               		.loc 1 113 1 view .LVU10
  74 0016 0895      		ret
  75               		.cfi_endproc
  76               	.LFE109:
  78               		.section	.text.keyboard_task,"ax",@progbits
  79               	.global	keyboard_task
  81               	keyboard_task:
  82               	.LFB110:
 114:./tmk_core/common/keyboard.c **** 
 115:./tmk_core/common/keyboard.c **** /*
 116:./tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
 117:./tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 118:./tmk_core/common/keyboard.c ****  */
 119:./tmk_core/common/keyboard.c **** void keyboard_task(void)
 120:./tmk_core/common/keyboard.c **** {
  83               		.loc 1 120 1 is_stmt 1 view -0
  84               		.cfi_startproc
  85 0000 7F92      		push r7
  86               	.LCFI0:
  87               		.cfi_def_cfa_offset 3
  88               		.cfi_offset 7, -2
  89 0002 8F92      		push r8
  90               	.LCFI1:
  91               		.cfi_def_cfa_offset 4
  92               		.cfi_offset 8, -3
  93 0004 9F92      		push r9
  94               	.LCFI2:
  95               		.cfi_def_cfa_offset 5
  96               		.cfi_offset 9, -4
  97 0006 AF92      		push r10
  98               	.LCFI3:
  99               		.cfi_def_cfa_offset 6
 100               		.cfi_offset 10, -5
 101 0008 BF92      		push r11
 102               	.LCFI4:
 103               		.cfi_def_cfa_offset 7
 104               		.cfi_offset 11, -6
 105 000a CF92      		push r12
 106               	.LCFI5:
 107               		.cfi_def_cfa_offset 8
 108               		.cfi_offset 12, -7
 109 000c DF92      		push r13
 110               	.LCFI6:
 111               		.cfi_def_cfa_offset 9
 112               		.cfi_offset 13, -8
 113 000e EF92      		push r14
 114               	.LCFI7:
 115               		.cfi_def_cfa_offset 10
 116               		.cfi_offset 14, -9
 117 0010 FF92      		push r15
 118               	.LCFI8:
 119               		.cfi_def_cfa_offset 11
 120               		.cfi_offset 15, -10
 121 0012 0F93      		push r16
 122               	.LCFI9:
 123               		.cfi_def_cfa_offset 12
 124               		.cfi_offset 16, -11
 125 0014 1F93      		push r17
 126               	.LCFI10:
 127               		.cfi_def_cfa_offset 13
 128               		.cfi_offset 17, -12
 129 0016 CF93      		push r28
 130               	.LCFI11:
 131               		.cfi_def_cfa_offset 14
 132               		.cfi_offset 28, -13
 133 0018 DF93      		push r29
 134               	.LCFI12:
 135               		.cfi_def_cfa_offset 15
 136               		.cfi_offset 29, -14
 137 001a CDB7      		in r28,__SP_L__
 138 001c DEB7      		in r29,__SP_H__
 139               	.LCFI13:
 140               		.cfi_def_cfa_register 28
 141 001e 2A97      		sbiw r28,10
 142               	.LCFI14:
 143               		.cfi_def_cfa_offset 25
 144 0020 0FB6      		in __tmp_reg__,__SREG__
 145 0022 F894      		cli
 146 0024 DEBF      		out __SP_H__,r29
 147 0026 0FBE      		out __SREG__,__tmp_reg__
 148 0028 CDBF      		out __SP_L__,r28
 149               	/* prologue: function */
 150               	/* frame size = 10 */
 151               	/* stack size = 23 */
 152               	.L__stack_usage = 23
 121:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 153               		.loc 1 121 5 view .LVU12
 122:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 123:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 124:./tmk_core/common/keyboard.c **** #endif
 125:./tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 154               		.loc 1 125 5 view .LVU13
 126:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 155               		.loc 1 126 5 view .LVU14
 156               	.LVL4:
 127:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 157               		.loc 1 127 5 view .LVU15
 128:./tmk_core/common/keyboard.c **** 
 129:./tmk_core/common/keyboard.c ****     matrix_scan();
 158               		.loc 1 129 5 view .LVU16
 159 002a 0E94 0000 		call matrix_scan
 160               	.LVL5:
 130:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 161               		.loc 1 130 5 view .LVU17
 162               	.LBB6:
 163               		.loc 1 130 10 view .LVU18
 164               		.loc 1 130 25 view .LVU19
 165 002e 90E0      		ldi r25,lo8(matrix_prev.5093)
 166 0030 A92E      		mov r10,r25
 167 0032 90E0      		ldi r25,hi8(matrix_prev.5093)
 168 0034 B92E      		mov r11,r25
 169               	.LBE6:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 170               		.loc 1 129 5 is_stmt 0 view .LVU20
 171 0036 10E0      		ldi r17,0
 172 0038 00E0      		ldi r16,0
 173               	.LBB11:
 174               	.LBB7:
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 132:./tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 133:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 134:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 135:./tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 136:./tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 137:./tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 138:./tmk_core/common/keyboard.c ****                  * the last key would be lost.
 139:./tmk_core/common/keyboard.c ****                  */
 140:./tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 141:./tmk_core/common/keyboard.c ****                     matrix_print();
 142:./tmk_core/common/keyboard.c ****                 }
 143:./tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 144:./tmk_core/common/keyboard.c ****                 continue;
 145:./tmk_core/common/keyboard.c ****             }
 146:./tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 147:./tmk_core/common/keyboard.c **** #endif
 148:./tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 150:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 175               		.loc 1 150 53 view .LVU21
 176 003a 8824      		clr r8
 177 003c 8394      		inc r8
 178 003e 912C      		mov r9,__zero_reg__
 179               	.LVL6:
 180               	.L11:
 181               		.loc 1 150 53 view .LVU22
 182 0040 702E      		mov r7,r16
 183               	.LVL7:
 184               		.loc 1 150 53 view .LVU23
 185               	.LBE7:
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 186               		.loc 1 131 9 is_stmt 1 view .LVU24
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 187               		.loc 1 131 22 is_stmt 0 view .LVU25
 188 0042 802F      		mov r24,r16
 189 0044 0E94 0000 		call matrix_get_row
 190               	.LVL8:
 191 0048 7C01      		movw r14,r24
 192               	.LVL9:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 193               		.loc 1 132 9 is_stmt 1 view .LVU26
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 194               		.loc 1 132 49 is_stmt 0 view .LVU27
 195 004a F501      		movw r30,r10
 196 004c C190      		ld r12,Z+
 197 004e D190      		ld r13,Z+
 198 0050 5F01      		movw r10,r30
 199               	.LVL10:
 133:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 200               		.loc 1 133 9 is_stmt 1 view .LVU28
 133:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 201               		.loc 1 133 12 is_stmt 0 view .LVU29
 202 0052 C816      		cp r12,r24
 203 0054 D906      		cpc r13,r25
 204 0056 01F4      		brne .+2
 205 0058 00C0      		rjmp .L5
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 206               		.loc 1 148 13 is_stmt 1 view .LVU30
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 207               		.loc 1 148 17 is_stmt 0 view .LVU31
 208 005a 8091 0000 		lds r24,debug_config
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 209               		.loc 1 148 16 view .LVU32
 210 005e 81FD      		sbrc r24,1
 148:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 211               		.loc 1 148 31 is_stmt 1 discriminator 1 view .LVU33
 212 0060 0E94 0000 		call matrix_print
 213               	.LVL11:
 214               	.L6:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 215               		.loc 1 132 23 is_stmt 0 view .LVU34
 216 0064 9601      		movw r18,r12
 217 0066 2E25      		eor r18,r14
 218 0068 3F25      		eor r19,r15
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 219               		.loc 1 149 13 is_stmt 1 view .LVU35
 220               	.LBB8:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 221               		.loc 1 149 18 view .LVU36
 222               	.LVL12:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 223               		.loc 1 149 33 view .LVU37
 224               	.LBE8:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 225               		.loc 1 132 23 is_stmt 0 view .LVU38
 226 006a 90E0      		ldi r25,0
 227 006c 80E0      		ldi r24,0
 228               	.LVL13:
 229               	.L10:
 230               	.LBB9:
 231               		.loc 1 150 17 is_stmt 1 view .LVU39
 232               		.loc 1 150 53 is_stmt 0 view .LVU40
 233 006e 6401      		movw r12,r8
 234 0070 082E      		mov r0,r24
 235 0072 00C0      		rjmp 2f
 236               		1:
 237 0074 CC0C      		lsl r12
 238 0076 DD1C      		rol r13
 239               		2:
 240 0078 0A94      		dec r0
 241 007a 02F4      		brpl 1b
 242               		.loc 1 150 35 view .LVU41
 243 007c A601      		movw r20,r12
 244 007e 4223      		and r20,r18
 245 0080 5323      		and r21,r19
 246               		.loc 1 150 20 view .LVU42
 247 0082 452B      		or r20,r21
 248 0084 01F4      		brne .+2
 249 0086 00C0      		rjmp .L7
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 250               		.loc 1 151 21 is_stmt 1 view .LVU43
 251               		.loc 1 151 45 is_stmt 0 view .LVU44
 252 0088 8E83      		std Y+6,r24
 253 008a 7F82      		std Y+7,r7
 152:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 153:./tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 254               		.loc 1 153 48 view .LVU45
 255 008c EC20      		and r14,r12
 256               	.LVL14:
 257               		.loc 1 153 48 view .LVU46
 258 008e FD20      		and r15,r13
 259 0090 81E0      		ldi r24,lo8(1)
 260               	.LVL15:
 261               		.loc 1 153 48 view .LVU47
 262 0092 EF28      		or r14,r15
 263 0094 01F4      		brne .L8
 264 0096 80E0      		ldi r24,0
 265               	.L8:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 266               		.loc 1 151 45 view .LVU48
 267 0098 8887      		std Y+8,r24
 154:./tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 268               		.loc 1 154 34 view .LVU49
 269 009a 0E94 0000 		call timer_read
 270               	.LVL16:
 271               		.loc 1 154 47 view .LVU50
 272 009e 8160      		ori r24,1
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 273               		.loc 1 151 45 view .LVU51
 274 00a0 782F      		mov r23,r24
 275 00a2 9A87      		std Y+10,r25
 276 00a4 8987      		std Y+9,r24
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 277               		.loc 1 151 21 view .LVU52
 278 00a6 4E81      		ldd r20,Y+6
 279 00a8 5F81      		ldd r21,Y+7
 280 00aa 6885      		ldd r22,Y+8
 281 00ac 8A85      		ldd r24,Y+10
 282 00ae 0E94 0000 		call action_exec
 283               	.LVL17:
 155:./tmk_core/common/keyboard.c ****                     });
 156:./tmk_core/common/keyboard.c ****                     // record a processed key
 157:./tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 284               		.loc 1 157 21 is_stmt 1 view .LVU53
 285               		.loc 1 157 36 is_stmt 0 view .LVU54
 286 00b2 000F      		lsl r16
 287 00b4 111F      		rol r17
 288               	.LVL18:
 289               		.loc 1 157 36 view .LVU55
 290 00b6 F801      		movw r30,r16
 291 00b8 E050      		subi r30,lo8(-(matrix_prev.5093))
 292 00ba F040      		sbci r31,hi8(-(matrix_prev.5093))
 293 00bc 8081      		ld r24,Z
 294 00be 9181      		ldd r25,Z+1
 295 00c0 C826      		eor r12,r24
 296 00c2 D926      		eor r13,r25
 297 00c4 D182      		std Z+1,r13
 298 00c6 C082      		st Z,r12
 158:./tmk_core/common/keyboard.c ****                     // process a key per task call
 159:./tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 299               		.loc 1 159 21 is_stmt 1 view .LVU56
 300               	.L9:
 301               		.loc 1 159 21 is_stmt 0 view .LVU57
 302               	.LBE9:
 303               	.LBE11:
 160:./tmk_core/common/keyboard.c ****                 }
 161:./tmk_core/common/keyboard.c ****             }
 162:./tmk_core/common/keyboard.c ****         }
 163:./tmk_core/common/keyboard.c ****     }
 164:./tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 165:./tmk_core/common/keyboard.c ****     action_exec(TICK);
 166:./tmk_core/common/keyboard.c **** 
 167:./tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 168:./tmk_core/common/keyboard.c **** 
 169:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 170:./tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 171:./tmk_core/common/keyboard.c ****     mousekey_task();
 304               		.loc 1 171 5 is_stmt 1 view .LVU58
 305 00c8 0E94 0000 		call mousekey_task
 306               	.LVL19:
 172:./tmk_core/common/keyboard.c **** #endif
 173:./tmk_core/common/keyboard.c **** 
 174:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 175:./tmk_core/common/keyboard.c ****     ps2_mouse_task();
 176:./tmk_core/common/keyboard.c **** #endif
 177:./tmk_core/common/keyboard.c **** 
 178:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 179:./tmk_core/common/keyboard.c ****     serial_mouse_task();
 180:./tmk_core/common/keyboard.c **** #endif
 181:./tmk_core/common/keyboard.c **** 
 182:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 183:./tmk_core/common/keyboard.c ****     adb_mouse_task();
 184:./tmk_core/common/keyboard.c **** #endif
 185:./tmk_core/common/keyboard.c **** 
 186:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 187:./tmk_core/common/keyboard.c **** 	serial_link_update();
 188:./tmk_core/common/keyboard.c **** #endif
 189:./tmk_core/common/keyboard.c **** 
 190:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 191:./tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, host_keyboard_leds());
 192:./tmk_core/common/keyboard.c **** #endif
 193:./tmk_core/common/keyboard.c **** 
 194:./tmk_core/common/keyboard.c ****     // update LED
 195:./tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 307               		.loc 1 195 5 view .LVU59
 308               		.loc 1 195 23 is_stmt 0 view .LVU60
 309 00cc 0E94 0000 		call host_keyboard_leds
 310               	.LVL20:
 311               		.loc 1 195 8 view .LVU61
 312 00d0 9091 0000 		lds r25,led_status.5094
 313 00d4 8917      		cp r24,r25
 314 00d6 01F0      		breq .L4
 196:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 315               		.loc 1 196 9 is_stmt 1 view .LVU62
 316               		.loc 1 196 22 is_stmt 0 view .LVU63
 317 00d8 0E94 0000 		call host_keyboard_leds
 318               	.LVL21:
 319               		.loc 1 196 20 view .LVU64
 320 00dc 8093 0000 		sts led_status.5094,r24
 197:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 321               		.loc 1 197 9 is_stmt 1 view .LVU65
 322               	.LVL22:
 323               	.LBB12:
 324               	.LBI12:
 198:./tmk_core/common/keyboard.c ****     }
 199:./tmk_core/common/keyboard.c **** }
 200:./tmk_core/common/keyboard.c **** 
 201:./tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 325               		.loc 1 201 6 view .LVU66
 326               	.LBB13:
 202:./tmk_core/common/keyboard.c **** {
 203:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 327               		.loc 1 203 5 view .LVU67
 328               		.loc 1 203 54 view .LVU68
 329               		.loc 1 203 72 view .LVU69
 330               		.loc 1 203 85 view .LVU70
 204:./tmk_core/common/keyboard.c ****     led_set(leds);
 331               		.loc 1 204 5 view .LVU71
 332               	/* epilogue start */
 333               	.LBE13:
 334               	.LBE12:
 199:./tmk_core/common/keyboard.c **** 
 335               		.loc 1 199 1 is_stmt 0 view .LVU72
 336 00e0 2A96      		adiw r28,10
 337 00e2 0FB6      		in __tmp_reg__,__SREG__
 338 00e4 F894      		cli
 339 00e6 DEBF      		out __SP_H__,r29
 340 00e8 0FBE      		out __SREG__,__tmp_reg__
 341 00ea CDBF      		out __SP_L__,r28
 342 00ec DF91      		pop r29
 343 00ee CF91      		pop r28
 344 00f0 1F91      		pop r17
 345 00f2 0F91      		pop r16
 346 00f4 FF90      		pop r15
 347 00f6 EF90      		pop r14
 348 00f8 DF90      		pop r13
 349 00fa CF90      		pop r12
 350 00fc BF90      		pop r11
 351 00fe AF90      		pop r10
 352 0100 9F90      		pop r9
 353 0102 8F90      		pop r8
 354 0104 7F90      		pop r7
 355               	.LBB15:
 356               	.LBB14:
 357               		.loc 1 204 5 view .LVU73
 358 0106 0C94 0000 		jmp led_set
 359               	.LVL23:
 360               	.L7:
 361               		.loc 1 204 5 view .LVU74
 362               	.LBE14:
 363               	.LBE15:
 364               	.LBB16:
 365               	.LBB10:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 366               		.loc 1 149 50 is_stmt 1 discriminator 2 view .LVU75
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 367               		.loc 1 149 33 discriminator 2 view .LVU76
 368 010a 0196      		adiw r24,1
 369               	.LVL24:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 370               		.loc 1 149 13 is_stmt 0 discriminator 2 view .LVU77
 371 010c 8F30      		cpi r24,15
 372 010e 9105      		cpc r25,__zero_reg__
 373 0110 01F0      		breq .+2
 374 0112 00C0      		rjmp .L10
 375               	.LVL25:
 376               	.L5:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 377               		.loc 1 149 13 discriminator 2 view .LVU78
 378               	.LBE10:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 379               		.loc 1 130 42 is_stmt 1 view .LVU79
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 380               		.loc 1 130 25 view .LVU80
 381 0114 0F5F      		subi r16,-1
 382 0116 1F4F      		sbci r17,-1
 383               	.LVL26:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 384               		.loc 1 130 5 is_stmt 0 view .LVU81
 385 0118 0530      		cpi r16,5
 386 011a 1105      		cpc r17,__zero_reg__
 387 011c 01F0      		breq .+2
 388 011e 00C0      		rjmp .L11
 389               	.LBE16:
 165:./tmk_core/common/keyboard.c **** 
 390               		.loc 1 165 5 is_stmt 1 view .LVU82
 165:./tmk_core/common/keyboard.c **** 
 391               		.loc 1 165 17 is_stmt 0 view .LVU83
 392 0120 8FEF      		ldi r24,lo8(-1)
 393 0122 8983      		std Y+1,r24
 394 0124 8A83      		std Y+2,r24
 395 0126 1B82      		std Y+3,__zero_reg__
 396 0128 0E94 0000 		call timer_read
 397               	.LVL27:
 398 012c 8160      		ori r24,1
 399 012e 782F      		mov r23,r24
 400 0130 9D83      		std Y+5,r25
 401 0132 8C83      		std Y+4,r24
 165:./tmk_core/common/keyboard.c **** 
 402               		.loc 1 165 5 view .LVU84
 403 0134 4981      		ldd r20,Y+1
 404 0136 5A81      		ldd r21,Y+2
 405 0138 6B81      		ldd r22,Y+3
 406 013a 8D81      		ldd r24,Y+5
 407 013c 0E94 0000 		call action_exec
 408               	.LVL28:
 409 0140 00C0      		rjmp .L9
 410               	.LVL29:
 411               	.L4:
 412               	/* epilogue start */
 199:./tmk_core/common/keyboard.c **** 
 413               		.loc 1 199 1 view .LVU85
 414 0142 2A96      		adiw r28,10
 415 0144 0FB6      		in __tmp_reg__,__SREG__
 416 0146 F894      		cli
 417 0148 DEBF      		out __SP_H__,r29
 418 014a 0FBE      		out __SREG__,__tmp_reg__
 419 014c CDBF      		out __SP_L__,r28
 420 014e DF91      		pop r29
 421 0150 CF91      		pop r28
 422 0152 1F91      		pop r17
 423 0154 0F91      		pop r16
 424 0156 FF90      		pop r15
 425 0158 EF90      		pop r14
 426 015a DF90      		pop r13
 427 015c CF90      		pop r12
 428 015e BF90      		pop r11
 429 0160 AF90      		pop r10
 430 0162 9F90      		pop r9
 431 0164 8F90      		pop r8
 432 0166 7F90      		pop r7
 433 0168 0895      		ret
 434               		.cfi_endproc
 435               	.LFE110:
 437               		.section	.text.keyboard_set_leds,"ax",@progbits
 438               	.global	keyboard_set_leds
 440               	keyboard_set_leds:
 441               	.LVL30:
 442               	.LFB111:
 202:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 443               		.loc 1 202 1 is_stmt 1 view -0
 444               		.cfi_startproc
 445               	/* prologue: function */
 446               	/* frame size = 0 */
 447               	/* stack size = 0 */
 448               	.L__stack_usage = 0
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 449               		.loc 1 203 5 view .LVU87
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 450               		.loc 1 203 54 view .LVU88
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 451               		.loc 1 203 72 view .LVU89
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 452               		.loc 1 203 85 view .LVU90
 453               		.loc 1 204 5 view .LVU91
 454 0000 0C94 0000 		jmp led_set
 455               	.LVL31:
 456               		.loc 1 204 5 is_stmt 0 view .LVU92
 457               		.cfi_endproc
 458               	.LFE111:
 460               		.section	.bss.led_status.5094,"aw",@nobits
 463               	led_status.5094:
 464 0000 00        		.zero	1
 465               		.section	.bss.matrix_prev.5093,"aw",@nobits
 468               	matrix_prev.5093:
 469 0000 0000 0000 		.zero	10
 469      0000 0000 
 469      0000 
 470               		.text
 471               	.Letext0:
 472               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/stdint.h"
 473               		.file 3 "./tmk_core/common/keyboard.h"
 474               		.file 4 "./tmk_core/common/matrix.h"
 475               		.file 5 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 476               		.file 6 "./tmk_core/common/action.h"
 477               		.file 7 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 478               		.file 8 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 479               		.file 9 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 480               		.file 10 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/stdio.h"
 481               		.file 11 "./tmk_core/common/host.h"
 482               		.file 12 "./tmk_core/common/debug.h"
 483               		.file 13 "./quantum/keycode_config.h"
 484               		.file 14 "./quantum/keymap.h"
 485               		.file 15 "./tmk_core/common/timer.h"
 486               		.file 16 "./tmk_core/common/command.h"
 487               		.file 17 "./tmk_core/common/action_layer.h"
 488               		.file 18 "./tmk_core/common/mousekey.h"
 489               		.file 19 "./tmk_core/common/led.h"
 490               		.file 20 "./tmk_core/common/bootmagic.h"
DEFINED SYMBOLS
                            *ABS*:00000000 keyboard.c
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2      *ABS*:0000003e __SP_H__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:3      *ABS*:0000003d __SP_L__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:4      *ABS*:0000003f __SREG__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:6      *ABS*:00000001 __zero_reg__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:13     .text.matrix_setup:00000000 matrix_setup
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:16     .text.matrix_setup:00000000 .Loc.0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:17     .text.matrix_setup:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:22     .text.matrix_setup:00000000 .Loc.1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:25     .text.matrix_setup:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:31     .text.keyboard_setup:00000000 keyboard_setup
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:33     .text.keyboard_setup:00000000 .Loc.2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:34     .text.keyboard_setup:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:39     .text.keyboard_setup:00000000 .Loc.3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:42     .text.keyboard_setup:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:48     .text.keyboard_init:00000000 keyboard_init
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:50     .text.keyboard_init:00000000 .Loc.4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:51     .text.keyboard_init:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:56     .text.keyboard_init:00000000 .Loc.5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:59     .text.keyboard_init:00000004 .Loc.6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:62     .text.keyboard_init:00000008 .Loc.7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:65     .text.keyboard_init:0000000c .Loc.8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:66     .text.keyboard_init:0000000c .Loc.9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:73     .text.keyboard_init:00000016 .Loc.10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:75     .text.keyboard_init:00000018 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:81     .text.keyboard_task:00000000 keyboard_task
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:83     .text.keyboard_task:00000000 .Loc.11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:84     .text.keyboard_task:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:153    .text.keyboard_task:0000002a .Loc.12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:154    .text.keyboard_task:0000002a .Loc.13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:155    .text.keyboard_task:0000002a .Loc.14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:157    .text.keyboard_task:0000002a .Loc.15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:158    .text.keyboard_task:0000002a .Loc.16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:161    .text.keyboard_task:0000002e .Loc.17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:163    .text.keyboard_task:0000002e .Loc.18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:164    .text.keyboard_task:0000002e .Loc.19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:468    .bss.matrix_prev.5093:00000000 matrix_prev.5093
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:170    .text.keyboard_task:00000036 .Loc.20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:175    .text.keyboard_task:0000003a .Loc.21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:181    .text.keyboard_task:00000040 .Loc.22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:184    .text.keyboard_task:00000042 .Loc.23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:186    .text.keyboard_task:00000042 .Loc.24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:187    .text.keyboard_task:00000042 .Loc.25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:193    .text.keyboard_task:0000004a .Loc.26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:194    .text.keyboard_task:0000004a .Loc.27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:200    .text.keyboard_task:00000052 .Loc.28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:201    .text.keyboard_task:00000052 .Loc.29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:204    .text.keyboard_task:00000058 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:206    .text.keyboard_task:0000005a .Loc.30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:207    .text.keyboard_task:0000005a .Loc.31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:209    .text.keyboard_task:0000005e .Loc.32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:211    .text.keyboard_task:00000060 .Loc.33
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:215    .text.keyboard_task:00000064 .Loc.34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:219    .text.keyboard_task:0000006a .Loc.35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:221    .text.keyboard_task:0000006a .Loc.36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:223    .text.keyboard_task:0000006a .Loc.37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:225    .text.keyboard_task:0000006a .Loc.38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:231    .text.keyboard_task:0000006e .Loc.39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:232    .text.keyboard_task:0000006e .Loc.40
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:242    .text.keyboard_task:0000007c .Loc.41
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:246    .text.keyboard_task:00000082 .Loc.42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:248    .text.keyboard_task:00000086 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:250    .text.keyboard_task:00000088 .Loc.43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:251    .text.keyboard_task:00000088 .Loc.44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:254    .text.keyboard_task:0000008c .Loc.45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:257    .text.keyboard_task:0000008e .Loc.46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:261    .text.keyboard_task:00000092 .Loc.47
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:266    .text.keyboard_task:00000098 .Loc.48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:268    .text.keyboard_task:0000009a .Loc.49
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:271    .text.keyboard_task:0000009e .Loc.50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:273    .text.keyboard_task:000000a0 .Loc.51
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:277    .text.keyboard_task:000000a6 .Loc.52
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:284    .text.keyboard_task:000000b2 .Loc.53
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:285    .text.keyboard_task:000000b2 .Loc.54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:289    .text.keyboard_task:000000b6 .Loc.55
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:299    .text.keyboard_task:000000c8 .Loc.56
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:301    .text.keyboard_task:000000c8 .Loc.57
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:304    .text.keyboard_task:000000c8 .Loc.58
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:307    .text.keyboard_task:000000cc .Loc.59
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:308    .text.keyboard_task:000000cc .Loc.60
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:311    .text.keyboard_task:000000d0 .Loc.61
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:463    .bss.led_status.5094:00000000 led_status.5094
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:315    .text.keyboard_task:000000d8 .Loc.62
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:316    .text.keyboard_task:000000d8 .Loc.63
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:319    .text.keyboard_task:000000dc .Loc.64
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:321    .text.keyboard_task:000000e0 .Loc.65
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:325    .text.keyboard_task:000000e0 .Loc.66
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:327    .text.keyboard_task:000000e0 .Loc.67
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:328    .text.keyboard_task:000000e0 .Loc.68
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:329    .text.keyboard_task:000000e0 .Loc.69
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:330    .text.keyboard_task:000000e0 .Loc.70
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:331    .text.keyboard_task:000000e0 .Loc.71
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:335    .text.keyboard_task:000000e0 .Loc.72
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:357    .text.keyboard_task:00000106 .Loc.73
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:361    .text.keyboard_task:0000010a .Loc.74
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:366    .text.keyboard_task:0000010a .Loc.75
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:367    .text.keyboard_task:0000010a .Loc.76
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:370    .text.keyboard_task:0000010c .Loc.77
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:373    .text.keyboard_task:00000112 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:377    .text.keyboard_task:00000114 .Loc.78
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:379    .text.keyboard_task:00000114 .Loc.79
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:380    .text.keyboard_task:00000114 .Loc.80
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:384    .text.keyboard_task:00000118 .Loc.81
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:387    .text.keyboard_task:0000011e L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:390    .text.keyboard_task:00000120 .Loc.82
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:391    .text.keyboard_task:00000120 .Loc.83
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:402    .text.keyboard_task:00000134 .Loc.84
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:413    .text.keyboard_task:00000142 .Loc.85
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:434    .text.keyboard_task:0000016a L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:440    .text.keyboard_set_leds:00000000 keyboard_set_leds
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:443    .text.keyboard_set_leds:00000000 .Loc.86
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:444    .text.keyboard_set_leds:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:449    .text.keyboard_set_leds:00000000 .Loc.87
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:450    .text.keyboard_set_leds:00000000 .Loc.88
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:451    .text.keyboard_set_leds:00000000 .Loc.89
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:452    .text.keyboard_set_leds:00000000 .Loc.90
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:453    .text.keyboard_set_leds:00000000 .Loc.91
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:456    .text.keyboard_set_leds:00000004 .Loc.92
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:457    .text.keyboard_set_leds:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:28     .text.matrix_setup:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:45     .text.keyboard_setup:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:78     .text.keyboard_init:00000018 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:437    .text.keyboard_task:0000016a L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:460    .text.keyboard_set_leds:00000004 L0
                     .debug_frame:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:376    .text.keyboard_task:00000114 .L5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:239    .text.keyboard_task:00000078 .L21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:236    .text.keyboard_task:00000074 .L11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:360    .text.keyboard_task:0000010a .L7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:265    .text.keyboard_task:00000098 .L8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:411    .text.keyboard_task:00000142 .L4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:229    .text.keyboard_task:0000006e .L10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:180    .text.keyboard_task:00000040 .L11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:300    .text.keyboard_task:000000c8 .L9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:1610   .debug_abbrev:00000000 .Ldebug_abbrev0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2558   .debug_ranges:00000000 .Ldebug_ranges0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2596   .debug_line:00000000 .Ldebug_line0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:82     .text.keyboard_task:00000000 .LFB110
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:435    .text.keyboard_task:0000016a .LFE110
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2282   .debug_loc:00000000 .LLST0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2386   .debug_loc:000000dc .LLST1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2379   .debug_loc:000000d6 .LVUS1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2417   .debug_loc:00000114 .LLST2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2412   .debug_loc:00000110 .LVUS2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2445   .debug_loc:00000142 .LLST3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2434   .debug_loc:00000138 .LVUS3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2482   .debug_loc:0000018e .LLST4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2471   .debug_loc:00000184 .LVUS4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:270    .text.keyboard_task:0000009e .LVL16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:283    .text.keyboard_task:000000b2 .LVL17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:190    .text.keyboard_task:00000048 .LVL8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:213    .text.keyboard_task:00000064 .LVL11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:324    .text.keyboard_task:000000e0 .LBI12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2511   .debug_loc:000001d2 .LLST5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2508   .debug_loc:000001d0 .LVUS5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:359    .text.keyboard_task:0000010a .LVL23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:160    .text.keyboard_task:0000002e .LVL5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:306    .text.keyboard_task:000000cc .LVL19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:310    .text.keyboard_task:000000d0 .LVL20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:318    .text.keyboard_task:000000dc .LVL21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:397    .text.keyboard_task:0000012c .LVL27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:408    .text.keyboard_task:00000140 .LVL28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:49     .text.keyboard_init:00000000 .LFB109
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:76     .text.keyboard_init:00000018 .LFE109
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:58     .text.keyboard_init:00000004 .LVL1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:61     .text.keyboard_init:00000008 .LVL2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:64     .text.keyboard_init:0000000c .LVL3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:32     .text.keyboard_setup:00000000 .LFB108
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:43     .text.keyboard_setup:00000004 .LFE108
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:41     .text.keyboard_setup:00000004 .LVL0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:14     .text.matrix_setup:00000000 .LFB107
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:26     .text.matrix_setup:00000002 .LFE107
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:442    .text.keyboard_set_leds:00000000 .LFB111
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:458    .text.keyboard_set_leds:00000004 .LFE111
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2523   .debug_loc:000001e9 .LLST6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:2518   .debug_loc:000001e5 .LVUS6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:455    .text.keyboard_set_leds:00000004 .LVL31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:86     .text.keyboard_task:00000002 .LCFI0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:90     .text.keyboard_task:00000004 .LCFI1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:94     .text.keyboard_task:00000006 .LCFI2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:98     .text.keyboard_task:00000008 .LCFI3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:102    .text.keyboard_task:0000000a .LCFI4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:106    .text.keyboard_task:0000000c .LCFI5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:110    .text.keyboard_task:0000000e .LCFI6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:114    .text.keyboard_task:00000010 .LCFI7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:118    .text.keyboard_task:00000012 .LCFI8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:122    .text.keyboard_task:00000014 .LCFI9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:126    .text.keyboard_task:00000016 .LCFI10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:130    .text.keyboard_task:00000018 .LCFI11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:134    .text.keyboard_task:0000001a .LCFI12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:139    .text.keyboard_task:0000001e .LCFI13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:142    .text.keyboard_task:00000020 .LCFI14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:156    .text.keyboard_task:0000002a .LVL4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:179    .text.keyboard_task:00000040 .LVL6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:192    .text.keyboard_task:0000004a .LVL9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:256    .text.keyboard_task:0000008e .LVL14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:410    .text.keyboard_task:00000142 .LVL29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:199    .text.keyboard_task:00000052 .LVL10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:228    .text.keyboard_task:0000006e .LVL13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:183    .text.keyboard_task:00000042 .LVL7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:288    .text.keyboard_task:000000b6 .LVL18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:375    .text.keyboard_task:00000114 .LVL25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:383    .text.keyboard_task:00000118 .LVL26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:222    .text.keyboard_task:0000006a .LVL12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:260    .text.keyboard_task:00000092 .LVL15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:369    .text.keyboard_task:0000010c .LVL24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:322    .text.keyboard_task:000000e0 .LVL22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:441    .text.keyboard_set_leds:00000000 .LVL30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:492    .debug_info:00000000 .Ldebug_info0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:162    .text.keyboard_task:0000002e .LBB6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:169    .text.keyboard_task:00000036 .LBE6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:173    .text.keyboard_task:0000003a .LBB11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:303    .text.keyboard_task:000000c8 .LBE11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:364    .text.keyboard_task:0000010a .LBB16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:389    .text.keyboard_task:00000120 .LBE16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:174    .text.keyboard_task:0000003a .LBB7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:185    .text.keyboard_task:00000042 .LBE7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:220    .text.keyboard_task:0000006a .LBB8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:224    .text.keyboard_task:0000006a .LBE8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:230    .text.keyboard_task:0000006e .LBB9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:302    .text.keyboard_task:000000c8 .LBE9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:365    .text.keyboard_task:0000010a .LBB10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:378    .text.keyboard_task:00000114 .LBE10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:323    .text.keyboard_task:000000e0 .LBB12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:334    .text.keyboard_task:000000e0 .LBE12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:355    .text.keyboard_task:00000106 .LBB15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccivQZTX.s:363    .text.keyboard_task:0000010a .LBE15

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
keymap_config
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
led_set
__do_clear_bss
