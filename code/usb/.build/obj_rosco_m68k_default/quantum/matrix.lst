   1               		.file	"matrix.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_init_user,"ax",@progbits
  11               		.weak	matrix_init_user
  13               	matrix_init_user:
  14               	.LFB14:
  15               		.file 1 "quantum/matrix.c"
   1:quantum/matrix.c **** /*
   2:quantum/matrix.c **** Copyright 2012 Jun Wako
   3:quantum/matrix.c **** Copyright 2014 Jack Humbert
   4:quantum/matrix.c **** 
   5:quantum/matrix.c **** This program is free software: you can redistribute it and/or modify
   6:quantum/matrix.c **** it under the terms of the GNU General Public License as published by
   7:quantum/matrix.c **** the Free Software Foundation, either version 2 of the License, or
   8:quantum/matrix.c **** (at your option) any later version.
   9:quantum/matrix.c **** 
  10:quantum/matrix.c **** This program is distributed in the hope that it will be useful,
  11:quantum/matrix.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:quantum/matrix.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:quantum/matrix.c **** GNU General Public License for more details.
  14:quantum/matrix.c **** 
  15:quantum/matrix.c **** You should have received a copy of the GNU General Public License
  16:quantum/matrix.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:quantum/matrix.c **** */
  18:quantum/matrix.c **** #include <stdint.h>
  19:quantum/matrix.c **** #include <stdbool.h>
  20:quantum/matrix.c **** #if defined(__AVR__)
  21:quantum/matrix.c **** #include <avr/io.h>
  22:quantum/matrix.c **** #endif
  23:quantum/matrix.c **** #include "wait.h"
  24:quantum/matrix.c **** #include "print.h"
  25:quantum/matrix.c **** #include "debug.h"
  26:quantum/matrix.c **** #include "util.h"
  27:quantum/matrix.c **** #include "matrix.h"
  28:quantum/matrix.c **** #include "timer.h"
  29:quantum/matrix.c **** 
  30:quantum/matrix.c **** 
  31:quantum/matrix.c **** /* Set 0 if debouncing isn't needed */
  32:quantum/matrix.c **** 
  33:quantum/matrix.c **** #ifndef DEBOUNCING_DELAY
  34:quantum/matrix.c **** #   define DEBOUNCING_DELAY 5
  35:quantum/matrix.c **** #endif
  36:quantum/matrix.c **** 
  37:quantum/matrix.c **** #if (DEBOUNCING_DELAY > 0)
  38:quantum/matrix.c ****     static uint16_t debouncing_time;
  39:quantum/matrix.c ****     static bool debouncing = false;
  40:quantum/matrix.c **** #endif
  41:quantum/matrix.c **** 
  42:quantum/matrix.c **** #if (MATRIX_COLS <= 8)
  43:quantum/matrix.c **** #    define print_matrix_header()  print("\nr/c 01234567\n")
  44:quantum/matrix.c **** #    define print_matrix_row(row)  print_bin_reverse8(matrix_get_row(row))
  45:quantum/matrix.c **** #    define matrix_bitpop(i)       bitpop(matrix[i])
  46:quantum/matrix.c **** #    define ROW_SHIFTER ((uint8_t)1)
  47:quantum/matrix.c **** #elif (MATRIX_COLS <= 16)
  48:quantum/matrix.c **** #    define print_matrix_header()  print("\nr/c 0123456789ABCDEF\n")
  49:quantum/matrix.c **** #    define print_matrix_row(row)  print_bin_reverse16(matrix_get_row(row))
  50:quantum/matrix.c **** #    define matrix_bitpop(i)       bitpop16(matrix[i])
  51:quantum/matrix.c **** #    define ROW_SHIFTER ((uint16_t)1)
  52:quantum/matrix.c **** #elif (MATRIX_COLS <= 32)
  53:quantum/matrix.c **** #    define print_matrix_header()  print("\nr/c 0123456789ABCDEF0123456789ABCDEF\n")
  54:quantum/matrix.c **** #    define print_matrix_row(row)  print_bin_reverse32(matrix_get_row(row))
  55:quantum/matrix.c **** #    define matrix_bitpop(i)       bitpop32(matrix[i])
  56:quantum/matrix.c **** #    define ROW_SHIFTER  ((uint32_t)1)
  57:quantum/matrix.c **** #endif
  58:quantum/matrix.c **** 
  59:quantum/matrix.c **** #ifdef MATRIX_MASKED
  60:quantum/matrix.c ****     extern const matrix_row_t matrix_mask[];
  61:quantum/matrix.c **** #endif
  62:quantum/matrix.c **** 
  63:quantum/matrix.c **** static const uint8_t row_pins[MATRIX_ROWS] = MATRIX_ROW_PINS;
  64:quantum/matrix.c **** static const uint8_t col_pins[MATRIX_COLS] = MATRIX_COL_PINS;
  65:quantum/matrix.c **** 
  66:quantum/matrix.c **** /* matrix state(1:on, 0:off) */
  67:quantum/matrix.c **** static matrix_row_t matrix[MATRIX_ROWS];
  68:quantum/matrix.c **** 
  69:quantum/matrix.c **** static matrix_row_t matrix_raw[MATRIX_ROWS];
  70:quantum/matrix.c **** static matrix_row_t matrix_debouncing[MATRIX_ROWS];
  71:quantum/matrix.c **** 
  72:quantum/matrix.c **** 
  73:quantum/matrix.c **** #if (DIODE_DIRECTION == COL2ROW)
  74:quantum/matrix.c ****     static void init_cols(void);
  75:quantum/matrix.c ****     static bool read_cols_on_row(matrix_row_t current_matrix[], uint8_t current_row);
  76:quantum/matrix.c ****     static void unselect_rows(void);
  77:quantum/matrix.c ****     static void select_row(uint8_t row);
  78:quantum/matrix.c ****     static void unselect_row(uint8_t row);
  79:quantum/matrix.c **** #else // ROW2COL
  80:quantum/matrix.c ****     static void init_rows(void);
  81:quantum/matrix.c ****     static bool read_rows_on_col(matrix_row_t current_matrix[], uint8_t current_col);
  82:quantum/matrix.c ****     static void unselect_cols(void);
  83:quantum/matrix.c ****     static void unselect_col(uint8_t col);
  84:quantum/matrix.c ****     static void select_col(uint8_t col);
  85:quantum/matrix.c **** #endif
  86:quantum/matrix.c **** 
  87:quantum/matrix.c **** __attribute__ ((weak))
  88:quantum/matrix.c **** void matrix_init_quantum(void) {
  89:quantum/matrix.c ****     matrix_init_kb();
  90:quantum/matrix.c **** }
  91:quantum/matrix.c **** 
  92:quantum/matrix.c **** __attribute__ ((weak))
  93:quantum/matrix.c **** void matrix_scan_quantum(void) {
  94:quantum/matrix.c ****     matrix_scan_kb();
  95:quantum/matrix.c **** }
  96:quantum/matrix.c **** 
  97:quantum/matrix.c **** __attribute__ ((weak))
  98:quantum/matrix.c **** void matrix_init_kb(void) {
  99:quantum/matrix.c ****     matrix_init_user();
 100:quantum/matrix.c **** }
 101:quantum/matrix.c **** 
 102:quantum/matrix.c **** __attribute__ ((weak))
 103:quantum/matrix.c **** void matrix_scan_kb(void) {
 104:quantum/matrix.c ****     matrix_scan_user();
 105:quantum/matrix.c **** }
 106:quantum/matrix.c **** 
 107:quantum/matrix.c **** __attribute__ ((weak))
 108:quantum/matrix.c **** void matrix_init_user(void) {
  16               		.loc 1 108 29 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 109:quantum/matrix.c **** }
  22               		.loc 1 109 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE14:
  28               		.set	matrix_init_user.localalias.0,matrix_init_user
  29               		.section	.text.matrix_init_kb,"ax",@progbits
  30               		.weak	matrix_init_kb
  32               	matrix_init_kb:
  33               	.LFB12:
  98:quantum/matrix.c ****     matrix_init_user();
  34               		.loc 1 98 27 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
  99:quantum/matrix.c **** }
  40               		.loc 1 99 5 view .LVU3
  41 0000 0C94 0000 		jmp matrix_init_user
  42               	.LVL0:
  43               		.cfi_endproc
  44               	.LFE12:
  46               		.section	.text.matrix_init_quantum,"ax",@progbits
  47               		.weak	matrix_init_quantum
  49               	matrix_init_quantum:
  50               	.LFB10:
  88:quantum/matrix.c ****     matrix_init_kb();
  51               		.loc 1 88 32 view -0
  52               		.cfi_startproc
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 0 */
  56               	.L__stack_usage = 0
  89:quantum/matrix.c **** }
  57               		.loc 1 89 5 view .LVU5
  58 0000 0C94 0000 		jmp matrix_init_kb
  59               	.LVL1:
  60               		.cfi_endproc
  61               	.LFE10:
  63               		.section	.text.matrix_scan_user,"ax",@progbits
  64               		.weak	matrix_scan_user
  66               	matrix_scan_user:
  67               	.LFB31:
  68               		.cfi_startproc
  69               	/* prologue: function */
  70               	/* frame size = 0 */
  71               	/* stack size = 0 */
  72               	.L__stack_usage = 0
  73               	/* epilogue start */
  74 0000 0895      		ret
  75               		.cfi_endproc
  76               	.LFE31:
  78               		.section	.text.matrix_scan_kb,"ax",@progbits
  79               		.weak	matrix_scan_kb
  81               	matrix_scan_kb:
  82               	.LFB13:
 103:quantum/matrix.c ****     matrix_scan_user();
  83               		.loc 1 103 27 view -0
  84               		.cfi_startproc
  85               	/* prologue: function */
  86               	/* frame size = 0 */
  87               	/* stack size = 0 */
  88               	.L__stack_usage = 0
 104:quantum/matrix.c **** }
  89               		.loc 1 104 5 view .LVU7
  90 0000 0C94 0000 		jmp matrix_scan_user
  91               	.LVL2:
  92               		.cfi_endproc
  93               	.LFE13:
  95               		.section	.text.matrix_scan_quantum,"ax",@progbits
  96               		.weak	matrix_scan_quantum
  98               	matrix_scan_quantum:
  99               	.LFB11:
  93:quantum/matrix.c ****     matrix_scan_kb();
 100               		.loc 1 93 32 view -0
 101               		.cfi_startproc
 102               	/* prologue: function */
 103               	/* frame size = 0 */
 104               	/* stack size = 0 */
 105               	.L__stack_usage = 0
  94:quantum/matrix.c **** }
 106               		.loc 1 94 5 view .LVU9
 107 0000 0C94 0000 		jmp matrix_scan_kb
 108               	.LVL3:
 109               		.cfi_endproc
 110               	.LFE11:
 112               		.section	.text.matrix_rows,"ax",@progbits
 113               	.global	matrix_rows
 115               	matrix_rows:
 116               	.LFB16:
 110:quantum/matrix.c **** 
 111:quantum/matrix.c **** __attribute__ ((weak))
 112:quantum/matrix.c **** void matrix_scan_user(void) {
 113:quantum/matrix.c **** }
 114:quantum/matrix.c **** 
 115:quantum/matrix.c **** inline
 116:quantum/matrix.c **** uint8_t matrix_rows(void) {
 117               		.loc 1 116 27 view -0
 118               		.cfi_startproc
 119               	/* prologue: function */
 120               	/* frame size = 0 */
 121               	/* stack size = 0 */
 122               	.L__stack_usage = 0
 117:quantum/matrix.c ****     return MATRIX_ROWS;
 123               		.loc 1 117 5 view .LVU11
 118:quantum/matrix.c **** }
 124               		.loc 1 118 1 is_stmt 0 view .LVU12
 125 0000 85E0      		ldi r24,lo8(5)
 126               	/* epilogue start */
 127 0002 0895      		ret
 128               		.cfi_endproc
 129               	.LFE16:
 131               		.section	.text.matrix_cols,"ax",@progbits
 132               	.global	matrix_cols
 134               	matrix_cols:
 135               	.LFB17:
 119:quantum/matrix.c **** 
 120:quantum/matrix.c **** inline
 121:quantum/matrix.c **** uint8_t matrix_cols(void) {
 136               		.loc 1 121 27 is_stmt 1 view -0
 137               		.cfi_startproc
 138               	/* prologue: function */
 139               	/* frame size = 0 */
 140               	/* stack size = 0 */
 141               	.L__stack_usage = 0
 122:quantum/matrix.c ****     return MATRIX_COLS;
 142               		.loc 1 122 5 view .LVU14
 123:quantum/matrix.c **** }
 143               		.loc 1 123 1 is_stmt 0 view .LVU15
 144 0000 8FE0      		ldi r24,lo8(15)
 145               	/* epilogue start */
 146 0002 0895      		ret
 147               		.cfi_endproc
 148               	.LFE17:
 150               		.section	.text.matrix_init,"ax",@progbits
 151               	.global	matrix_init
 153               	matrix_init:
 154               	.LFB18:
 124:quantum/matrix.c **** 
 125:quantum/matrix.c **** // void matrix_power_up(void) {
 126:quantum/matrix.c **** // #if (DIODE_DIRECTION == COL2ROW)
 127:quantum/matrix.c **** //     for (int8_t r = MATRIX_ROWS - 1; r >= 0; --r) {
 128:quantum/matrix.c **** //         /* DDRxn */
 129:quantum/matrix.c **** //         _SFR_IO8((row_pins[r] >> 4) + 1) |= _BV(row_pins[r] & 0xF);
 130:quantum/matrix.c **** //         toggle_row(r);
 131:quantum/matrix.c **** //     }
 132:quantum/matrix.c **** //     for (int8_t c = MATRIX_COLS - 1; c >= 0; --c) {
 133:quantum/matrix.c **** //         /* PORTxn */
 134:quantum/matrix.c **** //         _SFR_IO8((col_pins[c] >> 4) + 2) |= _BV(col_pins[c] & 0xF);
 135:quantum/matrix.c **** //     }
 136:quantum/matrix.c **** // #else
 137:quantum/matrix.c **** //     for (int8_t c = MATRIX_COLS - 1; c >= 0; --c) {
 138:quantum/matrix.c **** //         /* DDRxn */
 139:quantum/matrix.c **** //         _SFR_IO8((col_pins[c] >> 4) + 1) |= _BV(col_pins[c] & 0xF);
 140:quantum/matrix.c **** //         toggle_col(c);
 141:quantum/matrix.c **** //     }
 142:quantum/matrix.c **** //     for (int8_t r = MATRIX_ROWS - 1; r >= 0; --r) {
 143:quantum/matrix.c **** //         /* PORTxn */
 144:quantum/matrix.c **** //         _SFR_IO8((row_pins[r] >> 4) + 2) |= _BV(row_pins[r] & 0xF);
 145:quantum/matrix.c **** //     }
 146:quantum/matrix.c **** // #endif
 147:quantum/matrix.c **** // }
 148:quantum/matrix.c **** 
 149:quantum/matrix.c **** void matrix_init(void) {
 155               		.loc 1 149 24 is_stmt 1 view -0
 156               		.cfi_startproc
 157 0000 CF93      		push r28
 158               	.LCFI0:
 159               		.cfi_def_cfa_offset 3
 160               		.cfi_offset 28, -2
 161 0002 DF93      		push r29
 162               	.LCFI1:
 163               		.cfi_def_cfa_offset 4
 164               		.cfi_offset 29, -3
 165               	/* prologue: function */
 166               	/* frame size = 0 */
 167               	/* stack size = 2 */
 168               	.L__stack_usage = 2
 150:quantum/matrix.c **** 
 151:quantum/matrix.c ****     // To use PORTF disable JTAG with writing JTD bit twice within four cycles.
 152:quantum/matrix.c ****     #if  (defined(__AVR_AT90USB1286__) || defined(__AVR_AT90USB1287__) || defined(__AVR_ATmega32U4_
 153:quantum/matrix.c ****         MCUCR |= _BV(JTD);
 169               		.loc 1 153 9 view .LVU17
 170               		.loc 1 153 15 is_stmt 0 view .LVU18
 171 0004 85B7      		in r24,0x35
 172 0006 8068      		ori r24,lo8(-128)
 173 0008 85BF      		out 0x35,r24
 154:quantum/matrix.c ****         MCUCR |= _BV(JTD);
 174               		.loc 1 154 9 is_stmt 1 view .LVU19
 175               		.loc 1 154 15 is_stmt 0 view .LVU20
 176 000a 85B7      		in r24,0x35
 177 000c 8068      		ori r24,lo8(-128)
 178 000e 85BF      		out 0x35,r24
 155:quantum/matrix.c ****     #endif
 156:quantum/matrix.c **** 
 157:quantum/matrix.c ****     // initialize row and col
 158:quantum/matrix.c **** #if (DIODE_DIRECTION == COL2ROW)
 159:quantum/matrix.c ****     unselect_rows();
 179               		.loc 1 159 5 is_stmt 1 view .LVU21
 180               	.LBB25:
 181               	.LBI25:
 160:quantum/matrix.c ****     init_cols();
 161:quantum/matrix.c **** #else // ROW2COL
 162:quantum/matrix.c ****     unselect_cols();
 163:quantum/matrix.c ****     init_rows();
 164:quantum/matrix.c **** #endif
 165:quantum/matrix.c **** 
 166:quantum/matrix.c ****     // initialize matrix state: all keys off
 167:quantum/matrix.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
 168:quantum/matrix.c ****         matrix[i] = 0;
 169:quantum/matrix.c ****         matrix_raw[i] = 0;
 170:quantum/matrix.c ****         matrix_debouncing[i] = 0;
 171:quantum/matrix.c ****     }
 172:quantum/matrix.c **** 
 173:quantum/matrix.c ****     matrix_init_quantum();
 174:quantum/matrix.c **** }
 175:quantum/matrix.c **** 
 176:quantum/matrix.c **** uint8_t matrix_scan(void)
 177:quantum/matrix.c **** {
 178:quantum/matrix.c **** 
 179:quantum/matrix.c **** #if (DIODE_DIRECTION == COL2ROW)
 180:quantum/matrix.c **** 
 181:quantum/matrix.c ****     // Set row, read cols
 182:quantum/matrix.c ****     for (uint8_t current_row = 0; current_row < MATRIX_ROWS; current_row++) {
 183:quantum/matrix.c **** #       if (DEBOUNCING_DELAY > 0)
 184:quantum/matrix.c ****             bool matrix_changed = read_cols_on_row(matrix_debouncing, current_row);
 185:quantum/matrix.c **** 
 186:quantum/matrix.c ****             if (matrix_changed) {
 187:quantum/matrix.c ****                 debouncing = true;
 188:quantum/matrix.c ****                 debouncing_time = timer_read();
 189:quantum/matrix.c ****             }
 190:quantum/matrix.c **** 
 191:quantum/matrix.c **** #       else
 192:quantum/matrix.c ****             read_cols_on_row(matrix, current_row);
 193:quantum/matrix.c **** #       endif
 194:quantum/matrix.c **** 
 195:quantum/matrix.c ****     }
 196:quantum/matrix.c **** 
 197:quantum/matrix.c **** #else // ROW2COL
 198:quantum/matrix.c **** 
 199:quantum/matrix.c ****     // Set col, read rows
 200:quantum/matrix.c ****     for (uint8_t current_col = 0; current_col < MATRIX_COLS; current_col++) {
 201:quantum/matrix.c **** #       if (DEBOUNCING_DELAY > 0)
 202:quantum/matrix.c ****             bool matrix_changed = read_rows_on_col(matrix_debouncing, current_col);
 203:quantum/matrix.c ****             if (matrix_changed) {
 204:quantum/matrix.c ****                 debouncing = true;
 205:quantum/matrix.c ****                 debouncing_time = timer_read();
 206:quantum/matrix.c ****             }
 207:quantum/matrix.c **** #       else
 208:quantum/matrix.c ****              read_rows_on_col(matrix, current_col);
 209:quantum/matrix.c **** #       endif
 210:quantum/matrix.c **** 
 211:quantum/matrix.c ****     }
 212:quantum/matrix.c **** 
 213:quantum/matrix.c **** #endif
 214:quantum/matrix.c **** 
 215:quantum/matrix.c **** #   if (DEBOUNCING_DELAY > 0)
 216:quantum/matrix.c ****         if (debouncing && (timer_elapsed(debouncing_time) > DEBOUNCING_DELAY)) {
 217:quantum/matrix.c ****             for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 218:quantum/matrix.c ****                 matrix[i] = matrix_debouncing[i];
 219:quantum/matrix.c ****             }
 220:quantum/matrix.c ****             debouncing = false;
 221:quantum/matrix.c ****         }
 222:quantum/matrix.c **** #   endif
 223:quantum/matrix.c **** 
 224:quantum/matrix.c ****     matrix_scan_quantum();
 225:quantum/matrix.c ****     return 1;
 226:quantum/matrix.c **** }
 227:quantum/matrix.c **** 
 228:quantum/matrix.c **** bool matrix_is_modified(void)
 229:quantum/matrix.c **** {
 230:quantum/matrix.c **** #if (DEBOUNCING_DELAY > 0)
 231:quantum/matrix.c ****     if (debouncing) return false;
 232:quantum/matrix.c **** #endif
 233:quantum/matrix.c ****     return true;
 234:quantum/matrix.c **** }
 235:quantum/matrix.c **** 
 236:quantum/matrix.c **** inline
 237:quantum/matrix.c **** bool matrix_is_on(uint8_t row, uint8_t col)
 238:quantum/matrix.c **** {
 239:quantum/matrix.c ****     return (matrix[row] & ((matrix_row_t)1<col));
 240:quantum/matrix.c **** }
 241:quantum/matrix.c **** 
 242:quantum/matrix.c **** inline
 243:quantum/matrix.c **** matrix_row_t matrix_get_row(uint8_t row)
 244:quantum/matrix.c **** {
 245:quantum/matrix.c ****     // Matrix mask lets you disable switches in the returned matrix data. For example, if you have 
 246:quantum/matrix.c ****     // switch blocker installed and the switch is always pressed.
 247:quantum/matrix.c **** #ifdef MATRIX_MASKED
 248:quantum/matrix.c ****     return matrix[row] & matrix_mask[row];
 249:quantum/matrix.c **** #else
 250:quantum/matrix.c ****     return matrix[row];
 251:quantum/matrix.c **** #endif
 252:quantum/matrix.c **** }
 253:quantum/matrix.c **** 
 254:quantum/matrix.c **** void matrix_print(void)
 255:quantum/matrix.c **** {
 256:quantum/matrix.c ****     print_matrix_header();
 257:quantum/matrix.c **** 
 258:quantum/matrix.c ****     for (uint8_t row = 0; row < MATRIX_ROWS; row++) {
 259:quantum/matrix.c ****         phex(row); print(": ");
 260:quantum/matrix.c ****         print_matrix_row(row);
 261:quantum/matrix.c ****         print("\n");
 262:quantum/matrix.c ****     }
 263:quantum/matrix.c **** }
 264:quantum/matrix.c **** 
 265:quantum/matrix.c **** uint8_t matrix_key_count(void)
 266:quantum/matrix.c **** {
 267:quantum/matrix.c ****     uint8_t count = 0;
 268:quantum/matrix.c ****     for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 269:quantum/matrix.c ****         count += matrix_bitpop(i);
 270:quantum/matrix.c ****     }
 271:quantum/matrix.c ****     return count;
 272:quantum/matrix.c **** }
 273:quantum/matrix.c **** 
 274:quantum/matrix.c **** 
 275:quantum/matrix.c **** 
 276:quantum/matrix.c **** #if (DIODE_DIRECTION == COL2ROW)
 277:quantum/matrix.c **** 
 278:quantum/matrix.c **** static void init_cols(void)
 279:quantum/matrix.c **** {
 280:quantum/matrix.c ****     for(uint8_t x = 0; x < MATRIX_COLS; x++) {
 281:quantum/matrix.c ****         uint8_t pin = col_pins[x];
 282:quantum/matrix.c ****         _SFR_IO8((pin >> 4) + 1) &= ~_BV(pin & 0xF); // IN
 283:quantum/matrix.c ****         _SFR_IO8((pin >> 4) + 2) |=  _BV(pin & 0xF); // HI
 284:quantum/matrix.c ****     }
 285:quantum/matrix.c **** }
 286:quantum/matrix.c **** 
 287:quantum/matrix.c **** static bool read_cols_on_row(matrix_row_t current_matrix[], uint8_t current_row)
 288:quantum/matrix.c **** {
 289:quantum/matrix.c ****     // Store last value of row prior to reading
 290:quantum/matrix.c ****     matrix_row_t last_row_value = current_matrix[current_row];
 291:quantum/matrix.c **** 
 292:quantum/matrix.c ****     // Clear data in matrix row
 293:quantum/matrix.c ****     current_matrix[current_row] = 0;
 294:quantum/matrix.c **** 
 295:quantum/matrix.c ****     // Select row and wait for row selecton to stabilize
 296:quantum/matrix.c ****     select_row(current_row);
 297:quantum/matrix.c ****     wait_us(30);
 298:quantum/matrix.c **** 
 299:quantum/matrix.c ****     // For each col...
 300:quantum/matrix.c ****     for(uint8_t col_index = 0; col_index < MATRIX_COLS; col_index++) {
 301:quantum/matrix.c **** 
 302:quantum/matrix.c ****         // Select the col pin to read (active low)
 303:quantum/matrix.c ****         uint8_t pin = col_pins[col_index];
 304:quantum/matrix.c ****         uint8_t pin_state = (_SFR_IO8(pin >> 4) & _BV(pin & 0xF));
 305:quantum/matrix.c **** 
 306:quantum/matrix.c ****         // Populate the matrix row with the state of the col pin
 307:quantum/matrix.c ****         current_matrix[current_row] |=  pin_state ? 0 : (ROW_SHIFTER << col_index);
 308:quantum/matrix.c ****     }
 309:quantum/matrix.c **** 
 310:quantum/matrix.c ****     // Unselect row
 311:quantum/matrix.c ****     unselect_row(current_row);
 312:quantum/matrix.c **** 
 313:quantum/matrix.c ****     return (last_row_value != current_matrix[current_row]);
 314:quantum/matrix.c **** }
 315:quantum/matrix.c **** 
 316:quantum/matrix.c **** static void select_row(uint8_t row)
 317:quantum/matrix.c **** {
 318:quantum/matrix.c ****     uint8_t pin = row_pins[row];
 319:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 1) |=  _BV(pin & 0xF); // OUT
 320:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 2) &= ~_BV(pin & 0xF); // LOW
 321:quantum/matrix.c **** }
 322:quantum/matrix.c **** 
 323:quantum/matrix.c **** static void unselect_row(uint8_t row)
 324:quantum/matrix.c **** {
 325:quantum/matrix.c ****     uint8_t pin = row_pins[row];
 326:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 1) &= ~_BV(pin & 0xF); // IN
 327:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 2) |=  _BV(pin & 0xF); // HI
 328:quantum/matrix.c **** }
 329:quantum/matrix.c **** 
 330:quantum/matrix.c **** static void unselect_rows(void)
 182               		.loc 1 330 13 view .LVU22
 183               	.LBE25:
 331:quantum/matrix.c **** {
 332:quantum/matrix.c ****     for(uint8_t x = 0; x < MATRIX_ROWS; x++) {
 184               		.loc 1 332 5 view .LVU23
 185               	.LBB28:
 186               	.LBB26:
 187               		.loc 1 332 9 view .LVU24
 188               	.LVL4:
 189               		.loc 1 332 24 view .LVU25
 190 0010 A0E0      		ldi r26,lo8(row_pins)
 191 0012 B0E0      		ldi r27,hi8(row_pins)
 192 0014 40E0      		ldi r20,lo8(row_pins+5)
 193 0016 50E0      		ldi r21,hi8(row_pins+5)
 194               	.LBB27:
 333:quantum/matrix.c ****         uint8_t pin = row_pins[x];
 334:quantum/matrix.c ****         _SFR_IO8((pin >> 4) + 1) &= ~_BV(pin & 0xF); // IN
 195               		.loc 1 334 38 is_stmt 0 view .LVU26
 196 0018 C1E0      		ldi r28,lo8(1)
 197 001a D0E0      		ldi r29,0
 198               	.LVL5:
 199               	.L10:
 333:quantum/matrix.c ****         uint8_t pin = row_pins[x];
 200               		.loc 1 333 9 is_stmt 1 view .LVU27
 333:quantum/matrix.c ****         uint8_t pin = row_pins[x];
 201               		.loc 1 333 17 is_stmt 0 view .LVU28
 202 001c 8D91      		ld r24,X+
 203               	.LVL6:
 204               		.loc 1 334 9 is_stmt 1 view .LVU29
 205               		.loc 1 334 34 is_stmt 0 view .LVU30
 206 001e E82F      		mov r30,r24
 207 0020 E295      		swap r30
 208 0022 EF70      		andi r30,lo8(15)
 209 0024 F0E0      		ldi r31,0
 210 0026 61A1      		ldd r22,Z+33
 211               		.loc 1 334 38 view .LVU31
 212 0028 8F70      		andi r24,lo8(15)
 213               	.LVL7:
 214               		.loc 1 334 38 view .LVU32
 215 002a 9E01      		movw r18,r28
 216 002c 00C0      		rjmp 2f
 217               		1:
 218 002e 220F      		lsl r18
 219               		2:
 220 0030 8A95      		dec r24
 221 0032 02F4      		brpl 1b
 222               		.loc 1 334 34 view .LVU33
 223 0034 922F      		mov r25,r18
 224 0036 9095      		com r25
 225 0038 9623      		and r25,r22
 226 003a 91A3      		std Z+33,r25
 227               	.LVL8:
 335:quantum/matrix.c ****         _SFR_IO8((pin >> 4) + 2) |=  _BV(pin & 0xF); // HI
 228               		.loc 1 335 9 is_stmt 1 view .LVU34
 229               		.loc 1 335 34 is_stmt 0 view .LVU35
 230 003c 82A1      		ldd r24,Z+34
 231 003e 822B      		or r24,r18
 232 0040 82A3      		std Z+34,r24
 233               	.LBE27:
 332:quantum/matrix.c ****         uint8_t pin = row_pins[x];
 234               		.loc 1 332 41 is_stmt 1 view .LVU36
 235               	.LVL9:
 332:quantum/matrix.c ****         uint8_t pin = row_pins[x];
 236               		.loc 1 332 24 view .LVU37
 332:quantum/matrix.c ****         uint8_t pin = row_pins[x];
 237               		.loc 1 332 5 is_stmt 0 view .LVU38
 238 0042 4A17      		cp r20,r26
 239 0044 5B07      		cpc r21,r27
 240 0046 01F4      		brne .L10
 241 0048 A0E0      		ldi r26,lo8(col_pins)
 242 004a B0E0      		ldi r27,hi8(col_pins)
 243               	.LVL10:
 332:quantum/matrix.c ****         uint8_t pin = row_pins[x];
 244               		.loc 1 332 5 view .LVU39
 245               	.LBE26:
 246               	.LBE28:
 247               	.LBB29:
 248               	.LBB30:
 249               	.LBB31:
 282:quantum/matrix.c ****         _SFR_IO8((pin >> 4) + 2) |=  _BV(pin & 0xF); // HI
 250               		.loc 1 282 38 view .LVU40
 251 004c 61E0      		ldi r22,lo8(1)
 252 004e 70E0      		ldi r23,0
 253               	.L11:
 254               	.LVL11:
 281:quantum/matrix.c ****         _SFR_IO8((pin >> 4) + 1) &= ~_BV(pin & 0xF); // IN
 255               		.loc 1 281 9 is_stmt 1 view .LVU41
 281:quantum/matrix.c ****         _SFR_IO8((pin >> 4) + 1) &= ~_BV(pin & 0xF); // IN
 256               		.loc 1 281 17 is_stmt 0 view .LVU42
 257 0050 8D91      		ld r24,X+
 258               	.LVL12:
 282:quantum/matrix.c ****         _SFR_IO8((pin >> 4) + 2) |=  _BV(pin & 0xF); // HI
 259               		.loc 1 282 9 is_stmt 1 view .LVU43
 282:quantum/matrix.c ****         _SFR_IO8((pin >> 4) + 2) |=  _BV(pin & 0xF); // HI
 260               		.loc 1 282 34 is_stmt 0 view .LVU44
 261 0052 E82F      		mov r30,r24
 262 0054 E295      		swap r30
 263 0056 EF70      		andi r30,lo8(15)
 264 0058 F0E0      		ldi r31,0
 265 005a 41A1      		ldd r20,Z+33
 282:quantum/matrix.c ****         _SFR_IO8((pin >> 4) + 2) |=  _BV(pin & 0xF); // HI
 266               		.loc 1 282 38 view .LVU45
 267 005c 8F70      		andi r24,lo8(15)
 268               	.LVL13:
 282:quantum/matrix.c ****         _SFR_IO8((pin >> 4) + 2) |=  _BV(pin & 0xF); // HI
 269               		.loc 1 282 38 view .LVU46
 270 005e 9B01      		movw r18,r22
 271 0060 00C0      		rjmp 2f
 272               		1:
 273 0062 220F      		lsl r18
 274               		2:
 275 0064 8A95      		dec r24
 276 0066 02F4      		brpl 1b
 282:quantum/matrix.c ****         _SFR_IO8((pin >> 4) + 2) |=  _BV(pin & 0xF); // HI
 277               		.loc 1 282 34 view .LVU47
 278 0068 922F      		mov r25,r18
 279 006a 9095      		com r25
 280 006c 9423      		and r25,r20
 281 006e 91A3      		std Z+33,r25
 282               	.LVL14:
 283:quantum/matrix.c ****     }
 283               		.loc 1 283 9 is_stmt 1 view .LVU48
 283:quantum/matrix.c ****     }
 284               		.loc 1 283 34 is_stmt 0 view .LVU49
 285 0070 82A1      		ldd r24,Z+34
 286 0072 822B      		or r24,r18
 287 0074 82A3      		std Z+34,r24
 288               	.LBE31:
 280:quantum/matrix.c ****         uint8_t pin = col_pins[x];
 289               		.loc 1 280 41 is_stmt 1 view .LVU50
 290               	.LVL15:
 280:quantum/matrix.c ****         uint8_t pin = col_pins[x];
 291               		.loc 1 280 24 view .LVU51
 280:quantum/matrix.c ****         uint8_t pin = col_pins[x];
 292               		.loc 1 280 5 is_stmt 0 view .LVU52
 293 0076 80E0      		ldi r24,hi8(col_pins+15)
 294 0078 A030      		cpi r26,lo8(col_pins+15)
 295 007a B807      		cpc r27,r24
 296 007c 01F4      		brne .L11
 297               	.LVL16:
 280:quantum/matrix.c ****         uint8_t pin = col_pins[x];
 298               		.loc 1 280 5 view .LVU53
 299               	.LBE30:
 300               	.LBE29:
 301               	.LBB32:
 168:quantum/matrix.c ****         matrix_raw[i] = 0;
 302               		.loc 1 168 9 is_stmt 1 view .LVU54
 168:quantum/matrix.c ****         matrix_raw[i] = 0;
 303               		.loc 1 168 19 is_stmt 0 view .LVU55
 304 007e 1092 0000 		sts matrix+1,__zero_reg__
 305 0082 1092 0000 		sts matrix,__zero_reg__
 169:quantum/matrix.c ****         matrix_debouncing[i] = 0;
 306               		.loc 1 169 9 is_stmt 1 view .LVU56
 170:quantum/matrix.c ****     }
 307               		.loc 1 170 9 view .LVU57
 170:quantum/matrix.c ****     }
 308               		.loc 1 170 30 is_stmt 0 view .LVU58
 309 0086 1092 0000 		sts matrix_debouncing+1,__zero_reg__
 310 008a 1092 0000 		sts matrix_debouncing,__zero_reg__
 167:quantum/matrix.c ****         matrix[i] = 0;
 311               		.loc 1 167 40 is_stmt 1 view .LVU59
 312               	.LVL17:
 167:quantum/matrix.c ****         matrix[i] = 0;
 313               		.loc 1 167 23 view .LVU60
 168:quantum/matrix.c ****         matrix_raw[i] = 0;
 314               		.loc 1 168 9 view .LVU61
 168:quantum/matrix.c ****         matrix_raw[i] = 0;
 315               		.loc 1 168 19 is_stmt 0 view .LVU62
 316 008e 1092 0000 		sts matrix+2+1,__zero_reg__
 317 0092 1092 0000 		sts matrix+2,__zero_reg__
 169:quantum/matrix.c ****         matrix_debouncing[i] = 0;
 318               		.loc 1 169 9 is_stmt 1 view .LVU63
 170:quantum/matrix.c ****     }
 319               		.loc 1 170 9 view .LVU64
 170:quantum/matrix.c ****     }
 320               		.loc 1 170 30 is_stmt 0 view .LVU65
 321 0096 1092 0000 		sts matrix_debouncing+2+1,__zero_reg__
 322 009a 1092 0000 		sts matrix_debouncing+2,__zero_reg__
 167:quantum/matrix.c ****         matrix[i] = 0;
 323               		.loc 1 167 40 is_stmt 1 view .LVU66
 324               	.LVL18:
 167:quantum/matrix.c ****         matrix[i] = 0;
 325               		.loc 1 167 23 view .LVU67
 168:quantum/matrix.c ****         matrix_raw[i] = 0;
 326               		.loc 1 168 9 view .LVU68
 168:quantum/matrix.c ****         matrix_raw[i] = 0;
 327               		.loc 1 168 19 is_stmt 0 view .LVU69
 328 009e 1092 0000 		sts matrix+4+1,__zero_reg__
 329 00a2 1092 0000 		sts matrix+4,__zero_reg__
 169:quantum/matrix.c ****         matrix_debouncing[i] = 0;
 330               		.loc 1 169 9 is_stmt 1 view .LVU70
 170:quantum/matrix.c ****     }
 331               		.loc 1 170 9 view .LVU71
 170:quantum/matrix.c ****     }
 332               		.loc 1 170 30 is_stmt 0 view .LVU72
 333 00a6 1092 0000 		sts matrix_debouncing+4+1,__zero_reg__
 334 00aa 1092 0000 		sts matrix_debouncing+4,__zero_reg__
 167:quantum/matrix.c ****         matrix[i] = 0;
 335               		.loc 1 167 40 is_stmt 1 view .LVU73
 336               	.LVL19:
 167:quantum/matrix.c ****         matrix[i] = 0;
 337               		.loc 1 167 23 view .LVU74
 168:quantum/matrix.c ****         matrix_raw[i] = 0;
 338               		.loc 1 168 9 view .LVU75
 168:quantum/matrix.c ****         matrix_raw[i] = 0;
 339               		.loc 1 168 19 is_stmt 0 view .LVU76
 340 00ae 1092 0000 		sts matrix+6+1,__zero_reg__
 341 00b2 1092 0000 		sts matrix+6,__zero_reg__
 169:quantum/matrix.c ****         matrix_debouncing[i] = 0;
 342               		.loc 1 169 9 is_stmt 1 view .LVU77
 170:quantum/matrix.c ****     }
 343               		.loc 1 170 9 view .LVU78
 170:quantum/matrix.c ****     }
 344               		.loc 1 170 30 is_stmt 0 view .LVU79
 345 00b6 1092 0000 		sts matrix_debouncing+6+1,__zero_reg__
 346 00ba 1092 0000 		sts matrix_debouncing+6,__zero_reg__
 167:quantum/matrix.c ****         matrix[i] = 0;
 347               		.loc 1 167 40 is_stmt 1 view .LVU80
 348               	.LVL20:
 167:quantum/matrix.c ****         matrix[i] = 0;
 349               		.loc 1 167 23 view .LVU81
 168:quantum/matrix.c ****         matrix_raw[i] = 0;
 350               		.loc 1 168 9 view .LVU82
 168:quantum/matrix.c ****         matrix_raw[i] = 0;
 351               		.loc 1 168 19 is_stmt 0 view .LVU83
 352 00be 1092 0000 		sts matrix+8+1,__zero_reg__
 353 00c2 1092 0000 		sts matrix+8,__zero_reg__
 169:quantum/matrix.c ****         matrix_debouncing[i] = 0;
 354               		.loc 1 169 9 is_stmt 1 view .LVU84
 170:quantum/matrix.c ****     }
 355               		.loc 1 170 9 view .LVU85
 170:quantum/matrix.c ****     }
 356               		.loc 1 170 30 is_stmt 0 view .LVU86
 357 00c6 1092 0000 		sts matrix_debouncing+8+1,__zero_reg__
 358 00ca 1092 0000 		sts matrix_debouncing+8,__zero_reg__
 167:quantum/matrix.c ****         matrix[i] = 0;
 359               		.loc 1 167 40 is_stmt 1 view .LVU87
 360               	.LVL21:
 167:quantum/matrix.c ****         matrix[i] = 0;
 361               		.loc 1 167 23 view .LVU88
 362               	.LBE32:
 173:quantum/matrix.c **** }
 363               		.loc 1 173 5 view .LVU89
 364               	/* epilogue start */
 174:quantum/matrix.c **** 
 365               		.loc 1 174 1 is_stmt 0 view .LVU90
 366 00ce DF91      		pop r29
 367 00d0 CF91      		pop r28
 173:quantum/matrix.c **** }
 368               		.loc 1 173 5 view .LVU91
 369 00d2 0C94 0000 		jmp matrix_init_quantum
 370               	.LVL22:
 173:quantum/matrix.c **** }
 371               		.loc 1 173 5 view .LVU92
 372               		.cfi_endproc
 373               	.LFE18:
 375               		.section	.text.matrix_scan,"ax",@progbits
 376               	.global	matrix_scan
 378               	matrix_scan:
 379               	.LFB19:
 177:quantum/matrix.c **** 
 380               		.loc 1 177 1 is_stmt 1 view -0
 381               		.cfi_startproc
 382 0000 4F92      		push r4
 383               	.LCFI2:
 384               		.cfi_def_cfa_offset 3
 385               		.cfi_offset 4, -2
 386 0002 5F92      		push r5
 387               	.LCFI3:
 388               		.cfi_def_cfa_offset 4
 389               		.cfi_offset 5, -3
 390 0004 7F92      		push r7
 391               	.LCFI4:
 392               		.cfi_def_cfa_offset 5
 393               		.cfi_offset 7, -4
 394 0006 8F92      		push r8
 395               	.LCFI5:
 396               		.cfi_def_cfa_offset 6
 397               		.cfi_offset 8, -5
 398 0008 9F92      		push r9
 399               	.LCFI6:
 400               		.cfi_def_cfa_offset 7
 401               		.cfi_offset 9, -6
 402 000a AF92      		push r10
 403               	.LCFI7:
 404               		.cfi_def_cfa_offset 8
 405               		.cfi_offset 10, -7
 406 000c BF92      		push r11
 407               	.LCFI8:
 408               		.cfi_def_cfa_offset 9
 409               		.cfi_offset 11, -8
 410 000e CF92      		push r12
 411               	.LCFI9:
 412               		.cfi_def_cfa_offset 10
 413               		.cfi_offset 12, -9
 414 0010 DF92      		push r13
 415               	.LCFI10:
 416               		.cfi_def_cfa_offset 11
 417               		.cfi_offset 13, -10
 418 0012 EF92      		push r14
 419               	.LCFI11:
 420               		.cfi_def_cfa_offset 12
 421               		.cfi_offset 14, -11
 422 0014 FF92      		push r15
 423               	.LCFI12:
 424               		.cfi_def_cfa_offset 13
 425               		.cfi_offset 15, -12
 426 0016 0F93      		push r16
 427               	.LCFI13:
 428               		.cfi_def_cfa_offset 14
 429               		.cfi_offset 16, -13
 430 0018 1F93      		push r17
 431               	.LCFI14:
 432               		.cfi_def_cfa_offset 15
 433               		.cfi_offset 17, -14
 434 001a CF93      		push r28
 435               	.LCFI15:
 436               		.cfi_def_cfa_offset 16
 437               		.cfi_offset 28, -15
 438 001c DF93      		push r29
 439               	.LCFI16:
 440               		.cfi_def_cfa_offset 17
 441               		.cfi_offset 29, -16
 442               	/* prologue: function */
 443               	/* frame size = 0 */
 444               	/* stack size = 15 */
 445               	.L__stack_usage = 15
 182:quantum/matrix.c **** #       if (DEBOUNCING_DELAY > 0)
 446               		.loc 1 182 5 view .LVU94
 447               	.LBB46:
 182:quantum/matrix.c **** #       if (DEBOUNCING_DELAY > 0)
 448               		.loc 1 182 10 view .LVU95
 449               	.LVL23:
 182:quantum/matrix.c **** #       if (DEBOUNCING_DELAY > 0)
 450               		.loc 1 182 35 view .LVU96
 451 001e 90E0      		ldi r25,lo8(matrix_debouncing)
 452 0020 492E      		mov r4,r25
 453 0022 90E0      		ldi r25,hi8(matrix_debouncing)
 454 0024 592E      		mov r5,r25
 455 0026 20E0      		ldi r18,lo8(row_pins)
 456 0028 E22E      		mov r14,r18
 457 002a 20E0      		ldi r18,hi8(row_pins)
 458 002c F22E      		mov r15,r18
 459               	.LBB47:
 460               	.LBB48:
 461               	.LBB49:
 462               	.LBB50:
 463               	.LBB51:
 319:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 2) &= ~_BV(pin & 0xF); // LOW
 464               		.loc 1 319 34 is_stmt 0 view .LVU97
 465 002e 01E0      		ldi r16,lo8(1)
 466 0030 10E0      		ldi r17,0
 467               	.LBE51:
 468               	.LBE50:
 469               	.LBE49:
 470               	.LBE48:
 187:quantum/matrix.c ****                 debouncing_time = timer_read();
 471               		.loc 1 187 28 view .LVU98
 472 0032 9924      		clr r9
 473 0034 9394      		inc r9
 474               	.LVL24:
 475               	.L18:
 184:quantum/matrix.c **** 
 476               		.loc 1 184 13 is_stmt 1 view .LVU99
 477               	.LBB70:
 478               	.LBI48:
 287:quantum/matrix.c **** {
 479               		.loc 1 287 13 view .LVU100
 480               	.LBB67:
 290:quantum/matrix.c **** 
 481               		.loc 1 290 5 view .LVU101
 290:quantum/matrix.c **** 
 482               		.loc 1 290 18 is_stmt 0 view .LVU102
 483 0036 E201      		movw r28,r4
 484 0038 A990      		ld r10,Y+
 485 003a B990      		ld r11,Y+
 486 003c 2E01      		movw r4,r28
 487               	.LVL25:
 293:quantum/matrix.c **** 
 488               		.loc 1 293 5 is_stmt 1 view .LVU103
 489 003e DE01      		movw r26,r28
 293:quantum/matrix.c **** 
 490               		.loc 1 293 33 is_stmt 0 view .LVU104
 491 0040 1E92      		st -X,__zero_reg__
 492 0042 1E92      		st -X,__zero_reg__
 296:quantum/matrix.c ****     wait_us(30);
 493               		.loc 1 296 5 is_stmt 1 view .LVU105
 494               	.LVL26:
 495               	.LBB53:
 496               	.LBI50:
 316:quantum/matrix.c **** {
 497               		.loc 1 316 13 view .LVU106
 498               	.LBB52:
 318:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 1) |=  _BV(pin & 0xF); // OUT
 499               		.loc 1 318 5 view .LVU107
 318:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 1) |=  _BV(pin & 0xF); // OUT
 500               		.loc 1 318 13 is_stmt 0 view .LVU108
 501 0044 F701      		movw r30,r14
 502 0046 8191      		ld r24,Z+
 503 0048 7F01      		movw r14,r30
 504               	.LVL27:
 319:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 2) &= ~_BV(pin & 0xF); // LOW
 505               		.loc 1 319 5 is_stmt 1 view .LVU109
 319:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 2) &= ~_BV(pin & 0xF); // LOW
 506               		.loc 1 319 30 is_stmt 0 view .LVU110
 507 004a E82F      		mov r30,r24
 508 004c E295      		swap r30
 509 004e EF70      		andi r30,lo8(15)
 510 0050 F0E0      		ldi r31,0
 511 0052 91A1      		ldd r25,Z+33
 319:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 2) &= ~_BV(pin & 0xF); // LOW
 512               		.loc 1 319 34 view .LVU111
 513 0054 8F70      		andi r24,lo8(15)
 514               	.LVL28:
 319:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 2) &= ~_BV(pin & 0xF); // LOW
 515               		.loc 1 319 34 view .LVU112
 516 0056 9801      		movw r18,r16
 517 0058 00C0      		rjmp 2f
 518               		1:
 519 005a 220F      		lsl r18
 520               		2:
 521 005c 8A95      		dec r24
 522 005e 02F4      		brpl 1b
 319:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 2) &= ~_BV(pin & 0xF); // LOW
 523               		.loc 1 319 30 view .LVU113
 524 0060 892F      		mov r24,r25
 525 0062 822B      		or r24,r18
 526 0064 81A3      		std Z+33,r24
 527               	.LVL29:
 320:quantum/matrix.c **** }
 528               		.loc 1 320 5 is_stmt 1 view .LVU114
 320:quantum/matrix.c **** }
 529               		.loc 1 320 30 is_stmt 0 view .LVU115
 530 0066 82A1      		ldd r24,Z+34
 531 0068 822E      		mov r8,r18
 532 006a 8094      		com r8
 533 006c 8821      		and r24,r8
 534 006e 82A3      		std Z+34,r24
 535               	.LVL30:
 320:quantum/matrix.c **** }
 536               		.loc 1 320 30 view .LVU116
 537               	.LBE52:
 538               	.LBE53:
 297:quantum/matrix.c **** 
 539               		.loc 1 297 5 is_stmt 1 view .LVU117
 540               	.LBB54:
 541               	.LBI54:
 542               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** _delay_ms(double __ms)
 167:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	double __tmp ;
 169:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 188:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 189:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #else
 190:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	uint16_t __ticks;
 191:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 192:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 193:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks = 1;
 194:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 195:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	{
 196:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 197:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 198:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		while(__ticks)
 199:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		{
 200:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 			// wait 1/10 ms
 201:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 202:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 			__ticks --;
 203:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		}
 204:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		return;
 205:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	}
 206:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	else
 207:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 208:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 209:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 210:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** }
 211:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 212:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /**
 213:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \ingroup util_delay
 214:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 215:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 216:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 217:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 218:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 219:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 220:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 221:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 222:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 223:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 224:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    will not be informed about this case.
 225:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 226:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 227:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 228:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 229:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    no delay i.e., 0us.
 230:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 231:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Conversion of \c __us into clock cycles may not always result in
 232:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 233:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __us
 234:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    microseconds of delay.
 235:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 236:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 237:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 238:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 239:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    respectively.
 240:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 241:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \note
 242:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 243:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 244:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 245:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 246:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    with previous versions, the macro \c __DELAY_BACKWARD_COMPATIBLE__
 247:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 248:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 249:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 250:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 251:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    not available to the compiler then.
 252:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 253:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****  */
 254:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** void
 255:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** _delay_us(double __us)
 543               		.loc 2 255 1 view .LVU118
 544               	.LBB55:
 256:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** {
 257:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	double __tmp ;
 545               		.loc 2 257 2 view .LVU119
 258:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 259:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 260:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 261:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 546               		.loc 2 261 2 view .LVU120
 262:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 547               		.loc 2 262 2 view .LVU121
 263:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 548               		.loc 2 263 2 view .LVU122
 264:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 265:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 266:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 267:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 268:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 269:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 270:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 271:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#else
 272:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		//round up by default
 273:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 549               		.loc 2 273 3 view .LVU123
 550               		.loc 2 273 3 is_stmt 0 view .LVU124
 551               	.LBE55:
 552               	.LBE54:
 553               	.LBE67:
 554               	.LBE70:
 555               	.LBE47:
 556               	.LBE46:
 557               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h"
   1:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* Copyright (c) 2002,2007-2009 Michael Stumpf
   2:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
   3:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    Portions of documentation Copyright (c) 1990 - 1994
   4:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    The Regents of the University of California.
   5:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    All rights reserved.
   7:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
   8:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    Redistribution and use in source and binary forms, with or without
   9:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    modification, are permitted provided that the following conditions are met:
  10:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  11:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    * Redistributions of source code must retain the above copyright
  12:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      notice, this list of conditions and the following disclaimer.
  13:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  14:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    * Redistributions in binary form must reproduce the above copyright
  15:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      notice, this list of conditions and the following disclaimer in
  16:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      the documentation and/or other materials provided with the
  17:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      distribution.
  18:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  19:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    * Neither the name of the copyright holders nor the names of
  20:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      contributors may be used to endorse or promote products derived
  21:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      from this software without specific prior written permission.
  22:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  23:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  25:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  26:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  27:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  28:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  29:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  30:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  31:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  32:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  33:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   POSSIBILITY OF SUCH DAMAGE. */
  34:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* $Id: math.h 2554 2021-05-20 22:22:24Z joerg_wunsch $ */
  36:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  37:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /*
  38:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    math.h - mathematical functions
  39:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  40:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    Author : Michael Stumpf
  41:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****             Michael.Stumpf@t-online.de
  42:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  43:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    __ATTR_CONST__ added by marekm@linux.org.pl for functions
  44:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    that "do not examine any values except their arguments, and have
  45:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    no effects except the return value", for better optimization by gcc.
  46:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
  47:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #ifndef __MATH_H
  49:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define __MATH_H
  50:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  51:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** \file */
  52:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** \defgroup avr_math <math.h>: Mathematics
  53:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     \code #include <math.h> \endcode
  54:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  55:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     This header file declares basic mathematics constants and
  56:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     functions.
  57:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  58:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     \par Notes:
  59:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     - In order to access the functions declared herein, it is usually
  60:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       also required to additionally link against the library \c libm.a.
  61:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       See also the related \ref faq_libm "FAQ entry".
  62:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     - Math functions do not raise exceptions and do not change the
  63:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       \c errno variable. Therefore the majority of them are declared
  64:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       with const attribute, for better optimization by GCC.	*/
  65:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  66:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  67:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** \ingroup avr_math	*/
  68:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /*@{*/
  69:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a e.	*/
  71:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_E		2.7182818284590452354
  72:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  73:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The logarithm of the \a e to base 2. */
  74:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LOG2E		1.4426950408889634074	/* log_2 e */
  75:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  76:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The logarithm of the \a e to base 10. */
  77:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LOG10E	0.43429448190325182765	/* log_10 e */
  78:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The natural logarithm of the 2.	*/
  80:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LN2		0.69314718055994530942	/* log_e 2 */
  81:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  82:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The natural logarithm of the 10.	*/
  83:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LN10		2.30258509299404568402	/* log_e 10 */
  84:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a pi.	*/
  86:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_PI		3.14159265358979323846	/* pi */
  87:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  88:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a pi/2.	*/
  89:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_PI_2		1.57079632679489661923	/* pi/2 */
  90:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  91:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a pi/4.	*/
  92:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_PI_4		0.78539816339744830962	/* pi/4 */
  93:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  94:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 1/pi.	*/
  95:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_1_PI		0.31830988618379067154	/* 1/pi */
  96:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 2/pi.	*/
  98:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_2_PI		0.63661977236758134308	/* 2/pi */
  99:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 100:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 2/sqrt(pi).	*/
 101:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_2_SQRTPI	1.12837916709551257390	/* 2/sqrt(pi) */
 102:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The square root of 2.	*/
 104:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_SQRT2		1.41421356237309504880	/* sqrt(2) */
 105:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 106:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 1/sqrt(2).	*/
 107:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_SQRT1_2	0.70710678118654752440	/* 1/sqrt(2) */
 108:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 109:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** NAN constant.	*/
 110:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define NAN	__builtin_nan("")
 111:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 112:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** INFINITY constant.	*/
 113:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define INFINITY	__builtin_inf()
 114:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 116:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #ifndef __ATTR_CONST__
 117:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** # define __ATTR_CONST__ __attribute__((__const__))
 118:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #endif
 119:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 120:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #if __SIZEOF_DOUBLE__ == __SIZEOF_FLOAT__
 121:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* In order to provide aliases for double functions in the case where
 122:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    double = float, use declarations with according assembler name.
 123:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    That way:
 124:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    1) We do *NOT* use macros like
 125:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****          #define sin sinf
 126:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       because that would interfere with C++.  For example, if some class
 127:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       would implement a method 'sin', or if there was polymorthism for
 128:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       a function 'sin', then we would silently rename these to 'sinf'.
 129:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    2) We have proper prototypes, both for 'sin' and for 'sinf'.
 130:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    3) It is zero-overhead.  */
 131:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define __ASM_ALIAS(x) __asm(#x)
 132:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #else
 133:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* double != float: Provide double prototypes. */
 134:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define __ASM_ALIAS(x) /* empty */
 135:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #endif
 136:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #ifdef __cplusplus
 138:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** extern "C" {
 139:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #endif
 140:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 141:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 142:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The cosf() function returns the cosine of \a __x, measured in radians.
 143:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 144:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern float cosf (float __x);
 145:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern double cos (double __x) __ASM_ALIAS(cosf);		/**< The alias for cosf().	*/
 146:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 148:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The sinf() function returns the sine of \a __x, measured in radians.
 149:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 150:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern float sinf (float __x);
 151:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern double sin (double __x) __ASM_ALIAS(sinf);		/**< The alias for sinf().	*/
 152:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 153:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 154:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The tanf() function returns the tangent of \a __x, measured in radians.
 155:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 156:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern float tanf (float __x);
 157:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern double tan (double __x) __ASM_ALIAS(tanf);		/**< The alias for tanf().	*/
 158:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 159:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 160:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The fabsf() function computes the absolute value of a floating-point
 161:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     number \a __x.
 162:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 163:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** static inline float fabsf (float __x)
 164:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** {
 165:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     return __builtin_fabsf (__x);
 166:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** }
 167:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 168:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** static inline double fabs (double __x)
 169:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** {
 170:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     return __builtin_fabs (__x);
 558               		.loc 3 170 5 is_stmt 1 view .LVU125
 559               	.LBB75:
 560               	.LBB73:
 561               	.LBB71:
 562               	.LBB68:
 563               	.LBB58:
 564               	.LBB56:
 274:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 275:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 276:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 565               		.loc 2 276 2 view .LVU126
 566 0070 80EA      		ldi r24,lo8(-96)
 567 0072 8A95      	1:	dec r24
 568 0074 01F4      		brne 1b
 569               	.LVL31:
 570               		.loc 2 276 2 is_stmt 0 view .LVU127
 571               	.LBE56:
 572               	.LBE58:
 300:quantum/matrix.c **** 
 573               		.loc 1 300 5 is_stmt 1 view .LVU128
 574               	.LBB59:
 300:quantum/matrix.c **** 
 575               		.loc 1 300 9 view .LVU129
 300:quantum/matrix.c **** 
 576               		.loc 1 300 32 view .LVU130
 577 0076 80E0      		ldi r24,lo8(col_pins)
 578 0078 C82E      		mov r12,r24
 579 007a 80E0      		ldi r24,hi8(col_pins)
 580 007c D82E      		mov r13,r24
 581               	.LBE59:
 582               	.LBB62:
 583               	.LBB57:
 584               		.loc 2 276 2 is_stmt 0 view .LVU131
 585 007e 90E0      		ldi r25,0
 586 0080 80E0      		ldi r24,0
 587               	.LVL32:
 588               	.L16:
 589               		.loc 2 276 2 view .LVU132
 590               	.LBE57:
 591               	.LBE62:
 592               	.LBB63:
 593               	.LBB60:
 303:quantum/matrix.c ****         uint8_t pin_state = (_SFR_IO8(pin >> 4) & _BV(pin & 0xF));
 594               		.loc 1 303 9 is_stmt 1 view .LVU133
 303:quantum/matrix.c ****         uint8_t pin_state = (_SFR_IO8(pin >> 4) & _BV(pin & 0xF));
 595               		.loc 1 303 17 is_stmt 0 view .LVU134
 596 0082 E601      		movw r28,r12
 597 0084 7991      		ld r23,Y+
 598 0086 6E01      		movw r12,r28
 599               	.LVL33:
 304:quantum/matrix.c **** 
 600               		.loc 1 304 9 is_stmt 1 view .LVU135
 304:quantum/matrix.c **** 
 601               		.loc 1 304 30 is_stmt 0 view .LVU136
 602 0088 472F      		mov r20,r23
 603 008a 4295      		swap r20
 604 008c 4F70      		andi r20,lo8(15)
 605 008e 50E0      		ldi r21,0
 606 0090 EA01      		movw r28,r20
 607 0092 78A0      		ldd r7,Y+32
 608               	.LVL34:
 307:quantum/matrix.c ****     }
 609               		.loc 1 307 9 is_stmt 1 view .LVU137
 307:quantum/matrix.c ****     }
 610               		.loc 1 307 37 is_stmt 0 view .LVU138
 611 0094 4D91      		ld r20,X+
 612 0096 5C91      		ld r21,X
 613 0098 1197      		sbiw r26,1
 304:quantum/matrix.c **** 
 614               		.loc 1 304 51 view .LVU139
 615 009a 7F70      		andi r23,lo8(15)
 616               	.LVL35:
 304:quantum/matrix.c **** 
 617               		.loc 1 304 51 view .LVU140
 618 009c E801      		movw r28,r16
 619 009e 00C0      		rjmp 2f
 620               		1:
 621 00a0 CC0F      		lsl r28
 622 00a2 DD1F      		rol r29
 623               		2:
 624 00a4 7A95      		dec r23
 625 00a6 02F4      		brpl 1b
 626 00a8 BE01      		movw r22,r28
 304:quantum/matrix.c **** 
 627               		.loc 1 304 49 view .LVU141
 628 00aa 6721      		and r22,r7
 307:quantum/matrix.c ****     }
 629               		.loc 1 307 55 view .LVU142
 630 00ac 01F0      		breq .+2
 631 00ae 00C0      		rjmp .L22
 632 00b0 B801      		movw r22,r16
 633 00b2 082E      		mov r0,r24
 634 00b4 00C0      		rjmp 2f
 635               		1:
 636 00b6 660F      		lsl r22
 637 00b8 771F      		rol r23
 638               		2:
 639 00ba 0A94      		dec r0
 640 00bc 02F4      		brpl 1b
 641               	.LVL36:
 642               	.L15:
 307:quantum/matrix.c ****     }
 643               		.loc 1 307 37 view .LVU143
 644 00be 462B      		or r20,r22
 645 00c0 572B      		or r21,r23
 646 00c2 1196      		adiw r26,1
 647 00c4 5C93      		st X,r21
 648 00c6 4E93      		st -X,r20
 649               	.LBE60:
 300:quantum/matrix.c **** 
 650               		.loc 1 300 57 is_stmt 1 view .LVU144
 651               	.LVL37:
 300:quantum/matrix.c **** 
 652               		.loc 1 300 32 view .LVU145
 653 00c8 0196      		adiw r24,1
 654               	.LVL38:
 300:quantum/matrix.c **** 
 655               		.loc 1 300 5 is_stmt 0 view .LVU146
 656 00ca 8F30      		cpi r24,15
 657 00cc 9105      		cpc r25,__zero_reg__
 658 00ce 01F4      		brne .L16
 659               	.LBE63:
 311:quantum/matrix.c **** 
 660               		.loc 1 311 5 is_stmt 1 view .LVU147
 661               	.LVL39:
 662               	.LBB64:
 663               	.LBI64:
 323:quantum/matrix.c **** {
 664               		.loc 1 323 13 view .LVU148
 665               	.LBB65:
 325:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 1) &= ~_BV(pin & 0xF); // IN
 666               		.loc 1 325 5 view .LVU149
 326:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 2) |=  _BV(pin & 0xF); // HI
 667               		.loc 1 326 5 view .LVU150
 326:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 2) |=  _BV(pin & 0xF); // HI
 668               		.loc 1 326 30 is_stmt 0 view .LVU151
 669 00d0 81A1      		ldd r24,Z+33
 670               	.LVL40:
 326:quantum/matrix.c ****     _SFR_IO8((pin >> 4) + 2) |=  _BV(pin & 0xF); // HI
 671               		.loc 1 326 30 view .LVU152
 672 00d2 8822      		and r8,r24
 673 00d4 81A2      		std Z+33,r8
 674               	.LVL41:
 327:quantum/matrix.c **** }
 675               		.loc 1 327 5 is_stmt 1 view .LVU153
 327:quantum/matrix.c **** }
 676               		.loc 1 327 30 is_stmt 0 view .LVU154
 677 00d6 82A1      		ldd r24,Z+34
 678 00d8 282B      		or r18,r24
 679 00da 22A3      		std Z+34,r18
 680               	.LVL42:
 327:quantum/matrix.c **** }
 681               		.loc 1 327 30 view .LVU155
 682               	.LBE65:
 683               	.LBE64:
 313:quantum/matrix.c **** }
 684               		.loc 1 313 5 is_stmt 1 view .LVU156
 313:quantum/matrix.c **** }
 685               		.loc 1 313 5 is_stmt 0 view .LVU157
 686               	.LBE68:
 687               	.LBE71:
 186:quantum/matrix.c ****                 debouncing = true;
 688               		.loc 1 186 13 is_stmt 1 view .LVU158
 186:quantum/matrix.c ****                 debouncing = true;
 689               		.loc 1 186 16 is_stmt 0 view .LVU159
 690 00dc 8D91      		ld r24,X+
 691 00de 9C91      		ld r25,X
 692 00e0 A816      		cp r10,r24
 693 00e2 B906      		cpc r11,r25
 694 00e4 01F0      		breq .L17
 187:quantum/matrix.c ****                 debouncing_time = timer_read();
 695               		.loc 1 187 17 is_stmt 1 view .LVU160
 187:quantum/matrix.c ****                 debouncing_time = timer_read();
 696               		.loc 1 187 28 is_stmt 0 view .LVU161
 697 00e6 9092 0000 		sts debouncing,r9
 188:quantum/matrix.c ****             }
 698               		.loc 1 188 17 is_stmt 1 view .LVU162
 188:quantum/matrix.c ****             }
 699               		.loc 1 188 35 is_stmt 0 view .LVU163
 700 00ea 0E94 0000 		call timer_read
 701               	.LVL43:
 188:quantum/matrix.c ****             }
 702               		.loc 1 188 33 view .LVU164
 703 00ee 9093 0000 		sts debouncing_time+1,r25
 704 00f2 8093 0000 		sts debouncing_time,r24
 705               	.L17:
 706               	.LBE73:
 182:quantum/matrix.c **** #       if (DEBOUNCING_DELAY > 0)
 707               		.loc 1 182 62 is_stmt 1 discriminator 2 view .LVU165
 708               	.LVL44:
 182:quantum/matrix.c **** #       if (DEBOUNCING_DELAY > 0)
 709               		.loc 1 182 35 discriminator 2 view .LVU166
 182:quantum/matrix.c **** #       if (DEBOUNCING_DELAY > 0)
 710               		.loc 1 182 5 is_stmt 0 discriminator 2 view .LVU167
 711 00f6 D0E0      		ldi r29,lo8(matrix_debouncing+10)
 712 00f8 4D16      		cp r4,r29
 713 00fa D0E0      		ldi r29,hi8(matrix_debouncing+10)
 714 00fc 5D06      		cpc r5,r29
 715 00fe 01F0      		breq .+2
 716 0100 00C0      		rjmp .L18
 717               	.LBE75:
 216:quantum/matrix.c ****             for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 718               		.loc 1 216 9 is_stmt 1 view .LVU168
 216:quantum/matrix.c ****             for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 719               		.loc 1 216 12 is_stmt 0 view .LVU169
 720 0102 8091 0000 		lds r24,debouncing
 721 0106 8823      		tst r24
 722 0108 01F0      		breq .L20
 216:quantum/matrix.c ****             for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 723               		.loc 1 216 28 discriminator 1 view .LVU170
 724 010a 8091 0000 		lds r24,debouncing_time
 725 010e 9091 0000 		lds r25,debouncing_time+1
 726 0112 0E94 0000 		call timer_elapsed
 727               	.LVL45:
 216:quantum/matrix.c ****             for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 728               		.loc 1 216 24 discriminator 1 view .LVU171
 729 0116 0697      		sbiw r24,6
 730 0118 00F0      		brlo .L20
 731               	.LVL46:
 732               	.LBB76:
 218:quantum/matrix.c ****             }
 733               		.loc 1 218 17 is_stmt 1 view .LVU172
 218:quantum/matrix.c ****             }
 734               		.loc 1 218 27 is_stmt 0 view .LVU173
 735 011a 8091 0000 		lds r24,matrix_debouncing
 736 011e 9091 0000 		lds r25,matrix_debouncing+1
 737 0122 9093 0000 		sts matrix+1,r25
 738 0126 8093 0000 		sts matrix,r24
 217:quantum/matrix.c ****                 matrix[i] = matrix_debouncing[i];
 739               		.loc 1 217 50 is_stmt 1 view .LVU174
 740               	.LVL47:
 217:quantum/matrix.c ****                 matrix[i] = matrix_debouncing[i];
 741               		.loc 1 217 33 view .LVU175
 218:quantum/matrix.c ****             }
 742               		.loc 1 218 17 view .LVU176
 218:quantum/matrix.c ****             }
 743               		.loc 1 218 27 is_stmt 0 view .LVU177
 744 012a 8091 0000 		lds r24,matrix_debouncing+2
 745 012e 9091 0000 		lds r25,matrix_debouncing+2+1
 746 0132 9093 0000 		sts matrix+2+1,r25
 747 0136 8093 0000 		sts matrix+2,r24
 217:quantum/matrix.c ****                 matrix[i] = matrix_debouncing[i];
 748               		.loc 1 217 50 is_stmt 1 view .LVU178
 749               	.LVL48:
 217:quantum/matrix.c ****                 matrix[i] = matrix_debouncing[i];
 750               		.loc 1 217 33 view .LVU179
 218:quantum/matrix.c ****             }
 751               		.loc 1 218 17 view .LVU180
 218:quantum/matrix.c ****             }
 752               		.loc 1 218 27 is_stmt 0 view .LVU181
 753 013a 8091 0000 		lds r24,matrix_debouncing+4
 754 013e 9091 0000 		lds r25,matrix_debouncing+4+1
 755 0142 9093 0000 		sts matrix+4+1,r25
 756 0146 8093 0000 		sts matrix+4,r24
 217:quantum/matrix.c ****                 matrix[i] = matrix_debouncing[i];
 757               		.loc 1 217 50 is_stmt 1 view .LVU182
 758               	.LVL49:
 217:quantum/matrix.c ****                 matrix[i] = matrix_debouncing[i];
 759               		.loc 1 217 33 view .LVU183
 218:quantum/matrix.c ****             }
 760               		.loc 1 218 17 view .LVU184
 218:quantum/matrix.c ****             }
 761               		.loc 1 218 27 is_stmt 0 view .LVU185
 762 014a 8091 0000 		lds r24,matrix_debouncing+6
 763 014e 9091 0000 		lds r25,matrix_debouncing+6+1
 764 0152 9093 0000 		sts matrix+6+1,r25
 765 0156 8093 0000 		sts matrix+6,r24
 217:quantum/matrix.c ****                 matrix[i] = matrix_debouncing[i];
 766               		.loc 1 217 50 is_stmt 1 view .LVU186
 767               	.LVL50:
 217:quantum/matrix.c ****                 matrix[i] = matrix_debouncing[i];
 768               		.loc 1 217 33 view .LVU187
 218:quantum/matrix.c ****             }
 769               		.loc 1 218 17 view .LVU188
 218:quantum/matrix.c ****             }
 770               		.loc 1 218 27 is_stmt 0 view .LVU189
 771 015a 8091 0000 		lds r24,matrix_debouncing+8
 772 015e 9091 0000 		lds r25,matrix_debouncing+8+1
 773 0162 9093 0000 		sts matrix+8+1,r25
 774 0166 8093 0000 		sts matrix+8,r24
 217:quantum/matrix.c ****                 matrix[i] = matrix_debouncing[i];
 775               		.loc 1 217 50 is_stmt 1 view .LVU190
 776               	.LVL51:
 217:quantum/matrix.c ****                 matrix[i] = matrix_debouncing[i];
 777               		.loc 1 217 33 view .LVU191
 778               	.LBE76:
 220:quantum/matrix.c ****         }
 779               		.loc 1 220 13 view .LVU192
 220:quantum/matrix.c ****         }
 780               		.loc 1 220 24 is_stmt 0 view .LVU193
 781 016a 1092 0000 		sts debouncing,__zero_reg__
 782               	.LVL52:
 783               	.L20:
 224:quantum/matrix.c ****     return 1;
 784               		.loc 1 224 5 is_stmt 1 view .LVU194
 785 016e 0E94 0000 		call matrix_scan_quantum
 786               	.LVL53:
 225:quantum/matrix.c **** }
 787               		.loc 1 225 5 view .LVU195
 226:quantum/matrix.c **** 
 788               		.loc 1 226 1 is_stmt 0 view .LVU196
 789 0172 81E0      		ldi r24,lo8(1)
 790               	/* epilogue start */
 791 0174 DF91      		pop r29
 792 0176 CF91      		pop r28
 793 0178 1F91      		pop r17
 794 017a 0F91      		pop r16
 795 017c FF90      		pop r15
 796 017e EF90      		pop r14
 797               	.LVL54:
 226:quantum/matrix.c **** 
 798               		.loc 1 226 1 view .LVU197
 799 0180 DF90      		pop r13
 800 0182 CF90      		pop r12
 801 0184 BF90      		pop r11
 802 0186 AF90      		pop r10
 226:quantum/matrix.c **** 
 803               		.loc 1 226 1 view .LVU198
 804 0188 9F90      		pop r9
 805 018a 8F90      		pop r8
 806 018c 7F90      		pop r7
 807 018e 5F90      		pop r5
 808 0190 4F90      		pop r4
 809 0192 0895      		ret
 810               	.LVL55:
 811               	.L22:
 812               	.LBB77:
 813               	.LBB74:
 814               	.LBB72:
 815               	.LBB69:
 816               	.LBB66:
 817               	.LBB61:
 307:quantum/matrix.c ****     }
 818               		.loc 1 307 55 view .LVU199
 819 0194 70E0      		ldi r23,0
 820               	.LVL56:
 307:quantum/matrix.c ****     }
 821               		.loc 1 307 55 view .LVU200
 822 0196 60E0      		ldi r22,0
 823 0198 00C0      		rjmp .L15
 824               	.LBE61:
 825               	.LBE66:
 826               	.LBE69:
 827               	.LBE72:
 828               	.LBE74:
 829               	.LBE77:
 830               		.cfi_endproc
 831               	.LFE19:
 833               		.section	.text.matrix_is_modified,"ax",@progbits
 834               	.global	matrix_is_modified
 836               	matrix_is_modified:
 837               	.LFB20:
 229:quantum/matrix.c **** #if (DEBOUNCING_DELAY > 0)
 838               		.loc 1 229 1 is_stmt 1 view -0
 839               		.cfi_startproc
 840               	/* prologue: function */
 841               	/* frame size = 0 */
 842               	/* stack size = 0 */
 843               	.L__stack_usage = 0
 231:quantum/matrix.c **** #endif
 844               		.loc 1 231 5 view .LVU202
 231:quantum/matrix.c **** #endif
 845               		.loc 1 231 8 is_stmt 0 view .LVU203
 846 0000 9091 0000 		lds r25,debouncing
 234:quantum/matrix.c **** 
 847               		.loc 1 234 1 view .LVU204
 848 0004 81E0      		ldi r24,lo8(1)
 849 0006 8927      		eor r24,r25
 850               	/* epilogue start */
 851 0008 0895      		ret
 852               		.cfi_endproc
 853               	.LFE20:
 855               		.section	.text.matrix_is_on,"ax",@progbits
 856               	.global	matrix_is_on
 858               	matrix_is_on:
 859               	.LVL57:
 860               	.LFB21:
 238:quantum/matrix.c ****     return (matrix[row] & ((matrix_row_t)1<col));
 861               		.loc 1 238 1 is_stmt 1 view -0
 862               		.cfi_startproc
 863               	/* prologue: function */
 864               	/* frame size = 0 */
 865               	/* stack size = 0 */
 866               	.L__stack_usage = 0
 239:quantum/matrix.c **** }
 867               		.loc 1 239 5 view .LVU206
 239:quantum/matrix.c **** }
 868               		.loc 1 239 19 is_stmt 0 view .LVU207
 869 0000 E82F      		mov r30,r24
 870 0002 F0E0      		ldi r31,0
 871 0004 EE0F      		lsl r30
 872 0006 FF1F      		rol r31
 873               	.LVL58:
 239:quantum/matrix.c **** }
 874               		.loc 1 239 19 view .LVU208
 875 0008 E050      		subi r30,lo8(-(matrix))
 876 000a F040      		sbci r31,hi8(-(matrix))
 239:quantum/matrix.c **** }
 877               		.loc 1 239 43 view .LVU209
 878 000c 81E0      		ldi r24,lo8(1)
 879 000e 90E0      		ldi r25,0
 880 0010 6230      		cpi r22,lo8(2)
 881 0012 00F4      		brsh .L27
 882 0014 80E0      		ldi r24,0
 883               	.L27:
 239:quantum/matrix.c **** }
 884               		.loc 1 239 25 view .LVU210
 885 0016 2081      		ld r18,Z
 886 0018 3181      		ldd r19,Z+1
 887 001a 8223      		and r24,r18
 240:quantum/matrix.c **** 
 888               		.loc 1 240 1 view .LVU211
 889 001c 8170      		andi r24,lo8(1)
 890               	/* epilogue start */
 891 001e 0895      		ret
 892               		.cfi_endproc
 893               	.LFE21:
 895               		.section	.text.matrix_get_row,"ax",@progbits
 896               	.global	matrix_get_row
 898               	matrix_get_row:
 899               	.LVL59:
 900               	.LFB22:
 244:quantum/matrix.c ****     // Matrix mask lets you disable switches in the returned matrix data. For example, if you have 
 901               		.loc 1 244 1 is_stmt 1 view -0
 902               		.cfi_startproc
 903               	/* prologue: function */
 904               	/* frame size = 0 */
 905               	/* stack size = 0 */
 906               	.L__stack_usage = 0
 250:quantum/matrix.c **** #endif
 907               		.loc 1 250 5 view .LVU213
 250:quantum/matrix.c **** #endif
 908               		.loc 1 250 18 is_stmt 0 view .LVU214
 909 0000 E82F      		mov r30,r24
 910 0002 F0E0      		ldi r31,0
 911 0004 EE0F      		lsl r30
 912 0006 FF1F      		rol r31
 913               	.LVL60:
 250:quantum/matrix.c **** #endif
 914               		.loc 1 250 18 view .LVU215
 915 0008 E050      		subi r30,lo8(-(matrix))
 916 000a F040      		sbci r31,hi8(-(matrix))
 252:quantum/matrix.c **** 
 917               		.loc 1 252 1 view .LVU216
 918 000c 8081      		ld r24,Z
 919 000e 9181      		ldd r25,Z+1
 920               	/* epilogue start */
 921 0010 0895      		ret
 922               		.cfi_endproc
 923               	.LFE22:
 925               		.section	.text.matrix_print,"ax",@progbits
 926               	.global	matrix_print
 928               	matrix_print:
 929               	.LFB23:
 255:quantum/matrix.c ****     print_matrix_header();
 930               		.loc 1 255 1 is_stmt 1 view -0
 931               		.cfi_startproc
 932               	/* prologue: function */
 933               	/* frame size = 0 */
 934               	/* stack size = 0 */
 935               	.L__stack_usage = 0
 256:quantum/matrix.c **** 
 936               		.loc 1 256 26 view .LVU218
 258:quantum/matrix.c ****         phex(row); print(": ");
 937               		.loc 1 258 5 view .LVU219
 258:quantum/matrix.c ****         phex(row); print(": ");
 938               		.loc 1 258 10 view .LVU220
 939               	.LVL61:
 258:quantum/matrix.c ****         phex(row); print(": ");
 940               		.loc 1 258 27 view .LVU221
 941               	/* epilogue start */
 263:quantum/matrix.c **** 
 942               		.loc 1 263 1 is_stmt 0 view .LVU222
 943 0000 0895      		ret
 944               		.cfi_endproc
 945               	.LFE23:
 947               		.section	.text.matrix_key_count,"ax",@progbits
 948               	.global	matrix_key_count
 950               	matrix_key_count:
 951               	.LFB24:
 266:quantum/matrix.c ****     uint8_t count = 0;
 952               		.loc 1 266 1 is_stmt 1 view -0
 953               		.cfi_startproc
 954 0000 0F93      		push r16
 955               	.LCFI17:
 956               		.cfi_def_cfa_offset 3
 957               		.cfi_offset 16, -2
 958 0002 1F93      		push r17
 959               	.LCFI18:
 960               		.cfi_def_cfa_offset 4
 961               		.cfi_offset 17, -3
 962 0004 CF93      		push r28
 963               	.LCFI19:
 964               		.cfi_def_cfa_offset 5
 965               		.cfi_offset 28, -4
 966               	/* prologue: function */
 967               	/* frame size = 0 */
 968               	/* stack size = 3 */
 969               	.L__stack_usage = 3
 267:quantum/matrix.c ****     for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 970               		.loc 1 267 5 view .LVU224
 971               	.LVL62:
 268:quantum/matrix.c ****         count += matrix_bitpop(i);
 972               		.loc 1 268 5 view .LVU225
 973               	.LBB78:
 268:quantum/matrix.c ****         count += matrix_bitpop(i);
 974               		.loc 1 268 10 view .LVU226
 268:quantum/matrix.c ****         count += matrix_bitpop(i);
 975               		.loc 1 268 25 view .LVU227
 976 0006 00E0      		ldi r16,lo8(matrix)
 977 0008 10E0      		ldi r17,hi8(matrix)
 978               	.LBE78:
 267:quantum/matrix.c ****     for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 979               		.loc 1 267 13 is_stmt 0 view .LVU228
 980 000a C0E0      		ldi r28,0
 981               	.LVL63:
 982               	.L31:
 983               	.LBB79:
 269:quantum/matrix.c ****     }
 984               		.loc 1 269 9 is_stmt 1 discriminator 3 view .LVU229
 269:quantum/matrix.c ****     }
 985               		.loc 1 269 18 is_stmt 0 discriminator 3 view .LVU230
 986 000c F801      		movw r30,r16
 987 000e 8191      		ld r24,Z+
 988 0010 9191      		ld r25,Z+
 989 0012 8F01      		movw r16,r30
 990 0014 0E94 0000 		call bitpop16
 991               	.LVL64:
 269:quantum/matrix.c ****     }
 992               		.loc 1 269 15 discriminator 3 view .LVU231
 993 0018 C80F      		add r28,r24
 994               	.LVL65:
 268:quantum/matrix.c ****         count += matrix_bitpop(i);
 995               		.loc 1 268 42 is_stmt 1 discriminator 3 view .LVU232
 268:quantum/matrix.c ****         count += matrix_bitpop(i);
 996               		.loc 1 268 25 discriminator 3 view .LVU233
 268:quantum/matrix.c ****         count += matrix_bitpop(i);
 997               		.loc 1 268 5 is_stmt 0 discriminator 3 view .LVU234
 998 001a F0E0      		ldi r31,hi8(matrix+10)
 999 001c 0030      		cpi r16,lo8(matrix+10)
 1000 001e 1F07      		cpc r17,r31
 1001 0020 01F4      		brne .L31
 1002               	.LBE79:
 271:quantum/matrix.c **** }
 1003               		.loc 1 271 5 is_stmt 1 view .LVU235
 272:quantum/matrix.c **** 
 1004               		.loc 1 272 1 is_stmt 0 view .LVU236
 1005 0022 8C2F      		mov r24,r28
 1006               	/* epilogue start */
 1007 0024 CF91      		pop r28
 1008               	.LVL66:
 272:quantum/matrix.c **** 
 1009               		.loc 1 272 1 view .LVU237
 1010 0026 1F91      		pop r17
 1011 0028 0F91      		pop r16
 1012 002a 0895      		ret
 1013               		.cfi_endproc
 1014               	.LFE24:
 1016               		.section	.bss.matrix_debouncing,"aw",@nobits
 1019               	matrix_debouncing:
 1020 0000 0000 0000 		.zero	10
 1020      0000 0000 
 1020      0000 
 1021               		.section	.bss.matrix,"aw",@nobits
 1024               	matrix:
 1025 0000 0000 0000 		.zero	10
 1025      0000 0000 
 1025      0000 
 1026               		.section	.rodata.col_pins,"a"
 1029               	col_pins:
 1030 0000 30        		.byte	48
 1031 0001 31        		.byte	49
 1032 0002 32        		.byte	50
 1033 0003 33        		.byte	51
 1034 0004 F7        		.byte	-9
 1035 0005 90        		.byte	-112
 1036 0006 91        		.byte	-111
 1037 0007 92        		.byte	-110
 1038 0008 93        		.byte	-109
 1039 0009 95        		.byte	-107
 1040 000a 94        		.byte	-108
 1041 000b 37        		.byte	55
 1042 000c F6        		.byte	-10
 1043 000d F5        		.byte	-11
 1044 000e F4        		.byte	-12
 1045               		.section	.rodata.row_pins,"a"
 1048               	row_pins:
 1049 0000 34        		.byte	52
 1050 0001 35        		.byte	53
 1051 0002 36        		.byte	54
 1052 0003 66        		.byte	102
 1053 0004 67        		.byte	103
 1054               		.section	.bss.debouncing,"aw",@nobits
 1057               	debouncing:
 1058 0000 00        		.zero	1
 1059               		.section	.bss.debouncing_time,"aw",@nobits
 1062               	debouncing_time:
 1063 0000 0000      		.zero	2
 1064               		.text
 1065               	.Letext0:
 1066               		.file 4 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/stdint.h"
 1067               		.file 5 "./tmk_core/common/debug.h"
 1068               		.file 6 "./tmk_core/common/matrix.h"
 1069               		.file 7 "./tmk_core/common/timer.h"
 1070               		.file 8 "./tmk_core/common/util.h"
DEFINED SYMBOLS
                            *ABS*:00000000 matrix.c
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:2      *ABS*:0000003e __SP_H__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3      *ABS*:0000003d __SP_L__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:4      *ABS*:0000003f __SREG__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:6      *ABS*:00000001 __zero_reg__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:13     .text.matrix_init_user:00000000 matrix_init_user
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:16     .text.matrix_init_user:00000000 .Loc.0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:17     .text.matrix_init_user:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:22     .text.matrix_init_user:00000000 .Loc.1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:25     .text.matrix_init_user:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:13     .text.matrix_init_user:00000000 matrix_init_user.localalias.0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:32     .text.matrix_init_kb:00000000 matrix_init_kb
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:34     .text.matrix_init_kb:00000000 .Loc.2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:35     .text.matrix_init_kb:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:40     .text.matrix_init_kb:00000000 .Loc.3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:43     .text.matrix_init_kb:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:49     .text.matrix_init_quantum:00000000 matrix_init_quantum
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:51     .text.matrix_init_quantum:00000000 .Loc.4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:52     .text.matrix_init_quantum:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:57     .text.matrix_init_quantum:00000000 .Loc.5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:60     .text.matrix_init_quantum:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:66     .text.matrix_scan_user:00000000 matrix_scan_user
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:68     .text.matrix_scan_user:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:75     .text.matrix_scan_user:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:81     .text.matrix_scan_kb:00000000 matrix_scan_kb
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:83     .text.matrix_scan_kb:00000000 .Loc.6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:84     .text.matrix_scan_kb:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:89     .text.matrix_scan_kb:00000000 .Loc.7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:92     .text.matrix_scan_kb:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:98     .text.matrix_scan_quantum:00000000 matrix_scan_quantum
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:100    .text.matrix_scan_quantum:00000000 .Loc.8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:101    .text.matrix_scan_quantum:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:106    .text.matrix_scan_quantum:00000000 .Loc.9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:109    .text.matrix_scan_quantum:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:115    .text.matrix_rows:00000000 matrix_rows
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:117    .text.matrix_rows:00000000 .Loc.10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:118    .text.matrix_rows:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:123    .text.matrix_rows:00000000 .Loc.11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:124    .text.matrix_rows:00000000 .Loc.12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:128    .text.matrix_rows:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:134    .text.matrix_cols:00000000 matrix_cols
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:136    .text.matrix_cols:00000000 .Loc.13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:137    .text.matrix_cols:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:142    .text.matrix_cols:00000000 .Loc.14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:143    .text.matrix_cols:00000000 .Loc.15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:147    .text.matrix_cols:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:153    .text.matrix_init:00000000 matrix_init
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:155    .text.matrix_init:00000000 .Loc.16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:156    .text.matrix_init:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:169    .text.matrix_init:00000004 .Loc.17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:170    .text.matrix_init:00000004 .Loc.18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:174    .text.matrix_init:0000000a .Loc.19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:175    .text.matrix_init:0000000a .Loc.20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:179    .text.matrix_init:00000010 .Loc.21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:182    .text.matrix_init:00000010 .Loc.22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:184    .text.matrix_init:00000010 .Loc.23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:187    .text.matrix_init:00000010 .Loc.24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:189    .text.matrix_init:00000010 .Loc.25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1048   .rodata.row_pins:00000000 row_pins
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:195    .text.matrix_init:00000018 .Loc.26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:200    .text.matrix_init:0000001c .Loc.27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:201    .text.matrix_init:0000001c .Loc.28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:204    .text.matrix_init:0000001e .Loc.29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:205    .text.matrix_init:0000001e .Loc.30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:211    .text.matrix_init:00000028 .Loc.31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:214    .text.matrix_init:0000002a .Loc.32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:222    .text.matrix_init:00000034 .Loc.33
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:228    .text.matrix_init:0000003c .Loc.34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:229    .text.matrix_init:0000003c .Loc.35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:234    .text.matrix_init:00000042 .Loc.36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:236    .text.matrix_init:00000042 .Loc.37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:237    .text.matrix_init:00000042 .Loc.38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1029   .rodata.col_pins:00000000 col_pins
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:244    .text.matrix_init:0000004c .Loc.39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:250    .text.matrix_init:0000004c .Loc.40
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:255    .text.matrix_init:00000050 .Loc.41
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:256    .text.matrix_init:00000050 .Loc.42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:259    .text.matrix_init:00000052 .Loc.43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:260    .text.matrix_init:00000052 .Loc.44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:266    .text.matrix_init:0000005c .Loc.45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:269    .text.matrix_init:0000005e .Loc.46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:277    .text.matrix_init:00000068 .Loc.47
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:283    .text.matrix_init:00000070 .Loc.48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:284    .text.matrix_init:00000070 .Loc.49
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:289    .text.matrix_init:00000076 .Loc.50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:291    .text.matrix_init:00000076 .Loc.51
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:292    .text.matrix_init:00000076 .Loc.52
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:298    .text.matrix_init:0000007e .Loc.53
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:302    .text.matrix_init:0000007e .Loc.54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:303    .text.matrix_init:0000007e .Loc.55
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1024   .bss.matrix:00000000 matrix
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:306    .text.matrix_init:00000086 .Loc.56
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:307    .text.matrix_init:00000086 .Loc.57
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:308    .text.matrix_init:00000086 .Loc.58
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1019   .bss.matrix_debouncing:00000000 matrix_debouncing
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:311    .text.matrix_init:0000008e .Loc.59
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:313    .text.matrix_init:0000008e .Loc.60
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:314    .text.matrix_init:0000008e .Loc.61
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:315    .text.matrix_init:0000008e .Loc.62
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:318    .text.matrix_init:00000096 .Loc.63
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:319    .text.matrix_init:00000096 .Loc.64
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:320    .text.matrix_init:00000096 .Loc.65
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:323    .text.matrix_init:0000009e .Loc.66
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:325    .text.matrix_init:0000009e .Loc.67
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:326    .text.matrix_init:0000009e .Loc.68
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:327    .text.matrix_init:0000009e .Loc.69
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:330    .text.matrix_init:000000a6 .Loc.70
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:331    .text.matrix_init:000000a6 .Loc.71
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:332    .text.matrix_init:000000a6 .Loc.72
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:335    .text.matrix_init:000000ae .Loc.73
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:337    .text.matrix_init:000000ae .Loc.74
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:338    .text.matrix_init:000000ae .Loc.75
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:339    .text.matrix_init:000000ae .Loc.76
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:342    .text.matrix_init:000000b6 .Loc.77
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:343    .text.matrix_init:000000b6 .Loc.78
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:344    .text.matrix_init:000000b6 .Loc.79
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:347    .text.matrix_init:000000be .Loc.80
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:349    .text.matrix_init:000000be .Loc.81
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:350    .text.matrix_init:000000be .Loc.82
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:351    .text.matrix_init:000000be .Loc.83
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:354    .text.matrix_init:000000c6 .Loc.84
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:355    .text.matrix_init:000000c6 .Loc.85
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:356    .text.matrix_init:000000c6 .Loc.86
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:359    .text.matrix_init:000000ce .Loc.87
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:361    .text.matrix_init:000000ce .Loc.88
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:363    .text.matrix_init:000000ce .Loc.89
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:365    .text.matrix_init:000000ce .Loc.90
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:368    .text.matrix_init:000000d2 .Loc.91
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:371    .text.matrix_init:000000d6 .Loc.92
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:372    .text.matrix_init:000000d6 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:378    .text.matrix_scan:00000000 matrix_scan
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:380    .text.matrix_scan:00000000 .Loc.93
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:381    .text.matrix_scan:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:446    .text.matrix_scan:0000001e .Loc.94
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:448    .text.matrix_scan:0000001e .Loc.95
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:450    .text.matrix_scan:0000001e .Loc.96
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:464    .text.matrix_scan:0000002e .Loc.97
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:471    .text.matrix_scan:00000032 .Loc.98
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:476    .text.matrix_scan:00000036 .Loc.99
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:479    .text.matrix_scan:00000036 .Loc.100
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:481    .text.matrix_scan:00000036 .Loc.101
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:482    .text.matrix_scan:00000036 .Loc.102
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:488    .text.matrix_scan:0000003e .Loc.103
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:490    .text.matrix_scan:00000040 .Loc.104
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:493    .text.matrix_scan:00000044 .Loc.105
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:497    .text.matrix_scan:00000044 .Loc.106
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:499    .text.matrix_scan:00000044 .Loc.107
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:500    .text.matrix_scan:00000044 .Loc.108
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:505    .text.matrix_scan:0000004a .Loc.109
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:506    .text.matrix_scan:0000004a .Loc.110
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:512    .text.matrix_scan:00000054 .Loc.111
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:515    .text.matrix_scan:00000056 .Loc.112
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:523    .text.matrix_scan:00000060 .Loc.113
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:528    .text.matrix_scan:00000066 .Loc.114
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:529    .text.matrix_scan:00000066 .Loc.115
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:536    .text.matrix_scan:00000070 .Loc.116
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:539    .text.matrix_scan:00000070 .Loc.117
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:543    .text.matrix_scan:00000070 .Loc.118
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:545    .text.matrix_scan:00000070 .Loc.119
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:546    .text.matrix_scan:00000070 .Loc.120
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:547    .text.matrix_scan:00000070 .Loc.121
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:548    .text.matrix_scan:00000070 .Loc.122
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:549    .text.matrix_scan:00000070 .Loc.123
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:550    .text.matrix_scan:00000070 .Loc.124
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:558    .text.matrix_scan:00000070 .Loc.125
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:565    .text.matrix_scan:00000070 .Loc.126
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:570    .text.matrix_scan:00000076 .Loc.127
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:573    .text.matrix_scan:00000076 .Loc.128
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:575    .text.matrix_scan:00000076 .Loc.129
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:576    .text.matrix_scan:00000076 .Loc.130
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:584    .text.matrix_scan:0000007e .Loc.131
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:589    .text.matrix_scan:00000082 .Loc.132
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:594    .text.matrix_scan:00000082 .Loc.133
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:595    .text.matrix_scan:00000082 .Loc.134
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:600    .text.matrix_scan:00000088 .Loc.135
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:601    .text.matrix_scan:00000088 .Loc.136
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:609    .text.matrix_scan:00000094 .Loc.137
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:610    .text.matrix_scan:00000094 .Loc.138
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:614    .text.matrix_scan:0000009a .Loc.139
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:617    .text.matrix_scan:0000009c .Loc.140
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:627    .text.matrix_scan:000000aa .Loc.141
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:629    .text.matrix_scan:000000ac .Loc.142
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:630    .text.matrix_scan:000000ae L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:643    .text.matrix_scan:000000be .Loc.143
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:650    .text.matrix_scan:000000c8 .Loc.144
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:652    .text.matrix_scan:000000c8 .Loc.145
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:655    .text.matrix_scan:000000ca .Loc.146
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:660    .text.matrix_scan:000000d0 .Loc.147
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:664    .text.matrix_scan:000000d0 .Loc.148
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:666    .text.matrix_scan:000000d0 .Loc.149
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:667    .text.matrix_scan:000000d0 .Loc.150
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:668    .text.matrix_scan:000000d0 .Loc.151
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:671    .text.matrix_scan:000000d2 .Loc.152
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:675    .text.matrix_scan:000000d6 .Loc.153
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:676    .text.matrix_scan:000000d6 .Loc.154
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:681    .text.matrix_scan:000000dc .Loc.155
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:684    .text.matrix_scan:000000dc .Loc.156
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:685    .text.matrix_scan:000000dc .Loc.157
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:688    .text.matrix_scan:000000dc .Loc.158
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:689    .text.matrix_scan:000000dc .Loc.159
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:695    .text.matrix_scan:000000e6 .Loc.160
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:696    .text.matrix_scan:000000e6 .Loc.161
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1057   .bss.debouncing:00000000 debouncing
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:698    .text.matrix_scan:000000ea .Loc.162
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:699    .text.matrix_scan:000000ea .Loc.163
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:702    .text.matrix_scan:000000ee .Loc.164
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1062   .bss.debouncing_time:00000000 debouncing_time
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:707    .text.matrix_scan:000000f6 .Loc.165
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:709    .text.matrix_scan:000000f6 .Loc.166
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:710    .text.matrix_scan:000000f6 .Loc.167
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:715    .text.matrix_scan:00000100 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:718    .text.matrix_scan:00000102 .Loc.168
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:719    .text.matrix_scan:00000102 .Loc.169
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:723    .text.matrix_scan:0000010a .Loc.170
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:728    .text.matrix_scan:00000116 .Loc.171
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:733    .text.matrix_scan:0000011a .Loc.172
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:734    .text.matrix_scan:0000011a .Loc.173
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:739    .text.matrix_scan:0000012a .Loc.174
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:741    .text.matrix_scan:0000012a .Loc.175
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:742    .text.matrix_scan:0000012a .Loc.176
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:743    .text.matrix_scan:0000012a .Loc.177
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:748    .text.matrix_scan:0000013a .Loc.178
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:750    .text.matrix_scan:0000013a .Loc.179
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:751    .text.matrix_scan:0000013a .Loc.180
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:752    .text.matrix_scan:0000013a .Loc.181
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:757    .text.matrix_scan:0000014a .Loc.182
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:759    .text.matrix_scan:0000014a .Loc.183
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:760    .text.matrix_scan:0000014a .Loc.184
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:761    .text.matrix_scan:0000014a .Loc.185
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:766    .text.matrix_scan:0000015a .Loc.186
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:768    .text.matrix_scan:0000015a .Loc.187
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:769    .text.matrix_scan:0000015a .Loc.188
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:770    .text.matrix_scan:0000015a .Loc.189
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:775    .text.matrix_scan:0000016a .Loc.190
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:777    .text.matrix_scan:0000016a .Loc.191
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:779    .text.matrix_scan:0000016a .Loc.192
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:780    .text.matrix_scan:0000016a .Loc.193
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:784    .text.matrix_scan:0000016e .Loc.194
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:787    .text.matrix_scan:00000172 .Loc.195
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:788    .text.matrix_scan:00000172 .Loc.196
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:798    .text.matrix_scan:00000180 .Loc.197
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:803    .text.matrix_scan:00000188 .Loc.198
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:818    .text.matrix_scan:00000194 .Loc.199
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:821    .text.matrix_scan:00000196 .Loc.200
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:830    .text.matrix_scan:0000019a L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:836    .text.matrix_is_modified:00000000 matrix_is_modified
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:838    .text.matrix_is_modified:00000000 .Loc.201
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:839    .text.matrix_is_modified:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:844    .text.matrix_is_modified:00000000 .Loc.202
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:845    .text.matrix_is_modified:00000000 .Loc.203
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:847    .text.matrix_is_modified:00000004 .Loc.204
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:852    .text.matrix_is_modified:0000000a L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:858    .text.matrix_is_on:00000000 matrix_is_on
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:861    .text.matrix_is_on:00000000 .Loc.205
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:862    .text.matrix_is_on:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:867    .text.matrix_is_on:00000000 .Loc.206
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:868    .text.matrix_is_on:00000000 .Loc.207
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:874    .text.matrix_is_on:00000008 .Loc.208
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:877    .text.matrix_is_on:0000000c .Loc.209
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:884    .text.matrix_is_on:00000016 .Loc.210
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:888    .text.matrix_is_on:0000001c .Loc.211
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:892    .text.matrix_is_on:00000020 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:898    .text.matrix_get_row:00000000 matrix_get_row
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:901    .text.matrix_get_row:00000000 .Loc.212
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:902    .text.matrix_get_row:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:907    .text.matrix_get_row:00000000 .Loc.213
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:908    .text.matrix_get_row:00000000 .Loc.214
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:914    .text.matrix_get_row:00000008 .Loc.215
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:917    .text.matrix_get_row:0000000c .Loc.216
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:922    .text.matrix_get_row:00000012 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:928    .text.matrix_print:00000000 matrix_print
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:930    .text.matrix_print:00000000 .Loc.217
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:931    .text.matrix_print:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:936    .text.matrix_print:00000000 .Loc.218
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:937    .text.matrix_print:00000000 .Loc.219
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:938    .text.matrix_print:00000000 .Loc.220
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:940    .text.matrix_print:00000000 .Loc.221
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:942    .text.matrix_print:00000000 .Loc.222
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:944    .text.matrix_print:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:950    .text.matrix_key_count:00000000 matrix_key_count
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:952    .text.matrix_key_count:00000000 .Loc.223
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:953    .text.matrix_key_count:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:970    .text.matrix_key_count:00000006 .Loc.224
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:972    .text.matrix_key_count:00000006 .Loc.225
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:974    .text.matrix_key_count:00000006 .Loc.226
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:975    .text.matrix_key_count:00000006 .Loc.227
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:979    .text.matrix_key_count:0000000a .Loc.228
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:984    .text.matrix_key_count:0000000c .Loc.229
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:985    .text.matrix_key_count:0000000c .Loc.230
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:992    .text.matrix_key_count:00000018 .Loc.231
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:995    .text.matrix_key_count:0000001a .Loc.232
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:996    .text.matrix_key_count:0000001a .Loc.233
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:997    .text.matrix_key_count:0000001a .Loc.234
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1003   .text.matrix_key_count:00000022 .Loc.235
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1004   .text.matrix_key_count:00000022 .Loc.236
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1009   .text.matrix_key_count:00000026 .Loc.237
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1013   .text.matrix_key_count:0000002c L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:29     .text.matrix_init_user:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:46     .text.matrix_init_kb:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:63     .text.matrix_init_quantum:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:95     .text.matrix_scan_kb:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:112    .text.matrix_scan_quantum:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:131    .text.matrix_rows:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:150    .text.matrix_cols:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:375    .text.matrix_init:000000d6 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:833    .text.matrix_scan:0000019a L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:855    .text.matrix_is_modified:0000000a L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:895    .text.matrix_is_on:00000020 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:925    .text.matrix_get_row:00000012 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:947    .text.matrix_print:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1016   .text.matrix_key_count:0000002c L0
                     .debug_frame:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:219    .text.matrix_init:00000030 .L21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:217    .text.matrix_init:0000002e .L11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:199    .text.matrix_init:0000001c .L10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:274    .text.matrix_init:00000064 .L22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:272    .text.matrix_init:00000062 .L12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:253    .text.matrix_init:00000050 .L11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:520    .text.matrix_scan:0000005c .L23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:518    .text.matrix_scan:0000005a .L13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:567    .text.matrix_scan:00000072 .L14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:623    .text.matrix_scan:000000a4 .L24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:620    .text.matrix_scan:000000a0 .L15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:811    .text.matrix_scan:00000194 .L22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:638    .text.matrix_scan:000000ba .L25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:635    .text.matrix_scan:000000b6 .L16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:588    .text.matrix_scan:00000082 .L16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:705    .text.matrix_scan:000000f6 .L17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:475    .text.matrix_scan:00000036 .L18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:783    .text.matrix_scan:0000016e .L20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:642    .text.matrix_scan:000000be .L15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:883    .text.matrix_is_on:00000016 .L27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:982    .text.matrix_key_count:0000000c .L31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:2086   .debug_abbrev:00000000 .Ldebug_abbrev0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3916   .debug_ranges:00000000 .Ldebug_ranges0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:4014   .debug_line:00000000 .Ldebug_line0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:951    .text.matrix_key_count:00000000 .LFB24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1014   .text.matrix_key_count:0000002c .LFE24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3062   .debug_loc:00000000 .LLST23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3096   .debug_loc:00000042 .LLST24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3089   .debug_loc:0000003c .LVUS24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3115   .debug_loc:0000006e .LLST25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3112   .debug_loc:0000006c .LVUS25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:991    .text.matrix_key_count:00000018 .LVL64
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:929    .text.matrix_print:00000000 .LFB23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:945    .text.matrix_print:00000002 .LFE23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:900    .text.matrix_get_row:00000000 .LFB22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:923    .text.matrix_get_row:00000012 .LFE22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3128   .debug_loc:00000086 .LLST22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3123   .debug_loc:00000082 .LVUS22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:860    .text.matrix_is_on:00000000 .LFB21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:893    .text.matrix_is_on:00000020 .LFE21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3147   .debug_loc:000000ab .LLST21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3142   .debug_loc:000000a7 .LVUS21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:837    .text.matrix_is_modified:00000000 .LFB20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:853    .text.matrix_is_modified:0000000a .LFE20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:379    .text.matrix_scan:00000000 .LFB19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:831    .text.matrix_scan:0000019a .LFE19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3161   .debug_loc:000000cc .LLST6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3271   .debug_loc:000001ae .LLST7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3260   .debug_loc:000001a4 .LVUS7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3322   .debug_loc:00000214 .LLST8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3319   .debug_loc:00000212 .LVUS8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:478    .text.matrix_scan:00000036 .LBI48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3347   .debug_loc:00000238 .LLST9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3340   .debug_loc:00000232 .LVUS9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3386   .debug_loc:00000281 .LLST10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3381   .debug_loc:0000027d .LVUS10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:496    .text.matrix_scan:00000044 .LBI50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3412   .debug_loc:000002ad .LLST11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3407   .debug_loc:000002a9 .LVUS11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3440   .debug_loc:000002e1 .LLST12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3435   .debug_loc:000002dd .LVUS12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:541    .text.matrix_scan:00000070 .LBI54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3455   .debug_loc:00000302 .LLST13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3452   .debug_loc:00000300 .LVUS13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3467   .debug_loc:0000031c .LLST14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3464   .debug_loc:0000031a .LVUS14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3479   .debug_loc:00000336 .LLST15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3476   .debug_loc:00000334 .LVUS15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3499   .debug_loc:00000356 .LLST16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3488   .debug_loc:0000034c .LVUS16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3532   .debug_loc:0000039e .LLST17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3525   .debug_loc:00000398 .LVUS17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3560   .debug_loc:000003d3 .LLST18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3549   .debug_loc:000003c9 .LVUS18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:663    .text.matrix_scan:000000d0 .LBI64
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:662    .text.matrix_scan:000000d0 .LBB64
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:683    .text.matrix_scan:000000dc .LBE64
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3631   .debug_loc:00000441 .LLST19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3628   .debug_loc:0000043f .LVUS19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:665    .text.matrix_scan:000000d0 .LBB65
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:682    .text.matrix_scan:000000dc .LBE65
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:701    .text.matrix_scan:000000ee .LVL43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:732    .text.matrix_scan:0000011a .LBB76
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:778    .text.matrix_scan:0000016a .LBE76
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3658   .debug_loc:0000046a .LLST20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3645   .debug_loc:0000045e .LVUS20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:727    .text.matrix_scan:00000116 .LVL45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:786    .text.matrix_scan:00000172 .LVL53
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:154    .text.matrix_init:00000000 .LFB18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:373    .text.matrix_init:000000d6 .LFE18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3691   .debug_loc:000004ba .LLST0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:301    .text.matrix_init:0000007e .LBB32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:362    .text.matrix_init:000000ce .LBE32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3725   .debug_loc:000004f5 .LLST5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3712   .debug_loc:000004e9 .LVUS5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:181    .text.matrix_init:00000010 .LBI25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:186    .text.matrix_init:00000010 .LBB26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:245    .text.matrix_init:0000004c .LBE26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3767   .debug_loc:0000054d .LLST1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3758   .debug_loc:00000545 .LVUS1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:194    .text.matrix_init:00000018 .LBB27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:233    .text.matrix_init:00000042 .LBE27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3809   .debug_loc:000005a0 .LLST2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3804   .debug_loc:0000059c .LVUS2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:247    .text.matrix_init:0000004c .LBB29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:300    .text.matrix_init:0000007e .LBE29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:248    .text.matrix_init:0000004c .LBB30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:299    .text.matrix_init:0000007e .LBE30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3828   .debug_loc:000005c5 .LLST3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3821   .debug_loc:000005bf .LVUS3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:249    .text.matrix_init:0000004c .LBB31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:288    .text.matrix_init:00000076 .LBE31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3865   .debug_loc:0000060c .LLST4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:3860   .debug_loc:00000608 .LVUS4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:370    .text.matrix_init:000000d6 .LVL22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:135    .text.matrix_cols:00000000 .LFB17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:148    .text.matrix_cols:00000004 .LFE17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:116    .text.matrix_rows:00000000 .LFB16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:129    .text.matrix_rows:00000004 .LFE16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:14     .text.matrix_init_user:00000000 .LFB14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:26     .text.matrix_init_user:00000002 .LFE14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:82     .text.matrix_scan_kb:00000000 .LFB13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:93     .text.matrix_scan_kb:00000004 .LFE13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:91     .text.matrix_scan_kb:00000004 .LVL2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:33     .text.matrix_init_kb:00000000 .LFB12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:44     .text.matrix_init_kb:00000004 .LFE12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:42     .text.matrix_init_kb:00000004 .LVL0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:99     .text.matrix_scan_quantum:00000000 .LFB11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:110    .text.matrix_scan_quantum:00000004 .LFE11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:108    .text.matrix_scan_quantum:00000004 .LVL3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:50     .text.matrix_init_quantum:00000000 .LFB10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:61     .text.matrix_init_quantum:00000004 .LFE10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:59     .text.matrix_init_quantum:00000004 .LVL1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:955    .text.matrix_key_count:00000002 .LCFI17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:959    .text.matrix_key_count:00000004 .LCFI18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:963    .text.matrix_key_count:00000006 .LCFI19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:971    .text.matrix_key_count:00000006 .LVL62
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:981    .text.matrix_key_count:0000000c .LVL63
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1008   .text.matrix_key_count:00000026 .LVL66
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:899    .text.matrix_get_row:00000000 .LVL59
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:913    .text.matrix_get_row:00000008 .LVL60
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:859    .text.matrix_is_on:00000000 .LVL57
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:873    .text.matrix_is_on:00000008 .LVL58
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:383    .text.matrix_scan:00000002 .LCFI2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:387    .text.matrix_scan:00000004 .LCFI3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:391    .text.matrix_scan:00000006 .LCFI4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:395    .text.matrix_scan:00000008 .LCFI5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:399    .text.matrix_scan:0000000a .LCFI6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:403    .text.matrix_scan:0000000c .LCFI7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:407    .text.matrix_scan:0000000e .LCFI8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:411    .text.matrix_scan:00000010 .LCFI9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:415    .text.matrix_scan:00000012 .LCFI10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:419    .text.matrix_scan:00000014 .LCFI11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:423    .text.matrix_scan:00000016 .LCFI12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:427    .text.matrix_scan:00000018 .LCFI13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:431    .text.matrix_scan:0000001a .LCFI14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:435    .text.matrix_scan:0000001c .LCFI15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:439    .text.matrix_scan:0000001e .LCFI16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:449    .text.matrix_scan:0000001e .LVL23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:474    .text.matrix_scan:00000036 .LVL24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:504    .text.matrix_scan:0000004a .LVL27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:708    .text.matrix_scan:000000f6 .LVL44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:797    .text.matrix_scan:00000180 .LVL54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:810    .text.matrix_scan:00000194 .LVL55
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:680    .text.matrix_scan:000000dc .LVL42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:487    .text.matrix_scan:0000003e .LVL25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:494    .text.matrix_scan:00000044 .LVL26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:535    .text.matrix_scan:00000070 .LVL30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:514    .text.matrix_scan:00000056 .LVL28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:527    .text.matrix_scan:00000066 .LVL29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:569    .text.matrix_scan:00000076 .LVL31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:587    .text.matrix_scan:00000082 .LVL32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:651    .text.matrix_scan:000000c8 .LVL37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:654    .text.matrix_scan:000000ca .LVL38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:670    .text.matrix_scan:000000d2 .LVL40
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:599    .text.matrix_scan:00000088 .LVL33
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:616    .text.matrix_scan:0000009c .LVL35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:674    .text.matrix_scan:000000d6 .LVL41
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:608    .text.matrix_scan:00000094 .LVL34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:641    .text.matrix_scan:000000be .LVL36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:820    .text.matrix_scan:00000196 .LVL56
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:661    .text.matrix_scan:000000d0 .LVL39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:731    .text.matrix_scan:0000011a .LVL46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:740    .text.matrix_scan:0000012a .LVL47
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:749    .text.matrix_scan:0000013a .LVL48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:758    .text.matrix_scan:0000014a .LVL49
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:767    .text.matrix_scan:0000015a .LVL50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:776    .text.matrix_scan:0000016a .LVL51
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:782    .text.matrix_scan:0000016e .LVL52
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:158    .text.matrix_init:00000002 .LCFI0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:162    .text.matrix_init:00000004 .LCFI1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:297    .text.matrix_init:0000007e .LVL16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:312    .text.matrix_init:0000008e .LVL17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:324    .text.matrix_init:0000009e .LVL18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:336    .text.matrix_init:000000ae .LVL19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:348    .text.matrix_init:000000be .LVL20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:360    .text.matrix_init:000000ce .LVL21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:188    .text.matrix_init:00000010 .LVL4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:198    .text.matrix_init:0000001c .LVL5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:203    .text.matrix_init:0000001e .LVL6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:235    .text.matrix_init:00000042 .LVL9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:243    .text.matrix_init:0000004c .LVL10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:213    .text.matrix_init:0000002a .LVL7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:227    .text.matrix_init:0000003c .LVL8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:254    .text.matrix_init:00000050 .LVL11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:258    .text.matrix_init:00000052 .LVL12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:290    .text.matrix_init:00000076 .LVL15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:268    .text.matrix_init:0000005e .LVL13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:282    .text.matrix_init:00000070 .LVL14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1072   .debug_info:00000000 .Ldebug_info0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:180    .text.matrix_init:00000010 .LBB25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:183    .text.matrix_init:00000010 .LBE25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:185    .text.matrix_init:00000010 .LBB28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:246    .text.matrix_init:0000004c .LBE28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:447    .text.matrix_scan:0000001e .LBB46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:556    .text.matrix_scan:00000070 .LBE46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:559    .text.matrix_scan:00000070 .LBB75
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:717    .text.matrix_scan:00000102 .LBE75
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:812    .text.matrix_scan:00000194 .LBB77
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:829    .text.matrix_scan:0000019a .LBE77
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:459    .text.matrix_scan:0000002e .LBB47
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:555    .text.matrix_scan:00000070 .LBE47
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:560    .text.matrix_scan:00000070 .LBB73
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:706    .text.matrix_scan:000000f6 .LBE73
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:813    .text.matrix_scan:00000194 .LBB74
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:828    .text.matrix_scan:0000019a .LBE74
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:460    .text.matrix_scan:0000002e .LBB48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:470    .text.matrix_scan:00000032 .LBE48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:477    .text.matrix_scan:00000036 .LBB70
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:554    .text.matrix_scan:00000070 .LBE70
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:561    .text.matrix_scan:00000070 .LBB71
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:687    .text.matrix_scan:000000dc .LBE71
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:814    .text.matrix_scan:00000194 .LBB72
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:827    .text.matrix_scan:0000019a .LBE72
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:462    .text.matrix_scan:0000002e .LBB50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:468    .text.matrix_scan:00000032 .LBE50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:495    .text.matrix_scan:00000044 .LBB53
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:538    .text.matrix_scan:00000070 .LBE53
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:540    .text.matrix_scan:00000070 .LBB54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:552    .text.matrix_scan:00000070 .LBE54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:563    .text.matrix_scan:00000070 .LBB58
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:572    .text.matrix_scan:00000076 .LBE58
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:582    .text.matrix_scan:0000007e .LBB62
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:591    .text.matrix_scan:00000082 .LBE62
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:574    .text.matrix_scan:00000076 .LBB59
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:581    .text.matrix_scan:0000007e .LBE59
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:592    .text.matrix_scan:00000082 .LBB63
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:659    .text.matrix_scan:000000d0 .LBE63
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:816    .text.matrix_scan:00000194 .LBB66
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:825    .text.matrix_scan:0000019a .LBE66
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:593    .text.matrix_scan:00000082 .LBB60
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:649    .text.matrix_scan:000000c8 .LBE60
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:817    .text.matrix_scan:00000194 .LBB61
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:824    .text.matrix_scan:0000019a .LBE61
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:973    .text.matrix_key_count:00000006 .LBB78
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:978    .text.matrix_key_count:0000000a .LBE78
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:983    .text.matrix_key_count:0000000c .LBB79
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccH9CMNI.s:1002   .text.matrix_key_count:00000022 .LBE79

UNDEFINED SYMBOLS
timer_read
timer_elapsed
bitpop16
__do_copy_data
__do_clear_bss
