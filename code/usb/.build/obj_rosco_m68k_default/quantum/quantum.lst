   1               		.file	"quantum.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.do_code16,"ax",@progbits
  12               	do_code16:
  13               	.LVL0:
  14               	.LFB111:
  15               		.file 1 "quantum/quantum.c"
   1:quantum/quantum.c **** #include "quantum.h"
   2:quantum/quantum.c **** 
   3:quantum/quantum.c **** #ifndef TAPPING_TERM
   4:quantum/quantum.c **** #define TAPPING_TERM 200
   5:quantum/quantum.c **** #endif
   6:quantum/quantum.c **** 
   7:quantum/quantum.c **** static void do_code16 (uint16_t code, void (*f) (uint8_t)) {
  16               		.loc 1 7 60 view -0
  17               		.cfi_startproc
  18               		.loc 1 7 60 is_stmt 0 view .LVU1
  19 0000 0F93      		push r16
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 16, -2
  23 0002 1F93      		push r17
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 17, -3
  27 0004 CF93      		push r28
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 5
  30               		.cfi_offset 28, -4
  31 0006 DF93      		push r29
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 6
  34               		.cfi_offset 29, -5
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 4 */
  38               	.L__stack_usage = 4
  39 0008 8C01      		movw r16,r24
  40 000a EB01      		movw r28,r22
   8:quantum/quantum.c ****   switch (code) {
  41               		.loc 1 8 3 is_stmt 1 view .LVU2
  42 000c 9A95      		dec r25
  43               	.LVL1:
  44               		.loc 1 8 3 is_stmt 0 view .LVU3
  45 000e 8115      		cp r24,__zero_reg__
  46 0010 9F41      		sbci r25,31
  47 0012 00F4      		brsh .L1
   9:quantum/quantum.c ****   case QK_MODS ... QK_MODS_MAX:
  10:quantum/quantum.c ****     break;
  48               		.loc 1 10 5 is_stmt 1 view .LVU4
  11:quantum/quantum.c ****   default:
  12:quantum/quantum.c ****     return;
  13:quantum/quantum.c ****   }
  14:quantum/quantum.c **** 
  15:quantum/quantum.c ****   if (code & QK_LCTL)
  49               		.loc 1 15 3 view .LVU5
  50               		.loc 1 15 6 is_stmt 0 view .LVU6
  51 0014 10FF      		sbrs r17,0
  52 0016 00C0      		rjmp .L4
  16:quantum/quantum.c ****     f(KC_LCTL);
  53               		.loc 1 16 5 is_stmt 1 view .LVU7
  54 0018 80EE      		ldi r24,lo8(-32)
  55 001a FB01      		movw r30,r22
  56 001c 0995      		icall
  57               	.LVL2:
  58               	.L4:
  17:quantum/quantum.c ****   if (code & QK_LSFT)
  59               		.loc 1 17 3 view .LVU8
  60               		.loc 1 17 6 is_stmt 0 view .LVU9
  61 001e 11FF      		sbrs r17,1
  62 0020 00C0      		rjmp .L5
  18:quantum/quantum.c ****     f(KC_LSFT);
  63               		.loc 1 18 5 is_stmt 1 view .LVU10
  64 0022 81EE      		ldi r24,lo8(-31)
  65 0024 FE01      		movw r30,r28
  66 0026 0995      		icall
  67               	.LVL3:
  68               	.L5:
  19:quantum/quantum.c ****   if (code & QK_LALT)
  69               		.loc 1 19 3 view .LVU11
  70               		.loc 1 19 6 is_stmt 0 view .LVU12
  71 0028 12FF      		sbrs r17,2
  72 002a 00C0      		rjmp .L6
  20:quantum/quantum.c ****     f(KC_LALT);
  73               		.loc 1 20 5 is_stmt 1 view .LVU13
  74 002c 82EE      		ldi r24,lo8(-30)
  75 002e FE01      		movw r30,r28
  76 0030 0995      		icall
  77               	.LVL4:
  78               	.L6:
  21:quantum/quantum.c ****   if (code & QK_LGUI)
  79               		.loc 1 21 3 view .LVU14
  80               		.loc 1 21 6 is_stmt 0 view .LVU15
  81 0032 13FF      		sbrs r17,3
  82 0034 00C0      		rjmp .L7
  22:quantum/quantum.c ****     f(KC_LGUI);
  83               		.loc 1 22 5 is_stmt 1 view .LVU16
  84 0036 83EE      		ldi r24,lo8(-29)
  85 0038 FE01      		movw r30,r28
  86 003a 0995      		icall
  87               	.LVL5:
  88               	.L7:
  23:quantum/quantum.c **** 
  24:quantum/quantum.c ****   if (code < QK_RMODS_MIN) return;
  89               		.loc 1 24 3 view .LVU17
  90               		.loc 1 24 6 is_stmt 0 view .LVU18
  91 003c 0115      		cp r16,__zero_reg__
  92 003e 1041      		sbci r17,16
  93 0040 00F0      		brlo .L1
  25:quantum/quantum.c **** 
  26:quantum/quantum.c ****   if (code & QK_RCTL)
  94               		.loc 1 26 3 is_stmt 1 view .LVU19
  27:quantum/quantum.c ****     f(KC_RCTL);
  95               		.loc 1 27 5 view .LVU20
  96 0042 84EE      		ldi r24,lo8(-28)
  97 0044 FE01      		movw r30,r28
  98 0046 0995      		icall
  99               	.LVL6:
  28:quantum/quantum.c ****   if (code & QK_RSFT)
 100               		.loc 1 28 3 view .LVU21
  29:quantum/quantum.c ****     f(KC_RSFT);
 101               		.loc 1 29 5 view .LVU22
 102 0048 85EE      		ldi r24,lo8(-27)
 103 004a FE01      		movw r30,r28
 104 004c 0995      		icall
 105               	.LVL7:
  30:quantum/quantum.c ****   if (code & QK_RALT)
 106               		.loc 1 30 3 view .LVU23
  31:quantum/quantum.c ****     f(KC_RALT);
 107               		.loc 1 31 5 view .LVU24
 108 004e 86EE      		ldi r24,lo8(-26)
 109 0050 FE01      		movw r30,r28
 110 0052 0995      		icall
 111               	.LVL8:
  32:quantum/quantum.c ****   if (code & QK_RGUI)
 112               		.loc 1 32 3 view .LVU25
  33:quantum/quantum.c ****     f(KC_RGUI);
 113               		.loc 1 33 5 view .LVU26
 114 0054 87EE      		ldi r24,lo8(-25)
 115 0056 FE01      		movw r30,r28
 116               	/* epilogue start */
  34:quantum/quantum.c **** }
 117               		.loc 1 34 1 is_stmt 0 view .LVU27
 118 0058 DF91      		pop r29
 119 005a CF91      		pop r28
 120               	.LVL9:
 121               		.loc 1 34 1 view .LVU28
 122 005c 1F91      		pop r17
 123 005e 0F91      		pop r16
 124               	.LVL10:
  33:quantum/quantum.c ****     f(KC_RGUI);
 125               		.loc 1 33 5 view .LVU29
 126 0060 0994      		ijmp
 127               	.LVL11:
 128               	.L1:
 129               	/* epilogue start */
 130               		.loc 1 34 1 view .LVU30
 131 0062 DF91      		pop r29
 132 0064 CF91      		pop r28
 133               	.LVL12:
 134               		.loc 1 34 1 view .LVU31
 135 0066 1F91      		pop r17
 136 0068 0F91      		pop r16
 137               	.LVL13:
 138               		.loc 1 34 1 view .LVU32
 139 006a 0895      		ret
 140               		.cfi_endproc
 141               	.LFE111:
 143               		.section	.text.register_code16,"ax",@progbits
 144               	.global	register_code16
 146               	register_code16:
 147               	.LVL14:
 148               	.LFB112:
  35:quantum/quantum.c **** 
  36:quantum/quantum.c **** void register_code16 (uint16_t code) {
 149               		.loc 1 36 38 is_stmt 1 view -0
 150               		.cfi_startproc
 151               		.loc 1 36 38 is_stmt 0 view .LVU34
 152 0000 CF93      		push r28
 153               	.LCFI4:
 154               		.cfi_def_cfa_offset 3
 155               		.cfi_offset 28, -2
 156               	/* prologue: function */
 157               	/* frame size = 0 */
 158               	/* stack size = 1 */
 159               	.L__stack_usage = 1
 160 0002 C82F      		mov r28,r24
  37:quantum/quantum.c ****   do_code16 (code, register_code);
 161               		.loc 1 37 3 is_stmt 1 view .LVU35
 162 0004 60E0      		ldi r22,lo8(gs(register_code))
 163 0006 70E0      		ldi r23,hi8(gs(register_code))
 164 0008 0E94 0000 		call do_code16
 165               	.LVL15:
  38:quantum/quantum.c ****   register_code (code);
 166               		.loc 1 38 3 view .LVU36
 167 000c 8C2F      		mov r24,r28
 168               	/* epilogue start */
  39:quantum/quantum.c **** }
 169               		.loc 1 39 1 is_stmt 0 view .LVU37
 170 000e CF91      		pop r28
  38:quantum/quantum.c ****   register_code (code);
 171               		.loc 1 38 3 view .LVU38
 172 0010 0C94 0000 		jmp register_code
 173               	.LVL16:
 174               		.cfi_endproc
 175               	.LFE112:
 177               		.section	.text.unregister_code16,"ax",@progbits
 178               	.global	unregister_code16
 180               	unregister_code16:
 181               	.LVL17:
 182               	.LFB113:
  40:quantum/quantum.c **** 
  41:quantum/quantum.c **** void unregister_code16 (uint16_t code) {
 183               		.loc 1 41 40 is_stmt 1 view -0
 184               		.cfi_startproc
 185               		.loc 1 41 40 is_stmt 0 view .LVU40
 186 0000 CF93      		push r28
 187               	.LCFI5:
 188               		.cfi_def_cfa_offset 3
 189               		.cfi_offset 28, -2
 190 0002 DF93      		push r29
 191               	.LCFI6:
 192               		.cfi_def_cfa_offset 4
 193               		.cfi_offset 29, -3
 194               	/* prologue: function */
 195               	/* frame size = 0 */
 196               	/* stack size = 2 */
 197               	.L__stack_usage = 2
 198 0004 EC01      		movw r28,r24
  42:quantum/quantum.c ****   unregister_code (code);
 199               		.loc 1 42 3 is_stmt 1 view .LVU41
 200 0006 0E94 0000 		call unregister_code
 201               	.LVL18:
  43:quantum/quantum.c ****   do_code16 (code, unregister_code);
 202               		.loc 1 43 3 view .LVU42
 203 000a 60E0      		ldi r22,lo8(gs(unregister_code))
 204 000c 70E0      		ldi r23,hi8(gs(unregister_code))
 205 000e CE01      		movw r24,r28
 206               	/* epilogue start */
  44:quantum/quantum.c **** }
 207               		.loc 1 44 1 is_stmt 0 view .LVU43
 208 0010 DF91      		pop r29
 209 0012 CF91      		pop r28
 210               	.LVL19:
  43:quantum/quantum.c ****   do_code16 (code, unregister_code);
 211               		.loc 1 43 3 view .LVU44
 212 0014 0C94 0000 		jmp do_code16
 213               	.LVL20:
  43:quantum/quantum.c ****   do_code16 (code, unregister_code);
 214               		.loc 1 43 3 view .LVU45
 215               		.cfi_endproc
 216               	.LFE113:
 218               		.section	.text.process_action_kb,"ax",@progbits
 219               		.weak	process_action_kb
 221               	process_action_kb:
 222               	.LVL21:
 223               	.LFB114:
  45:quantum/quantum.c **** 
  46:quantum/quantum.c **** __attribute__ ((weak))
  47:quantum/quantum.c **** bool process_action_kb(keyrecord_t *record) {
 224               		.loc 1 47 45 is_stmt 1 view -0
 225               		.cfi_startproc
 226               	/* prologue: function */
 227               	/* frame size = 0 */
 228               	/* stack size = 0 */
 229               	.L__stack_usage = 0
  48:quantum/quantum.c ****   return true;
 230               		.loc 1 48 3 view .LVU47
  49:quantum/quantum.c **** }
 231               		.loc 1 49 1 is_stmt 0 view .LVU48
 232 0000 81E0      		ldi r24,lo8(1)
 233               	.LVL22:
 234               	/* epilogue start */
 235               		.loc 1 49 1 view .LVU49
 236 0002 0895      		ret
 237               		.cfi_endproc
 238               	.LFE114:
 240               		.section	.text.process_record_user,"ax",@progbits
 241               		.weak	process_record_user
 243               	process_record_user:
 244               	.LVL23:
 245               	.LFB116:
  50:quantum/quantum.c **** 
  51:quantum/quantum.c **** __attribute__ ((weak))
  52:quantum/quantum.c **** bool process_record_kb(uint16_t keycode, keyrecord_t *record) {
  53:quantum/quantum.c ****   return process_record_user(keycode, record);
  54:quantum/quantum.c **** }
  55:quantum/quantum.c **** 
  56:quantum/quantum.c **** __attribute__ ((weak))
  57:quantum/quantum.c **** bool process_record_user(uint16_t keycode, keyrecord_t *record) {
 246               		.loc 1 57 65 is_stmt 1 view -0
 247               		.cfi_startproc
 248               	/* prologue: function */
 249               	/* frame size = 0 */
 250               	/* stack size = 0 */
 251               	.L__stack_usage = 0
  58:quantum/quantum.c ****   return true;
 252               		.loc 1 58 3 view .LVU51
  59:quantum/quantum.c **** }
 253               		.loc 1 59 1 is_stmt 0 view .LVU52
 254 0000 81E0      		ldi r24,lo8(1)
 255               	.LVL24:
 256               	/* epilogue start */
 257               		.loc 1 59 1 view .LVU53
 258 0002 0895      		ret
 259               		.cfi_endproc
 260               	.LFE116:
 262               		.section	.text.process_record_kb,"ax",@progbits
 263               		.weak	process_record_kb
 265               	process_record_kb:
 266               	.LVL25:
 267               	.LFB115:
  52:quantum/quantum.c ****   return process_record_user(keycode, record);
 268               		.loc 1 52 63 is_stmt 1 view -0
 269               		.cfi_startproc
 270               	/* prologue: function */
 271               	/* frame size = 0 */
 272               	/* stack size = 0 */
 273               	.L__stack_usage = 0
  53:quantum/quantum.c **** }
 274               		.loc 1 53 3 view .LVU55
  53:quantum/quantum.c **** }
 275               		.loc 1 53 10 is_stmt 0 view .LVU56
 276 0000 0C94 0000 		jmp process_record_user
 277               	.LVL26:
  53:quantum/quantum.c **** }
 278               		.loc 1 53 10 view .LVU57
 279               		.cfi_endproc
 280               	.LFE115:
 282               		.section	.text.reset_keyboard,"ax",@progbits
 283               	.global	reset_keyboard
 285               	reset_keyboard:
 286               	.LFB117:
  60:quantum/quantum.c **** 
  61:quantum/quantum.c **** void reset_keyboard(void) {
 287               		.loc 1 61 27 is_stmt 1 view -0
 288               		.cfi_startproc
 289               	/* prologue: function */
 290               	/* frame size = 0 */
 291               	/* stack size = 0 */
 292               	.L__stack_usage = 0
  62:quantum/quantum.c ****   clear_keyboard();
 293               		.loc 1 62 3 view .LVU59
 294 0000 0E94 0000 		call clear_keyboard
 295               	.LVL27:
  63:quantum/quantum.c **** #ifdef AUDIO_ENABLE
  64:quantum/quantum.c ****   stop_all_notes();
  65:quantum/quantum.c ****   shutdown_user();
  66:quantum/quantum.c **** #endif
  67:quantum/quantum.c ****   wait_ms(250);
 296               		.loc 1 67 3 view .LVU60
 297               	.LBB8:
 298               	.LBI8:
 299               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** _delay_ms(double __ms)
 300               		.loc 2 166 1 view .LVU61
 301               	.LBB9:
 167:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	double __tmp ;
 302               		.loc 2 168 2 view .LVU62
 169:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 303               		.loc 2 172 2 view .LVU63
 173:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 304               		.loc 2 173 2 view .LVU64
 174:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 305               		.loc 2 174 2 view .LVU65
 175:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 306               		.loc 2 184 3 view .LVU66
 307               		.loc 2 184 3 is_stmt 0 view .LVU67
 308               	.LBE9:
 309               	.LBE8:
 310               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h"
   1:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* Copyright (c) 2002,2007-2009 Michael Stumpf
   2:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
   3:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    Portions of documentation Copyright (c) 1990 - 1994
   4:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    The Regents of the University of California.
   5:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    All rights reserved.
   7:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
   8:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    Redistribution and use in source and binary forms, with or without
   9:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    modification, are permitted provided that the following conditions are met:
  10:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  11:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    * Redistributions of source code must retain the above copyright
  12:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      notice, this list of conditions and the following disclaimer.
  13:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  14:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    * Redistributions in binary form must reproduce the above copyright
  15:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      notice, this list of conditions and the following disclaimer in
  16:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      the documentation and/or other materials provided with the
  17:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      distribution.
  18:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  19:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    * Neither the name of the copyright holders nor the names of
  20:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      contributors may be used to endorse or promote products derived
  21:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      from this software without specific prior written permission.
  22:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  23:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  25:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  26:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  27:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  28:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  29:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  30:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  31:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  32:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  33:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   POSSIBILITY OF SUCH DAMAGE. */
  34:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* $Id: math.h 2554 2021-05-20 22:22:24Z joerg_wunsch $ */
  36:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  37:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /*
  38:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    math.h - mathematical functions
  39:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  40:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    Author : Michael Stumpf
  41:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****             Michael.Stumpf@t-online.de
  42:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  43:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    __ATTR_CONST__ added by marekm@linux.org.pl for functions
  44:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    that "do not examine any values except their arguments, and have
  45:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    no effects except the return value", for better optimization by gcc.
  46:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
  47:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #ifndef __MATH_H
  49:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define __MATH_H
  50:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  51:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** \file */
  52:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** \defgroup avr_math <math.h>: Mathematics
  53:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     \code #include <math.h> \endcode
  54:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  55:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     This header file declares basic mathematics constants and
  56:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     functions.
  57:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  58:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     \par Notes:
  59:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     - In order to access the functions declared herein, it is usually
  60:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       also required to additionally link against the library \c libm.a.
  61:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       See also the related \ref faq_libm "FAQ entry".
  62:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     - Math functions do not raise exceptions and do not change the
  63:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       \c errno variable. Therefore the majority of them are declared
  64:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       with const attribute, for better optimization by GCC.	*/
  65:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  66:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  67:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** \ingroup avr_math	*/
  68:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /*@{*/
  69:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a e.	*/
  71:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_E		2.7182818284590452354
  72:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  73:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The logarithm of the \a e to base 2. */
  74:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LOG2E		1.4426950408889634074	/* log_2 e */
  75:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  76:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The logarithm of the \a e to base 10. */
  77:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LOG10E	0.43429448190325182765	/* log_10 e */
  78:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The natural logarithm of the 2.	*/
  80:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LN2		0.69314718055994530942	/* log_e 2 */
  81:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  82:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The natural logarithm of the 10.	*/
  83:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LN10		2.30258509299404568402	/* log_e 10 */
  84:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a pi.	*/
  86:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_PI		3.14159265358979323846	/* pi */
  87:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  88:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a pi/2.	*/
  89:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_PI_2		1.57079632679489661923	/* pi/2 */
  90:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  91:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a pi/4.	*/
  92:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_PI_4		0.78539816339744830962	/* pi/4 */
  93:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  94:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 1/pi.	*/
  95:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_1_PI		0.31830988618379067154	/* 1/pi */
  96:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 2/pi.	*/
  98:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_2_PI		0.63661977236758134308	/* 2/pi */
  99:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 100:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 2/sqrt(pi).	*/
 101:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_2_SQRTPI	1.12837916709551257390	/* 2/sqrt(pi) */
 102:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The square root of 2.	*/
 104:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_SQRT2		1.41421356237309504880	/* sqrt(2) */
 105:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 106:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 1/sqrt(2).	*/
 107:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_SQRT1_2	0.70710678118654752440	/* 1/sqrt(2) */
 108:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 109:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** NAN constant.	*/
 110:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define NAN	__builtin_nan("")
 111:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 112:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** INFINITY constant.	*/
 113:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define INFINITY	__builtin_inf()
 114:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 116:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #ifndef __ATTR_CONST__
 117:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** # define __ATTR_CONST__ __attribute__((__const__))
 118:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #endif
 119:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 120:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #if __SIZEOF_DOUBLE__ == __SIZEOF_FLOAT__
 121:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* In order to provide aliases for double functions in the case where
 122:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    double = float, use declarations with according assembler name.
 123:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    That way:
 124:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    1) We do *NOT* use macros like
 125:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****          #define sin sinf
 126:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       because that would interfere with C++.  For example, if some class
 127:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       would implement a method 'sin', or if there was polymorthism for
 128:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       a function 'sin', then we would silently rename these to 'sinf'.
 129:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    2) We have proper prototypes, both for 'sin' and for 'sinf'.
 130:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    3) It is zero-overhead.  */
 131:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define __ASM_ALIAS(x) __asm(#x)
 132:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #else
 133:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* double != float: Provide double prototypes. */
 134:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define __ASM_ALIAS(x) /* empty */
 135:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #endif
 136:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #ifdef __cplusplus
 138:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** extern "C" {
 139:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #endif
 140:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 141:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 142:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The cosf() function returns the cosine of \a __x, measured in radians.
 143:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 144:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern float cosf (float __x);
 145:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern double cos (double __x) __ASM_ALIAS(cosf);		/**< The alias for cosf().	*/
 146:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 148:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The sinf() function returns the sine of \a __x, measured in radians.
 149:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 150:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern float sinf (float __x);
 151:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern double sin (double __x) __ASM_ALIAS(sinf);		/**< The alias for sinf().	*/
 152:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 153:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 154:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The tanf() function returns the tangent of \a __x, measured in radians.
 155:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 156:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern float tanf (float __x);
 157:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern double tan (double __x) __ASM_ALIAS(tanf);		/**< The alias for tanf().	*/
 158:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 159:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 160:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The fabsf() function computes the absolute value of a floating-point
 161:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     number \a __x.
 162:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 163:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** static inline float fabsf (float __x)
 164:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** {
 165:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     return __builtin_fabsf (__x);
 166:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** }
 167:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 168:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** static inline double fabs (double __x)
 169:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** {
 170:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     return __builtin_fabs (__x);
 311               		.loc 3 170 5 is_stmt 1 view .LVU68
 312               	.LBB11:
 313               	.LBB10:
 185:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 314               		.loc 2 187 2 view .LVU69
 315 0004 2FEF      		ldi r18,lo8(799999)
 316 0006 84E3      		ldi r24,hi8(799999)
 317 0008 9CE0      		ldi r25,hlo8(799999)
 318 000a 2150      	1:	subi r18,1
 319 000c 8040      		sbci r24,0
 320 000e 9040      		sbci r25,0
 321 0010 01F4      		brne 1b
 322 0012 00C0      		rjmp .
 323 0014 0000      		nop
 324               	.LVL28:
 325               		.loc 2 187 2 is_stmt 0 view .LVU70
 326               	.LBE10:
 327               	.LBE11:
  68:quantum/quantum.c **** #ifdef CATERINA_BOOTLOADER
  69:quantum/quantum.c ****   *(uint16_t *)0x0800 = 0x7777; // these two are a-star-specific
  70:quantum/quantum.c **** #endif
  71:quantum/quantum.c ****   bootloader_jump();
 328               		.loc 1 71 3 is_stmt 1 view .LVU71
 329 0016 0C94 0000 		jmp bootloader_jump
 330               	.LVL29:
 331               		.cfi_endproc
 332               	.LFE117:
 334               		.section	.text.process_record_quantum,"ax",@progbits
 335               	.global	process_record_quantum
 337               	process_record_quantum:
 338               	.LVL30:
 339               	.LFB118:
  72:quantum/quantum.c **** }
  73:quantum/quantum.c **** 
  74:quantum/quantum.c **** // Shift / paren setup
  75:quantum/quantum.c **** 
  76:quantum/quantum.c **** #ifndef LSPO_KEY
  77:quantum/quantum.c ****   #define LSPO_KEY KC_9
  78:quantum/quantum.c **** #endif
  79:quantum/quantum.c **** #ifndef RSPC_KEY
  80:quantum/quantum.c ****   #define RSPC_KEY KC_0
  81:quantum/quantum.c **** #endif
  82:quantum/quantum.c **** 
  83:quantum/quantum.c **** static bool shift_interrupted[2] = {0, 0};
  84:quantum/quantum.c **** static uint16_t scs_timer = 0;
  85:quantum/quantum.c **** 
  86:quantum/quantum.c **** bool process_record_quantum(keyrecord_t *record) {
 340               		.loc 1 86 50 view -0
 341               		.cfi_startproc
 342               		.loc 1 86 50 is_stmt 0 view .LVU73
 343 0000 FF92      		push r15
 344               	.LCFI7:
 345               		.cfi_def_cfa_offset 3
 346               		.cfi_offset 15, -2
 347 0002 0F93      		push r16
 348               	.LCFI8:
 349               		.cfi_def_cfa_offset 4
 350               		.cfi_offset 16, -3
 351 0004 1F93      		push r17
 352               	.LCFI9:
 353               		.cfi_def_cfa_offset 5
 354               		.cfi_offset 17, -4
 355 0006 CF93      		push r28
 356               	.LCFI10:
 357               		.cfi_def_cfa_offset 6
 358               		.cfi_offset 28, -5
 359 0008 DF93      		push r29
 360               	.LCFI11:
 361               		.cfi_def_cfa_offset 7
 362               		.cfi_offset 29, -6
 363               	/* prologue: function */
 364               	/* frame size = 0 */
 365               	/* stack size = 5 */
 366               	.L__stack_usage = 5
 367 000a 8C01      		movw r16,r24
  87:quantum/quantum.c **** 
  88:quantum/quantum.c ****   /* This gets the keycode from the key pressed */
  89:quantum/quantum.c ****   keypos_t key = record->event.key;
 368               		.loc 1 89 3 is_stmt 1 view .LVU74
 369               		.loc 1 89 12 is_stmt 0 view .LVU75
 370 000c FC01      		movw r30,r24
 371 000e C081      		ld r28,Z
 372 0010 D181      		ldd r29,Z+1
 373               	.LVL31:
  90:quantum/quantum.c ****   uint16_t keycode;
 374               		.loc 1 90 3 is_stmt 1 view .LVU76
  91:quantum/quantum.c **** 
  92:quantum/quantum.c ****   #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
  93:quantum/quantum.c ****     /* TODO: Use store_or_get_action() or a similar function. */
  94:quantum/quantum.c ****     if (!disable_action_cache) {
 375               		.loc 1 94 5 view .LVU77
 376               		.loc 1 94 8 is_stmt 0 view .LVU78
 377 0012 8091 0000 		lds r24,disable_action_cache
 378               	.LVL32:
 379               		.loc 1 94 8 view .LVU79
 380 0016 8111      		cpse r24,__zero_reg__
 381 0018 00C0      		rjmp .L28
 382               	.LBB12:
  95:quantum/quantum.c ****       uint8_t layer;
 383               		.loc 1 95 7 is_stmt 1 view .LVU80
  96:quantum/quantum.c **** 
  97:quantum/quantum.c ****       if (record->event.pressed) {
 384               		.loc 1 97 7 view .LVU81
 385               		.loc 1 97 10 is_stmt 0 view .LVU82
 386 001a 8281      		ldd r24,Z+2
 387 001c 8823      		tst r24
 388 001e 01F0      		breq .L29
  98:quantum/quantum.c ****         layer = layer_switch_get_layer(key);
 389               		.loc 1 98 9 is_stmt 1 view .LVU83
 390               	.LVL33:
 391               		.loc 1 98 17 is_stmt 0 view .LVU84
 392 0020 CE01      		movw r24,r28
 393 0022 0E94 0000 		call layer_switch_get_layer
 394               	.LVL34:
 395 0026 F82E      		mov r15,r24
 396               	.LVL35:
  99:quantum/quantum.c ****         update_source_layers_cache(key, layer);
 397               		.loc 1 99 9 is_stmt 1 view .LVU85
 398 0028 682F      		mov r22,r24
 399 002a CE01      		movw r24,r28
 400 002c 0E94 0000 		call update_source_layers_cache
 401               	.LVL36:
 402               	.L30:
 100:quantum/quantum.c ****       } else {
 101:quantum/quantum.c ****         layer = read_source_layers_cache(key);
 102:quantum/quantum.c ****       }
 103:quantum/quantum.c ****       keycode = keymap_key_to_keycode(layer, key);
 403               		.loc 1 103 7 view .LVU86
 404               		.loc 1 103 17 is_stmt 0 view .LVU87
 405 0030 BE01      		movw r22,r28
 406 0032 8F2D      		mov r24,r15
 407               	.LVL37:
 408               	.L85:
 409               		.loc 1 103 17 view .LVU88
 410               	.LBE12:
 104:quantum/quantum.c ****     } else
 105:quantum/quantum.c ****   #endif
 106:quantum/quantum.c ****     keycode = keymap_key_to_keycode(layer_switch_get_layer(key), key);
 411               		.loc 1 106 15 view .LVU89
 412 0034 0E94 0000 		call keymap_key_to_keycode
 413               	.LVL38:
 414 0038 EC01      		movw r28,r24
 415               	.LVL39:
 107:quantum/quantum.c **** 
 108:quantum/quantum.c ****     // This is how you use actions here
 109:quantum/quantum.c ****     // if (keycode == KC_LEAD) {
 110:quantum/quantum.c ****     //   action_t action;
 111:quantum/quantum.c ****     //   action.code = ACTION_DEFAULT_LAYER_SET(0);
 112:quantum/quantum.c ****     //   process_action(record, action);
 113:quantum/quantum.c ****     //   return false;
 114:quantum/quantum.c ****     // }
 115:quantum/quantum.c **** 
 116:quantum/quantum.c ****   if (!(
 416               		.loc 1 116 3 is_stmt 1 view .LVU90
 117:quantum/quantum.c ****     process_record_kb(keycode, record) &&
 417               		.loc 1 117 5 is_stmt 0 view .LVU91
 418 003a B801      		movw r22,r16
 419 003c 0E94 0000 		call process_record_kb
 420               	.LVL40:
 421               		.loc 1 117 40 view .LVU92
 422 0040 8823      		tst r24
 423 0042 01F4      		brne .+2
 424 0044 00C0      		rjmp .L27
 118:quantum/quantum.c ****   #ifdef MIDI_ENABLE
 119:quantum/quantum.c ****     process_midi(keycode, record) &&
 120:quantum/quantum.c ****   #endif
 121:quantum/quantum.c ****   #ifdef AUDIO_ENABLE
 122:quantum/quantum.c ****     process_music(keycode, record) &&
 123:quantum/quantum.c ****   #endif
 124:quantum/quantum.c ****   #ifdef TAP_DANCE_ENABLE
 125:quantum/quantum.c ****     process_tap_dance(keycode, record) &&
 126:quantum/quantum.c ****   #endif
 127:quantum/quantum.c ****   #ifndef DISABLE_LEADER
 128:quantum/quantum.c ****     process_leader(keycode, record) &&
 425               		.loc 1 128 5 discriminator 2 view .LVU93
 426 0046 B801      		movw r22,r16
 427 0048 CE01      		movw r24,r28
 428 004a 0E94 0000 		call process_leader
 429               	.LVL41:
 117:quantum/quantum.c ****     process_record_kb(keycode, record) &&
 430               		.loc 1 117 40 discriminator 2 view .LVU94
 431 004e 8823      		tst r24
 432 0050 01F4      		brne .+2
 433 0052 00C0      		rjmp .L27
 129:quantum/quantum.c ****   #endif
 130:quantum/quantum.c ****   #ifndef DISABLE_CHORDING
 131:quantum/quantum.c ****     process_chording(keycode, record) &&
 132:quantum/quantum.c ****   #endif
 133:quantum/quantum.c ****   #ifdef UNICODE_ENABLE
 134:quantum/quantum.c ****     process_unicode(keycode, record) &&
 135:quantum/quantum.c ****   #endif
 136:quantum/quantum.c ****   #ifdef UCIS_ENABLE
 137:quantum/quantum.c ****     process_ucis(keycode, record) &&
 138:quantum/quantum.c ****   #endif
 139:quantum/quantum.c ****   #ifdef PRINTING_ENABLE
 140:quantum/quantum.c ****     process_printer(keycode, record) &&
 141:quantum/quantum.c ****   #endif
 142:quantum/quantum.c ****   #ifdef UNICODEMAP_ENABLE
 143:quantum/quantum.c ****     process_unicode_map(keycode, record) &&
 144:quantum/quantum.c ****   #endif
 145:quantum/quantum.c ****       true)) {
 146:quantum/quantum.c ****     return false;
 147:quantum/quantum.c ****   }
 148:quantum/quantum.c **** 
 149:quantum/quantum.c ****   // Shift / paren setup
 150:quantum/quantum.c **** 
 151:quantum/quantum.c ****   switch(keycode) {
 434               		.loc 1 151 3 is_stmt 1 view .LVU95
 435 0054 C531      		cpi r28,21
 436 0056 F0E7      		ldi r31,112
 437 0058 DF07      		cpc r29,r31
 438 005a 00F4      		brsh .L35
 439 005c C230      		cpi r28,2
 440 005e 80E7      		ldi r24,112
 441 0060 D807      		cpc r29,r24
 442 0062 00F0      		brlo .+2
 443 0064 00C0      		rjmp .L36
 444 0066 C115      		cp r28,__zero_reg__
 445 0068 E0E7      		ldi r30,112
 446 006a DE07      		cpc r29,r30
 447 006c 01F0      		breq .L37
 448 006e C130      		cpi r28,1
 449 0070 D047      		sbci r29,112
 450 0072 01F0      		breq .L38
 451               	.L39:
 152:quantum/quantum.c ****     case RESET:
 153:quantum/quantum.c ****       if (record->event.pressed) {
 154:quantum/quantum.c ****         reset_keyboard();
 155:quantum/quantum.c ****       }
 156:quantum/quantum.c **** 	  return false;
 157:quantum/quantum.c ****       break;
 158:quantum/quantum.c ****     case DEBUG:
 159:quantum/quantum.c ****       if (record->event.pressed) {
 160:quantum/quantum.c ****           print("\nDEBUG: enabled.\n");
 161:quantum/quantum.c ****           debug_enable = true;
 162:quantum/quantum.c ****       }
 163:quantum/quantum.c **** 	  return false;
 164:quantum/quantum.c ****       break;
 165:quantum/quantum.c **** 	#ifdef RGBLIGHT_ENABLE
 166:quantum/quantum.c **** 	case RGB_TOG:
 167:quantum/quantum.c **** 		if (record->event.pressed) {
 168:quantum/quantum.c **** 			rgblight_toggle();
 169:quantum/quantum.c ****       }
 170:quantum/quantum.c **** 	  return false;
 171:quantum/quantum.c ****       break;
 172:quantum/quantum.c **** 	case RGB_MOD:
 173:quantum/quantum.c **** 		if (record->event.pressed) {
 174:quantum/quantum.c **** 			rgblight_step();
 175:quantum/quantum.c ****       }
 176:quantum/quantum.c **** 	  return false;
 177:quantum/quantum.c ****       break;
 178:quantum/quantum.c **** 	case RGB_HUI:
 179:quantum/quantum.c **** 		if (record->event.pressed) {
 180:quantum/quantum.c **** 			rgblight_increase_hue();
 181:quantum/quantum.c ****       }
 182:quantum/quantum.c **** 	  return false;
 183:quantum/quantum.c ****       break;
 184:quantum/quantum.c **** 	case RGB_HUD:
 185:quantum/quantum.c **** 		if (record->event.pressed) {
 186:quantum/quantum.c **** 			rgblight_decrease_hue();
 187:quantum/quantum.c ****       }
 188:quantum/quantum.c **** 	  return false;
 189:quantum/quantum.c ****       break;
 190:quantum/quantum.c **** 	case RGB_SAI:
 191:quantum/quantum.c **** 		if (record->event.pressed) {
 192:quantum/quantum.c **** 			rgblight_increase_sat();
 193:quantum/quantum.c ****       }
 194:quantum/quantum.c **** 	  return false;
 195:quantum/quantum.c ****       break;
 196:quantum/quantum.c **** 	case RGB_SAD:
 197:quantum/quantum.c **** 		if (record->event.pressed) {
 198:quantum/quantum.c **** 			rgblight_decrease_sat();
 199:quantum/quantum.c ****       }
 200:quantum/quantum.c **** 	  return false;
 201:quantum/quantum.c ****       break;
 202:quantum/quantum.c **** 	case RGB_VAI:
 203:quantum/quantum.c **** 		if (record->event.pressed) {
 204:quantum/quantum.c **** 			rgblight_increase_val();
 205:quantum/quantum.c ****       }
 206:quantum/quantum.c **** 	  return false;
 207:quantum/quantum.c ****       break;
 208:quantum/quantum.c **** 	case RGB_VAD:
 209:quantum/quantum.c **** 		if (record->event.pressed) {
 210:quantum/quantum.c **** 			rgblight_decrease_val();
 211:quantum/quantum.c ****       }
 212:quantum/quantum.c **** 	  return false;
 213:quantum/quantum.c ****       break;
 214:quantum/quantum.c **** 	#endif
 215:quantum/quantum.c ****     case MAGIC_SWAP_CONTROL_CAPSLOCK ... MAGIC_TOGGLE_NKRO:
 216:quantum/quantum.c ****       if (record->event.pressed) {
 217:quantum/quantum.c ****         // MAGIC actions (BOOTMAGIC without the boot)
 218:quantum/quantum.c ****         if (!eeconfig_is_enabled()) {
 219:quantum/quantum.c ****             eeconfig_init();
 220:quantum/quantum.c ****         }
 221:quantum/quantum.c ****         /* keymap config */
 222:quantum/quantum.c ****         keymap_config.raw = eeconfig_read_keymap();
 223:quantum/quantum.c ****         switch (keycode)
 224:quantum/quantum.c ****         {
 225:quantum/quantum.c ****           case MAGIC_SWAP_CONTROL_CAPSLOCK:
 226:quantum/quantum.c ****             keymap_config.swap_control_capslock = true;
 227:quantum/quantum.c ****             break;
 228:quantum/quantum.c ****           case MAGIC_CAPSLOCK_TO_CONTROL:
 229:quantum/quantum.c ****             keymap_config.capslock_to_control = true;
 230:quantum/quantum.c ****             break;
 231:quantum/quantum.c ****           case MAGIC_SWAP_LALT_LGUI:
 232:quantum/quantum.c ****             keymap_config.swap_lalt_lgui = true;
 233:quantum/quantum.c ****             break;
 234:quantum/quantum.c ****           case MAGIC_SWAP_RALT_RGUI:
 235:quantum/quantum.c ****             keymap_config.swap_ralt_rgui = true;
 236:quantum/quantum.c ****             break;
 237:quantum/quantum.c ****           case MAGIC_NO_GUI:
 238:quantum/quantum.c ****             keymap_config.no_gui = true;
 239:quantum/quantum.c ****             break;
 240:quantum/quantum.c ****           case MAGIC_SWAP_GRAVE_ESC:
 241:quantum/quantum.c ****             keymap_config.swap_grave_esc = true;
 242:quantum/quantum.c ****             break;
 243:quantum/quantum.c ****           case MAGIC_SWAP_BACKSLASH_BACKSPACE:
 244:quantum/quantum.c ****             keymap_config.swap_backslash_backspace = true;
 245:quantum/quantum.c ****             break;
 246:quantum/quantum.c ****           case MAGIC_HOST_NKRO:
 247:quantum/quantum.c ****             keymap_config.nkro = true;
 248:quantum/quantum.c ****             break;
 249:quantum/quantum.c ****           case MAGIC_SWAP_ALT_GUI:
 250:quantum/quantum.c ****             keymap_config.swap_lalt_lgui = true;
 251:quantum/quantum.c ****             keymap_config.swap_ralt_rgui = true;
 252:quantum/quantum.c ****             break;
 253:quantum/quantum.c ****           case MAGIC_UNSWAP_CONTROL_CAPSLOCK:
 254:quantum/quantum.c ****             keymap_config.swap_control_capslock = false;
 255:quantum/quantum.c ****             break;
 256:quantum/quantum.c ****           case MAGIC_UNCAPSLOCK_TO_CONTROL:
 257:quantum/quantum.c ****             keymap_config.capslock_to_control = false;
 258:quantum/quantum.c ****             break;
 259:quantum/quantum.c ****           case MAGIC_UNSWAP_LALT_LGUI:
 260:quantum/quantum.c ****             keymap_config.swap_lalt_lgui = false;
 261:quantum/quantum.c ****             break;
 262:quantum/quantum.c ****           case MAGIC_UNSWAP_RALT_RGUI:
 263:quantum/quantum.c ****             keymap_config.swap_ralt_rgui = false;
 264:quantum/quantum.c ****             break;
 265:quantum/quantum.c ****           case MAGIC_UNNO_GUI:
 266:quantum/quantum.c ****             keymap_config.no_gui = false;
 267:quantum/quantum.c ****             break;
 268:quantum/quantum.c ****           case MAGIC_UNSWAP_GRAVE_ESC:
 269:quantum/quantum.c ****             keymap_config.swap_grave_esc = false;
 270:quantum/quantum.c ****             break;
 271:quantum/quantum.c ****           case MAGIC_UNSWAP_BACKSLASH_BACKSPACE:
 272:quantum/quantum.c ****             keymap_config.swap_backslash_backspace = false;
 273:quantum/quantum.c ****             break;
 274:quantum/quantum.c ****           case MAGIC_UNHOST_NKRO:
 275:quantum/quantum.c ****             keymap_config.nkro = false;
 276:quantum/quantum.c ****             break;
 277:quantum/quantum.c ****           case MAGIC_UNSWAP_ALT_GUI:
 278:quantum/quantum.c ****             keymap_config.swap_lalt_lgui = false;
 279:quantum/quantum.c ****             keymap_config.swap_ralt_rgui = false;
 280:quantum/quantum.c ****             break;
 281:quantum/quantum.c ****           case MAGIC_TOGGLE_NKRO:
 282:quantum/quantum.c ****             keymap_config.nkro = !keymap_config.nkro;
 283:quantum/quantum.c ****             break;
 284:quantum/quantum.c ****           default:
 285:quantum/quantum.c ****             break;
 286:quantum/quantum.c ****         }
 287:quantum/quantum.c ****         eeconfig_update_keymap(keymap_config.raw);
 288:quantum/quantum.c ****         clear_keyboard(); // clear to prevent stuck keys
 289:quantum/quantum.c **** 
 290:quantum/quantum.c ****         return false;
 291:quantum/quantum.c ****       }
 292:quantum/quantum.c ****       break;
 293:quantum/quantum.c ****     case KC_LSPO: {
 294:quantum/quantum.c ****       if (record->event.pressed) {
 295:quantum/quantum.c ****         shift_interrupted[0] = false;
 296:quantum/quantum.c ****         scs_timer = timer_read ();
 297:quantum/quantum.c ****         register_mods(MOD_BIT(KC_LSFT));
 298:quantum/quantum.c ****       }
 299:quantum/quantum.c ****       else {
 300:quantum/quantum.c ****         #ifdef DISABLE_SPACE_CADET_ROLLOVER
 301:quantum/quantum.c ****           if (get_mods() & MOD_BIT(KC_RSFT)) {
 302:quantum/quantum.c ****             shift_interrupted[0] = true;
 303:quantum/quantum.c ****             shift_interrupted[1] = true;
 304:quantum/quantum.c ****           }
 305:quantum/quantum.c ****         #endif
 306:quantum/quantum.c ****         if (!shift_interrupted[0] && timer_elapsed(scs_timer) < TAPPING_TERM) {
 307:quantum/quantum.c ****           register_code(LSPO_KEY);
 308:quantum/quantum.c ****           unregister_code(LSPO_KEY);
 309:quantum/quantum.c ****         }
 310:quantum/quantum.c ****         unregister_mods(MOD_BIT(KC_LSFT));
 311:quantum/quantum.c ****       }
 312:quantum/quantum.c ****       return false;
 313:quantum/quantum.c ****       // break;
 314:quantum/quantum.c ****     }
 315:quantum/quantum.c **** 
 316:quantum/quantum.c ****     case KC_RSPC: {
 317:quantum/quantum.c ****       if (record->event.pressed) {
 318:quantum/quantum.c ****         shift_interrupted[1] = false;
 319:quantum/quantum.c ****         scs_timer = timer_read ();
 320:quantum/quantum.c ****         register_mods(MOD_BIT(KC_RSFT));
 321:quantum/quantum.c ****       }
 322:quantum/quantum.c ****       else {
 323:quantum/quantum.c ****         #ifdef DISABLE_SPACE_CADET_ROLLOVER
 324:quantum/quantum.c ****           if (get_mods() & MOD_BIT(KC_LSFT)) {
 325:quantum/quantum.c ****             shift_interrupted[0] = true;
 326:quantum/quantum.c ****             shift_interrupted[1] = true;
 327:quantum/quantum.c ****           }
 328:quantum/quantum.c ****         #endif
 329:quantum/quantum.c ****         if (!shift_interrupted[1] && timer_elapsed(scs_timer) < TAPPING_TERM) {
 330:quantum/quantum.c ****           register_code(RSPC_KEY);
 331:quantum/quantum.c ****           unregister_code(RSPC_KEY);
 332:quantum/quantum.c ****         }
 333:quantum/quantum.c ****         unregister_mods(MOD_BIT(KC_RSFT));
 334:quantum/quantum.c ****       }
 335:quantum/quantum.c ****       return false;
 336:quantum/quantum.c ****       // break;
 337:quantum/quantum.c ****     }
 338:quantum/quantum.c ****     default: {
 339:quantum/quantum.c ****       shift_interrupted[0] = true;
 452               		.loc 1 339 7 view .LVU96
 453               		.loc 1 339 28 is_stmt 0 view .LVU97
 454 0074 81E0      		ldi r24,lo8(1)
 455 0076 8093 0000 		sts shift_interrupted,r24
 340:quantum/quantum.c ****       shift_interrupted[1] = true;
 456               		.loc 1 340 7 is_stmt 1 view .LVU98
 457               		.loc 1 340 28 is_stmt 0 view .LVU99
 458 007a 8093 0000 		sts shift_interrupted+1,r24
 341:quantum/quantum.c ****       break;
 459               		.loc 1 341 7 is_stmt 1 view .LVU100
 460               	.L42:
 342:quantum/quantum.c ****     }
 343:quantum/quantum.c ****   }
 344:quantum/quantum.c **** 
 345:quantum/quantum.c ****   return process_action_kb(record);
 461               		.loc 1 345 3 view .LVU101
 462               		.loc 1 345 10 is_stmt 0 view .LVU102
 463 007e C801      		movw r24,r16
 464               	/* epilogue start */
 346:quantum/quantum.c **** }
 465               		.loc 1 346 1 view .LVU103
 466 0080 DF91      		pop r29
 467 0082 CF91      		pop r28
 468               	.LVL42:
 469               		.loc 1 346 1 view .LVU104
 470 0084 1F91      		pop r17
 471 0086 0F91      		pop r16
 472               	.LVL43:
 473               		.loc 1 346 1 view .LVU105
 474 0088 FF90      		pop r15
 345:quantum/quantum.c **** }
 475               		.loc 1 345 10 view .LVU106
 476 008a 0C94 0000 		jmp process_action_kb
 477               	.LVL44:
 478               	.L29:
 479               	.LBB13:
 101:quantum/quantum.c ****       }
 480               		.loc 1 101 9 is_stmt 1 view .LVU107
 101:quantum/quantum.c ****       }
 481               		.loc 1 101 17 is_stmt 0 view .LVU108
 482 008e CE01      		movw r24,r28
 483 0090 0E94 0000 		call read_source_layers_cache
 484               	.LVL45:
 485 0094 F82E      		mov r15,r24
 486               	.LVL46:
 101:quantum/quantum.c ****       }
 487               		.loc 1 101 17 view .LVU109
 488 0096 00C0      		rjmp .L30
 489               	.LVL47:
 490               	.L28:
 101:quantum/quantum.c ****       }
 491               		.loc 1 101 17 view .LVU110
 492               	.LBE13:
 106:quantum/quantum.c **** 
 493               		.loc 1 106 5 is_stmt 1 view .LVU111
 106:quantum/quantum.c **** 
 494               		.loc 1 106 37 is_stmt 0 view .LVU112
 495 0098 CE01      		movw r24,r28
 496 009a 0E94 0000 		call layer_switch_get_layer
 497               	.LVL48:
 106:quantum/quantum.c **** 
 498               		.loc 1 106 15 view .LVU113
 499 009e BE01      		movw r22,r28
 500 00a0 00C0      		rjmp .L85
 501               	.LVL49:
 502               	.L35:
 151:quantum/quantum.c ****     case RESET:
 503               		.loc 1 151 3 view .LVU114
 504 00a2 CC33      		cpi r28,60
 505 00a4 80E7      		ldi r24,112
 506 00a6 D807      		cpc r29,r24
 507 00a8 01F4      		brne .+2
 508 00aa 00C0      		rjmp .L40
 509 00ac CD33      		cpi r28,61
 510 00ae D047      		sbci r29,112
 511 00b0 01F4      		brne .L39
 317:quantum/quantum.c ****         shift_interrupted[1] = false;
 512               		.loc 1 317 7 is_stmt 1 view .LVU115
 317:quantum/quantum.c ****         shift_interrupted[1] = false;
 513               		.loc 1 317 24 is_stmt 0 view .LVU116
 514 00b2 F801      		movw r30,r16
 515 00b4 8281      		ldd r24,Z+2
 317:quantum/quantum.c ****         shift_interrupted[1] = false;
 516               		.loc 1 317 10 view .LVU117
 517 00b6 8823      		tst r24
 518 00b8 01F4      		brne .+2
 519 00ba 00C0      		rjmp .L69
 318:quantum/quantum.c ****         scs_timer = timer_read ();
 520               		.loc 1 318 9 is_stmt 1 view .LVU118
 318:quantum/quantum.c ****         scs_timer = timer_read ();
 521               		.loc 1 318 30 is_stmt 0 view .LVU119
 522 00bc 1092 0000 		sts shift_interrupted+1,__zero_reg__
 319:quantum/quantum.c ****         register_mods(MOD_BIT(KC_RSFT));
 523               		.loc 1 319 9 is_stmt 1 view .LVU120
 319:quantum/quantum.c ****         register_mods(MOD_BIT(KC_RSFT));
 524               		.loc 1 319 21 is_stmt 0 view .LVU121
 525 00c0 0E94 0000 		call timer_read
 526               	.LVL50:
 319:quantum/quantum.c ****         register_mods(MOD_BIT(KC_RSFT));
 527               		.loc 1 319 19 view .LVU122
 528 00c4 9093 0000 		sts scs_timer+1,r25
 529 00c8 8093 0000 		sts scs_timer,r24
 320:quantum/quantum.c ****       }
 530               		.loc 1 320 9 is_stmt 1 view .LVU123
 531 00cc 80E2      		ldi r24,lo8(32)
 532 00ce 00C0      		rjmp .L87
 533               	.L37:
 153:quantum/quantum.c ****         reset_keyboard();
 534               		.loc 1 153 7 view .LVU124
 153:quantum/quantum.c ****         reset_keyboard();
 535               		.loc 1 153 10 is_stmt 0 view .LVU125
 536 00d0 F801      		movw r30,r16
 537 00d2 8281      		ldd r24,Z+2
 538 00d4 8111      		cpse r24,__zero_reg__
 154:quantum/quantum.c ****       }
 539               		.loc 1 154 9 is_stmt 1 view .LVU126
 540 00d6 0E94 0000 		call reset_keyboard
 541               	.LVL51:
 542               	.L27:
 543               		.loc 1 346 1 is_stmt 0 view .LVU127
 544 00da 80E0      		ldi r24,0
 545               	/* epilogue start */
 546 00dc DF91      		pop r29
 547 00de CF91      		pop r28
 548               	.LVL52:
 549               		.loc 1 346 1 view .LVU128
 550 00e0 1F91      		pop r17
 551 00e2 0F91      		pop r16
 552               	.LVL53:
 553               		.loc 1 346 1 view .LVU129
 554 00e4 FF90      		pop r15
 555 00e6 0895      		ret
 556               	.LVL54:
 557               	.L38:
 157:quantum/quantum.c ****     case DEBUG:
 558               		.loc 1 157 7 is_stmt 1 view .LVU130
 159:quantum/quantum.c ****           print("\nDEBUG: enabled.\n");
 559               		.loc 1 159 7 view .LVU131
 159:quantum/quantum.c ****           print("\nDEBUG: enabled.\n");
 560               		.loc 1 159 10 is_stmt 0 view .LVU132
 561 00e8 F801      		movw r30,r16
 562 00ea 8281      		ldd r24,Z+2
 563 00ec 8823      		tst r24
 564 00ee 01F0      		breq .L27
 160:quantum/quantum.c ****           debug_enable = true;
 565               		.loc 1 160 39 is_stmt 1 view .LVU133
 161:quantum/quantum.c ****       }
 566               		.loc 1 161 11 view .LVU134
 161:quantum/quantum.c ****       }
 567               		.loc 1 161 24 is_stmt 0 view .LVU135
 568 00f0 8091 0000 		lds r24,debug_config
 569 00f4 8160      		ori r24,lo8(1<<0)
 570 00f6 8093 0000 		sts debug_config,r24
 571 00fa 00C0      		rjmp .L27
 572               	.L36:
 164:quantum/quantum.c **** 	#ifdef RGBLIGHT_ENABLE
 573               		.loc 1 164 7 is_stmt 1 view .LVU136
 216:quantum/quantum.c ****         // MAGIC actions (BOOTMAGIC without the boot)
 574               		.loc 1 216 7 view .LVU137
 216:quantum/quantum.c ****         // MAGIC actions (BOOTMAGIC without the boot)
 575               		.loc 1 216 10 is_stmt 0 view .LVU138
 576 00fc F801      		movw r30,r16
 577 00fe 8281      		ldd r24,Z+2
 578 0100 8823      		tst r24
 579 0102 01F4      		brne .+2
 580 0104 00C0      		rjmp .L42
 218:quantum/quantum.c ****             eeconfig_init();
 581               		.loc 1 218 9 is_stmt 1 view .LVU139
 218:quantum/quantum.c ****             eeconfig_init();
 582               		.loc 1 218 14 is_stmt 0 view .LVU140
 583 0106 0E94 0000 		call eeconfig_is_enabled
 584               	.LVL55:
 218:quantum/quantum.c ****             eeconfig_init();
 585               		.loc 1 218 12 view .LVU141
 586 010a 8111      		cpse r24,__zero_reg__
 587 010c 00C0      		rjmp .L43
 219:quantum/quantum.c ****         }
 588               		.loc 1 219 13 is_stmt 1 view .LVU142
 589 010e 0E94 0000 		call eeconfig_init
 590               	.LVL56:
 591               	.L43:
 222:quantum/quantum.c ****         switch (keycode)
 592               		.loc 1 222 9 view .LVU143
 222:quantum/quantum.c ****         switch (keycode)
 593               		.loc 1 222 29 is_stmt 0 view .LVU144
 594 0112 0E94 0000 		call eeconfig_read_keymap
 595               	.LVL57:
 596 0116 90E0      		ldi r25,0
 597 0118 9093 0000 		sts keymap_config+1,r25
 598 011c 8093 0000 		sts keymap_config,r24
 223:quantum/quantum.c ****         {
 599               		.loc 1 223 9 is_stmt 1 view .LVU145
 600 0120 FE01      		movw r30,r28
 601 0122 E350      		subi r30,3
 602 0124 F047      		sbci r31,112
 226:quantum/quantum.c ****             break;
 603               		.loc 1 226 49 is_stmt 0 view .LVU146
 604 0126 8091 0000 		lds r24,keymap_config
 605 012a 8160      		ori r24,lo8(1<<0)
 606 012c E231      		cpi r30,18
 607 012e F105      		cpc r31,__zero_reg__
 608 0130 00F4      		brsh .L86
 609 0132 E050      		subi r30,lo8(-(gs(.L46)))
 610 0134 F040      		sbci r31,hi8(-(gs(.L46)))
 611 0136 0C94 0000 		jmp __tablejump2__
 612               		.section	.jumptables.gcc.process_record_quantum,"a",@progbits
 613               		.p2align	1
 614               	.L46:
 615 0000 0000      		.word gs(.L63)
 616 0002 0000      		.word gs(.L62)
 617 0004 0000      		.word gs(.L61)
 618 0006 0000      		.word gs(.L60)
 619 0008 0000      		.word gs(.L59)
 620 000a 0000      		.word gs(.L58)
 621 000c 0000      		.word gs(.L57)
 622 000e 0000      		.word gs(.L56)
 623 0010 0000      		.word gs(.L55)
 624 0012 0000      		.word gs(.L54)
 625 0014 0000      		.word gs(.L53)
 626 0016 0000      		.word gs(.L52)
 627 0018 0000      		.word gs(.L51)
 628 001a 0000      		.word gs(.L50)
 629 001c 0000      		.word gs(.L49)
 630 001e 0000      		.word gs(.L48)
 631 0020 0000      		.word gs(.L47)
 632 0022 0000      		.word gs(.L45)
 633               		.section	.text.process_record_quantum
 634               	.L63:
 229:quantum/quantum.c ****             break;
 635               		.loc 1 229 13 is_stmt 1 view .LVU147
 229:quantum/quantum.c ****             break;
 636               		.loc 1 229 47 is_stmt 0 view .LVU148
 637 013a 8091 0000 		lds r24,keymap_config
 638 013e 8260      		ori r24,lo8(1<<1)
 639               	.L86:
 282:quantum/quantum.c ****             break;
 640               		.loc 1 282 32 view .LVU149
 641 0140 8093 0000 		sts keymap_config,r24
 283:quantum/quantum.c ****           default:
 642               		.loc 1 283 13 is_stmt 1 view .LVU150
 287:quantum/quantum.c ****         clear_keyboard(); // clear to prevent stuck keys
 643               		.loc 1 287 9 view .LVU151
 644 0144 8091 0000 		lds r24,keymap_config
 645 0148 0E94 0000 		call eeconfig_update_keymap
 646               	.LVL58:
 288:quantum/quantum.c **** 
 647               		.loc 1 288 9 view .LVU152
 648 014c 0E94 0000 		call clear_keyboard
 649               	.LVL59:
 290:quantum/quantum.c ****       }
 650               		.loc 1 290 9 view .LVU153
 290:quantum/quantum.c ****       }
 651               		.loc 1 290 16 is_stmt 0 view .LVU154
 652 0150 00C0      		rjmp .L27
 653               	.L62:
 232:quantum/quantum.c ****             break;
 654               		.loc 1 232 13 is_stmt 1 view .LVU155
 232:quantum/quantum.c ****             break;
 655               		.loc 1 232 42 is_stmt 0 view .LVU156
 656 0152 8091 0000 		lds r24,keymap_config
 657 0156 8460      		ori r24,lo8(1<<2)
 658 0158 00C0      		rjmp .L86
 659               	.L61:
 235:quantum/quantum.c ****             break;
 660               		.loc 1 235 13 is_stmt 1 view .LVU157
 235:quantum/quantum.c ****             break;
 661               		.loc 1 235 42 is_stmt 0 view .LVU158
 662 015a 8091 0000 		lds r24,keymap_config
 663 015e 8860      		ori r24,lo8(1<<3)
 664 0160 00C0      		rjmp .L86
 665               	.L60:
 238:quantum/quantum.c ****             break;
 666               		.loc 1 238 13 is_stmt 1 view .LVU159
 238:quantum/quantum.c ****             break;
 667               		.loc 1 238 34 is_stmt 0 view .LVU160
 668 0162 8091 0000 		lds r24,keymap_config
 669 0166 8061      		ori r24,lo8(1<<4)
 670 0168 00C0      		rjmp .L86
 671               	.L59:
 241:quantum/quantum.c ****             break;
 672               		.loc 1 241 13 is_stmt 1 view .LVU161
 241:quantum/quantum.c ****             break;
 673               		.loc 1 241 42 is_stmt 0 view .LVU162
 674 016a 8091 0000 		lds r24,keymap_config
 675 016e 8062      		ori r24,lo8(1<<5)
 676 0170 00C0      		rjmp .L86
 677               	.L58:
 244:quantum/quantum.c ****             break;
 678               		.loc 1 244 13 is_stmt 1 view .LVU163
 244:quantum/quantum.c ****             break;
 679               		.loc 1 244 52 is_stmt 0 view .LVU164
 680 0172 8091 0000 		lds r24,keymap_config
 681 0176 8064      		ori r24,lo8(1<<6)
 682 0178 00C0      		rjmp .L86
 683               	.L57:
 247:quantum/quantum.c ****             break;
 684               		.loc 1 247 13 is_stmt 1 view .LVU165
 247:quantum/quantum.c ****             break;
 685               		.loc 1 247 32 is_stmt 0 view .LVU166
 686 017a 8091 0000 		lds r24,keymap_config
 687 017e 8068      		ori r24,lo8(1<<7)
 688 0180 00C0      		rjmp .L86
 689               	.L56:
 250:quantum/quantum.c ****             keymap_config.swap_ralt_rgui = true;
 690               		.loc 1 250 13 is_stmt 1 view .LVU167
 251:quantum/quantum.c ****             break;
 691               		.loc 1 251 13 view .LVU168
 250:quantum/quantum.c ****             keymap_config.swap_ralt_rgui = true;
 692               		.loc 1 250 42 is_stmt 0 view .LVU169
 693 0182 8091 0000 		lds r24,keymap_config
 694 0186 8C60      		ori r24,lo8(12)
 695 0188 00C0      		rjmp .L86
 696               	.L55:
 254:quantum/quantum.c ****             break;
 697               		.loc 1 254 13 is_stmt 1 view .LVU170
 254:quantum/quantum.c ****             break;
 698               		.loc 1 254 49 is_stmt 0 view .LVU171
 699 018a 8091 0000 		lds r24,keymap_config
 700 018e 8E7F      		andi r24,lo8(~(1<<0))
 701 0190 00C0      		rjmp .L86
 702               	.L54:
 257:quantum/quantum.c ****             break;
 703               		.loc 1 257 13 is_stmt 1 view .LVU172
 257:quantum/quantum.c ****             break;
 704               		.loc 1 257 47 is_stmt 0 view .LVU173
 705 0192 8091 0000 		lds r24,keymap_config
 706 0196 8D7F      		andi r24,lo8(~(1<<1))
 707 0198 00C0      		rjmp .L86
 708               	.L53:
 260:quantum/quantum.c ****             break;
 709               		.loc 1 260 13 is_stmt 1 view .LVU174
 260:quantum/quantum.c ****             break;
 710               		.loc 1 260 42 is_stmt 0 view .LVU175
 711 019a 8091 0000 		lds r24,keymap_config
 712 019e 8B7F      		andi r24,lo8(~(1<<2))
 713 01a0 00C0      		rjmp .L86
 714               	.L52:
 263:quantum/quantum.c ****             break;
 715               		.loc 1 263 13 is_stmt 1 view .LVU176
 263:quantum/quantum.c ****             break;
 716               		.loc 1 263 42 is_stmt 0 view .LVU177
 717 01a2 8091 0000 		lds r24,keymap_config
 718 01a6 877F      		andi r24,lo8(~(1<<3))
 719 01a8 00C0      		rjmp .L86
 720               	.L51:
 266:quantum/quantum.c ****             break;
 721               		.loc 1 266 13 is_stmt 1 view .LVU178
 266:quantum/quantum.c ****             break;
 722               		.loc 1 266 34 is_stmt 0 view .LVU179
 723 01aa 8091 0000 		lds r24,keymap_config
 724 01ae 8F7E      		andi r24,lo8(~(1<<4))
 725 01b0 00C0      		rjmp .L86
 726               	.L50:
 269:quantum/quantum.c ****             break;
 727               		.loc 1 269 13 is_stmt 1 view .LVU180
 269:quantum/quantum.c ****             break;
 728               		.loc 1 269 42 is_stmt 0 view .LVU181
 729 01b2 8091 0000 		lds r24,keymap_config
 730 01b6 8F7D      		andi r24,lo8(~(1<<5))
 731 01b8 00C0      		rjmp .L86
 732               	.L49:
 272:quantum/quantum.c ****             break;
 733               		.loc 1 272 13 is_stmt 1 view .LVU182
 272:quantum/quantum.c ****             break;
 734               		.loc 1 272 52 is_stmt 0 view .LVU183
 735 01ba 8091 0000 		lds r24,keymap_config
 736 01be 8F7B      		andi r24,lo8(~(1<<6))
 737 01c0 00C0      		rjmp .L86
 738               	.L48:
 275:quantum/quantum.c ****             break;
 739               		.loc 1 275 13 is_stmt 1 view .LVU184
 275:quantum/quantum.c ****             break;
 740               		.loc 1 275 32 is_stmt 0 view .LVU185
 741 01c2 8091 0000 		lds r24,keymap_config
 742 01c6 8F77      		andi r24,lo8(~(1<<7))
 743 01c8 00C0      		rjmp .L86
 744               	.L47:
 278:quantum/quantum.c ****             keymap_config.swap_ralt_rgui = false;
 745               		.loc 1 278 13 is_stmt 1 view .LVU186
 279:quantum/quantum.c ****             break;
 746               		.loc 1 279 13 view .LVU187
 278:quantum/quantum.c ****             keymap_config.swap_ralt_rgui = false;
 747               		.loc 1 278 42 is_stmt 0 view .LVU188
 748 01ca 8091 0000 		lds r24,keymap_config
 749 01ce 837F      		andi r24,lo8(-13)
 750 01d0 00C0      		rjmp .L86
 751               	.L45:
 282:quantum/quantum.c ****             break;
 752               		.loc 1 282 13 is_stmt 1 view .LVU189
 282:quantum/quantum.c ****             break;
 753               		.loc 1 282 48 is_stmt 0 view .LVU190
 754 01d2 9091 0000 		lds r25,keymap_config
 282:quantum/quantum.c ****             break;
 755               		.loc 1 282 32 view .LVU191
 756 01d6 892F      		mov r24,r25
 757 01d8 97FB      		bst r25,7
 758 01da 87F9      		bld r24,7
 759 01dc 8058      		subi r24,0x80
 760 01de 00C0      		rjmp .L86
 761               	.L40:
 294:quantum/quantum.c ****         shift_interrupted[0] = false;
 762               		.loc 1 294 7 is_stmt 1 view .LVU192
 294:quantum/quantum.c ****         shift_interrupted[0] = false;
 763               		.loc 1 294 24 is_stmt 0 view .LVU193
 764 01e0 F801      		movw r30,r16
 765 01e2 8281      		ldd r24,Z+2
 294:quantum/quantum.c ****         shift_interrupted[0] = false;
 766               		.loc 1 294 10 view .LVU194
 767 01e4 8823      		tst r24
 768 01e6 01F0      		breq .L65
 295:quantum/quantum.c ****         scs_timer = timer_read ();
 769               		.loc 1 295 9 is_stmt 1 view .LVU195
 295:quantum/quantum.c ****         scs_timer = timer_read ();
 770               		.loc 1 295 30 is_stmt 0 view .LVU196
 771 01e8 1092 0000 		sts shift_interrupted,__zero_reg__
 296:quantum/quantum.c ****         register_mods(MOD_BIT(KC_LSFT));
 772               		.loc 1 296 9 is_stmt 1 view .LVU197
 296:quantum/quantum.c ****         register_mods(MOD_BIT(KC_LSFT));
 773               		.loc 1 296 21 is_stmt 0 view .LVU198
 774 01ec 0E94 0000 		call timer_read
 775               	.LVL60:
 296:quantum/quantum.c ****         register_mods(MOD_BIT(KC_LSFT));
 776               		.loc 1 296 19 view .LVU199
 777 01f0 9093 0000 		sts scs_timer+1,r25
 778 01f4 8093 0000 		sts scs_timer,r24
 297:quantum/quantum.c ****       }
 779               		.loc 1 297 9 is_stmt 1 view .LVU200
 780 01f8 82E0      		ldi r24,lo8(2)
 781               	.L87:
 320:quantum/quantum.c ****       }
 782               		.loc 1 320 9 is_stmt 0 view .LVU201
 783 01fa 0E94 0000 		call register_mods
 784               	.LVL61:
 785 01fe 00C0      		rjmp .L27
 786               	.L65:
 306:quantum/quantum.c ****           register_code(LSPO_KEY);
 787               		.loc 1 306 9 is_stmt 1 view .LVU202
 306:quantum/quantum.c ****           register_code(LSPO_KEY);
 788               		.loc 1 306 12 is_stmt 0 view .LVU203
 789 0200 8091 0000 		lds r24,shift_interrupted
 790 0204 8111      		cpse r24,__zero_reg__
 791 0206 00C0      		rjmp .L67
 306:quantum/quantum.c ****           register_code(LSPO_KEY);
 792               		.loc 1 306 38 discriminator 1 view .LVU204
 793 0208 8091 0000 		lds r24,scs_timer
 794 020c 9091 0000 		lds r25,scs_timer+1
 795 0210 0E94 0000 		call timer_elapsed
 796               	.LVL62:
 306:quantum/quantum.c ****           register_code(LSPO_KEY);
 797               		.loc 1 306 35 discriminator 1 view .LVU205
 798 0214 883C      		cpi r24,-56
 799 0216 9105      		cpc r25,__zero_reg__
 800 0218 00F4      		brsh .L67
 307:quantum/quantum.c ****           unregister_code(LSPO_KEY);
 801               		.loc 1 307 11 is_stmt 1 view .LVU206
 802 021a 86E2      		ldi r24,lo8(38)
 803 021c 0E94 0000 		call register_code
 804               	.LVL63:
 308:quantum/quantum.c ****         }
 805               		.loc 1 308 11 view .LVU207
 806 0220 86E2      		ldi r24,lo8(38)
 807 0222 0E94 0000 		call unregister_code
 808               	.LVL64:
 809               	.L67:
 310:quantum/quantum.c ****       }
 810               		.loc 1 310 9 view .LVU208
 811 0226 82E0      		ldi r24,lo8(2)
 812               	.L88:
 333:quantum/quantum.c ****       }
 813               		.loc 1 333 9 is_stmt 0 view .LVU209
 814 0228 0E94 0000 		call unregister_mods
 815               	.LVL65:
 816 022c 00C0      		rjmp .L27
 817               	.L69:
 329:quantum/quantum.c ****           register_code(RSPC_KEY);
 818               		.loc 1 329 9 is_stmt 1 view .LVU210
 329:quantum/quantum.c ****           register_code(RSPC_KEY);
 819               		.loc 1 329 12 is_stmt 0 view .LVU211
 820 022e 8091 0000 		lds r24,shift_interrupted+1
 821 0232 8111      		cpse r24,__zero_reg__
 822 0234 00C0      		rjmp .L71
 329:quantum/quantum.c ****           register_code(RSPC_KEY);
 823               		.loc 1 329 38 discriminator 1 view .LVU212
 824 0236 8091 0000 		lds r24,scs_timer
 825 023a 9091 0000 		lds r25,scs_timer+1
 826 023e 0E94 0000 		call timer_elapsed
 827               	.LVL66:
 329:quantum/quantum.c ****           register_code(RSPC_KEY);
 828               		.loc 1 329 35 discriminator 1 view .LVU213
 829 0242 883C      		cpi r24,-56
 830 0244 9105      		cpc r25,__zero_reg__
 831 0246 00F4      		brsh .L71
 330:quantum/quantum.c ****           unregister_code(RSPC_KEY);
 832               		.loc 1 330 11 is_stmt 1 view .LVU214
 833 0248 87E2      		ldi r24,lo8(39)
 834 024a 0E94 0000 		call register_code
 835               	.LVL67:
 331:quantum/quantum.c ****         }
 836               		.loc 1 331 11 view .LVU215
 837 024e 87E2      		ldi r24,lo8(39)
 838 0250 0E94 0000 		call unregister_code
 839               	.LVL68:
 840               	.L71:
 333:quantum/quantum.c ****       }
 841               		.loc 1 333 9 view .LVU216
 842 0254 80E2      		ldi r24,lo8(32)
 843 0256 00C0      		rjmp .L88
 844               		.cfi_endproc
 845               	.LFE118:
 847               		.section	.text.send_string,"ax",@progbits
 848               	.global	send_string
 850               	send_string:
 851               	.LVL69:
 852               	.LFB119:
 347:quantum/quantum.c **** 
 348:quantum/quantum.c **** const bool ascii_to_qwerty_shift_lut[0x80] PROGMEM = {
 349:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 350:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 351:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 352:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 353:quantum/quantum.c ****     0, 1, 1, 1, 1, 1, 1, 0,
 354:quantum/quantum.c ****     1, 1, 1, 1, 0, 0, 0, 0,
 355:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 356:quantum/quantum.c ****     0, 0, 1, 0, 1, 0, 1, 1,
 357:quantum/quantum.c ****     1, 1, 1, 1, 1, 1, 1, 1,
 358:quantum/quantum.c ****     1, 1, 1, 1, 1, 1, 1, 1,
 359:quantum/quantum.c ****     1, 1, 1, 1, 1, 1, 1, 1,
 360:quantum/quantum.c ****     1, 1, 1, 0, 0, 0, 1, 1,
 361:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 362:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 363:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 364:quantum/quantum.c ****     0, 0, 0, 1, 1, 1, 1, 0
 365:quantum/quantum.c **** };
 366:quantum/quantum.c **** 
 367:quantum/quantum.c **** const uint8_t ascii_to_qwerty_keycode_lut[0x80] PROGMEM = {
 368:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 369:quantum/quantum.c ****     KC_BSPC, KC_TAB, KC_ENT, 0, 0, 0, 0, 0,
 370:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 371:quantum/quantum.c ****     0, 0, 0, KC_ESC, 0, 0, 0, 0,
 372:quantum/quantum.c ****     KC_SPC, KC_1, KC_QUOT, KC_3, KC_4, KC_5, KC_7, KC_QUOT,
 373:quantum/quantum.c ****     KC_9, KC_0, KC_8, KC_EQL, KC_COMM, KC_MINS, KC_DOT, KC_SLSH,
 374:quantum/quantum.c ****     KC_0, KC_1, KC_2, KC_3, KC_4, KC_5, KC_6, KC_7,
 375:quantum/quantum.c ****     KC_8, KC_9, KC_SCLN, KC_SCLN, KC_COMM, KC_EQL, KC_DOT, KC_SLSH,
 376:quantum/quantum.c ****     KC_2, KC_A, KC_B, KC_C, KC_D, KC_E, KC_F, KC_G,
 377:quantum/quantum.c ****     KC_H, KC_I, KC_J, KC_K, KC_L, KC_M, KC_N, KC_O,
 378:quantum/quantum.c ****     KC_P, KC_Q, KC_R, KC_S, KC_T, KC_U, KC_V, KC_W,
 379:quantum/quantum.c ****     KC_X, KC_Y, KC_Z, KC_LBRC, KC_BSLS, KC_RBRC, KC_6, KC_MINS,
 380:quantum/quantum.c ****     KC_GRV, KC_A, KC_B, KC_C, KC_D, KC_E, KC_F, KC_G,
 381:quantum/quantum.c ****     KC_H, KC_I, KC_J, KC_K, KC_L, KC_M, KC_N, KC_O,
 382:quantum/quantum.c ****     KC_P, KC_Q, KC_R, KC_S, KC_T, KC_U, KC_V, KC_W,
 383:quantum/quantum.c ****     KC_X, KC_Y, KC_Z, KC_LBRC, KC_BSLS, KC_RBRC, KC_GRV, KC_DEL
 384:quantum/quantum.c **** };
 385:quantum/quantum.c **** 
 386:quantum/quantum.c **** /* for users whose OSes are set to Colemak */
 387:quantum/quantum.c **** #if 0
 388:quantum/quantum.c **** #include "keymap_colemak.h"
 389:quantum/quantum.c **** 
 390:quantum/quantum.c **** const bool ascii_to_colemak_shift_lut[0x80] PROGMEM = {
 391:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 392:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 393:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 394:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 395:quantum/quantum.c ****     0, 1, 1, 1, 1, 1, 1, 0,
 396:quantum/quantum.c ****     1, 1, 1, 1, 0, 0, 0, 0,
 397:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 398:quantum/quantum.c ****     0, 0, 1, 0, 1, 0, 1, 1,
 399:quantum/quantum.c ****     1, 1, 1, 1, 1, 1, 1, 1,
 400:quantum/quantum.c ****     1, 1, 1, 1, 1, 1, 1, 1,
 401:quantum/quantum.c ****     1, 1, 1, 1, 1, 1, 1, 1,
 402:quantum/quantum.c ****     1, 1, 1, 0, 0, 0, 1, 1,
 403:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 404:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 405:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 406:quantum/quantum.c ****     0, 0, 0, 1, 1, 1, 1, 0
 407:quantum/quantum.c **** };
 408:quantum/quantum.c **** 
 409:quantum/quantum.c **** const uint8_t ascii_to_colemak_keycode_lut[0x80] PROGMEM = {
 410:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 411:quantum/quantum.c ****     KC_BSPC, KC_TAB, KC_ENT, 0, 0, 0, 0, 0,
 412:quantum/quantum.c ****     0, 0, 0, 0, 0, 0, 0, 0,
 413:quantum/quantum.c ****     0, 0, 0, KC_ESC, 0, 0, 0, 0,
 414:quantum/quantum.c ****     KC_SPC, KC_1, KC_QUOT, KC_3, KC_4, KC_5, KC_7, KC_QUOT,
 415:quantum/quantum.c ****     KC_9, KC_0, KC_8, KC_EQL, KC_COMM, KC_MINS, KC_DOT, KC_SLSH,
 416:quantum/quantum.c ****     KC_0, KC_1, KC_2, KC_3, KC_4, KC_5, KC_6, KC_7,
 417:quantum/quantum.c ****     KC_8, KC_9, CM_SCLN, CM_SCLN, KC_COMM, KC_EQL, KC_DOT, KC_SLSH,
 418:quantum/quantum.c ****     KC_2, CM_A, CM_B, CM_C, CM_D, CM_E, CM_F, CM_G,
 419:quantum/quantum.c ****     CM_H, CM_I, CM_J, CM_K, CM_L, CM_M, CM_N, CM_O,
 420:quantum/quantum.c ****     CM_P, CM_Q, CM_R, CM_S, CM_T, CM_U, CM_V, CM_W,
 421:quantum/quantum.c ****     CM_X, CM_Y, CM_Z, KC_LBRC, KC_BSLS, KC_RBRC, KC_6, KC_MINS,
 422:quantum/quantum.c ****     KC_GRV, CM_A, CM_B, CM_C, CM_D, CM_E, CM_F, CM_G,
 423:quantum/quantum.c ****     CM_H, CM_I, CM_J, CM_K, CM_L, CM_M, CM_N, CM_O,
 424:quantum/quantum.c ****     CM_P, CM_Q, CM_R, CM_S, CM_T, CM_U, CM_V, CM_W,
 425:quantum/quantum.c ****     CM_X, CM_Y, CM_Z, KC_LBRC, KC_BSLS, KC_RBRC, KC_GRV, KC_DEL
 426:quantum/quantum.c **** };
 427:quantum/quantum.c **** 
 428:quantum/quantum.c **** #endif
 429:quantum/quantum.c **** 
 430:quantum/quantum.c **** void send_string(const char *str) {
 853               		.loc 1 430 35 view -0
 854               		.cfi_startproc
 855               		.loc 1 430 35 is_stmt 0 view .LVU218
 856 0000 0F93      		push r16
 857               	.LCFI12:
 858               		.cfi_def_cfa_offset 3
 859               		.cfi_offset 16, -2
 860 0002 1F93      		push r17
 861               	.LCFI13:
 862               		.cfi_def_cfa_offset 4
 863               		.cfi_offset 17, -3
 864 0004 CF93      		push r28
 865               	.LCFI14:
 866               		.cfi_def_cfa_offset 5
 867               		.cfi_offset 28, -4
 868               	/* prologue: function */
 869               	/* frame size = 0 */
 870               	/* stack size = 3 */
 871               	.L__stack_usage = 3
 872 0006 8C01      		movw r16,r24
 873               	.LVL70:
 874               	.L93:
 431:quantum/quantum.c ****     while (1) {
 875               		.loc 1 431 5 is_stmt 1 view .LVU219
 876               	.LBB14:
 432:quantum/quantum.c ****         uint8_t keycode;
 877               		.loc 1 432 9 view .LVU220
 433:quantum/quantum.c ****         uint8_t ascii_code = pgm_read_byte(str);
 878               		.loc 1 433 9 view .LVU221
 879               	.LBB15:
 880               		.loc 1 433 30 view .LVU222
 881               		.loc 1 433 30 view .LVU223
 882               		.loc 1 433 30 view .LVU224
 883 0008 F801      		movw r30,r16
 884               	/* #APP */
 885               	 ;  433 "quantum/quantum.c" 1
 886 000a 2491      		lpm r18, Z
 887               		
 888               	 ;  0 "" 2
 889               	.LVL71:
 890               		.loc 1 433 30 view .LVU225
 891               		.loc 1 433 30 is_stmt 0 view .LVU226
 892               	/* #NOAPP */
 893               	.LBE15:
 434:quantum/quantum.c ****         if (!ascii_code) break;
 894               		.loc 1 434 9 is_stmt 1 view .LVU227
 895               		.loc 1 434 12 is_stmt 0 view .LVU228
 896 000c 2223      		tst r18
 897 000e 01F0      		breq .L89
 435:quantum/quantum.c ****         keycode = pgm_read_byte(&ascii_to_qwerty_keycode_lut[ascii_code]);
 898               		.loc 1 435 9 is_stmt 1 view .LVU229
 899               	.LBB16:
 900               		.loc 1 435 19 view .LVU230
 901 0010 30E0      		ldi r19,0
 902               	.LVL72:
 903               		.loc 1 435 19 view .LVU231
 904               		.loc 1 435 19 view .LVU232
 905 0012 F901      		movw r30,r18
 906 0014 E050      		subi r30,lo8(-(ascii_to_qwerty_keycode_lut))
 907 0016 F040      		sbci r31,hi8(-(ascii_to_qwerty_keycode_lut))
 908               	.LVL73:
 909               		.loc 1 435 19 is_stmt 0 view .LVU233
 910               	/* #APP */
 911               	 ;  435 "quantum/quantum.c" 1
 912 0018 C491      		lpm r28, Z
 913               		
 914               	 ;  0 "" 2
 915               	.LVL74:
 916               		.loc 1 435 19 is_stmt 1 view .LVU234
 917               		.loc 1 435 19 is_stmt 0 view .LVU235
 918               	/* #NOAPP */
 919               	.LBE16:
 436:quantum/quantum.c ****         if (pgm_read_byte(&ascii_to_qwerty_shift_lut[ascii_code])) {
 920               		.loc 1 436 9 is_stmt 1 view .LVU236
 921               	.LBB17:
 922               		.loc 1 436 13 view .LVU237
 923               		.loc 1 436 13 view .LVU238
 924               		.loc 1 436 13 view .LVU239
 925 001a 2050      		subi r18,lo8(-(ascii_to_qwerty_shift_lut))
 926 001c 3040      		sbci r19,hi8(-(ascii_to_qwerty_shift_lut))
 927               	.LVL75:
 928               		.loc 1 436 13 is_stmt 0 view .LVU240
 929 001e F901      		movw r30,r18
 930               	.LVL76:
 931               		.loc 1 436 13 view .LVU241
 932               	/* #APP */
 933               	 ;  436 "quantum/quantum.c" 1
 934 0020 2491      		lpm r18, Z
 935               		
 936               	 ;  0 "" 2
 937               	.LVL77:
 938               		.loc 1 436 13 is_stmt 1 view .LVU242
 939               	/* #NOAPP */
 940               	.LBE17:
 941               		.loc 1 436 12 is_stmt 0 view .LVU243
 942 0022 2223      		tst r18
 943 0024 01F0      		breq .L91
 437:quantum/quantum.c ****             register_code(KC_LSFT);
 944               		.loc 1 437 13 is_stmt 1 view .LVU244
 945 0026 81EE      		ldi r24,lo8(-31)
 946 0028 0E94 0000 		call register_code
 947               	.LVL78:
 438:quantum/quantum.c ****             register_code(keycode);
 948               		.loc 1 438 13 view .LVU245
 949 002c 8C2F      		mov r24,r28
 950 002e 0E94 0000 		call register_code
 951               	.LVL79:
 439:quantum/quantum.c ****             unregister_code(keycode);
 952               		.loc 1 439 13 view .LVU246
 953 0032 8C2F      		mov r24,r28
 954 0034 0E94 0000 		call unregister_code
 955               	.LVL80:
 440:quantum/quantum.c ****             unregister_code(KC_LSFT);
 956               		.loc 1 440 13 view .LVU247
 957 0038 81EE      		ldi r24,lo8(-31)
 958               	.L94:
 441:quantum/quantum.c ****         }
 442:quantum/quantum.c ****         else {
 443:quantum/quantum.c ****             register_code(keycode);
 444:quantum/quantum.c ****             unregister_code(keycode);
 959               		.loc 1 444 13 is_stmt 0 view .LVU248
 960 003a 0E94 0000 		call unregister_code
 961               	.LVL81:
 445:quantum/quantum.c ****         }
 446:quantum/quantum.c ****         ++str;
 962               		.loc 1 446 9 is_stmt 1 view .LVU249
 963 003e 0F5F      		subi r16,-1
 964 0040 1F4F      		sbci r17,-1
 965               	.LVL82:
 966               		.loc 1 446 9 is_stmt 0 view .LVU250
 967               	.LBE14:
 431:quantum/quantum.c ****         uint8_t keycode;
 968               		.loc 1 431 11 is_stmt 1 view .LVU251
 431:quantum/quantum.c ****         uint8_t keycode;
 969               		.loc 1 431 15 is_stmt 0 view .LVU252
 970 0042 00C0      		rjmp .L93
 971               	.LVL83:
 972               	.L91:
 973               	.LBB18:
 443:quantum/quantum.c ****             unregister_code(keycode);
 974               		.loc 1 443 13 is_stmt 1 view .LVU253
 975 0044 8C2F      		mov r24,r28
 976 0046 0E94 0000 		call register_code
 977               	.LVL84:
 444:quantum/quantum.c ****         }
 978               		.loc 1 444 13 view .LVU254
 979 004a 8C2F      		mov r24,r28
 980 004c 00C0      		rjmp .L94
 981               	.LVL85:
 982               	.L89:
 983               	/* epilogue start */
 444:quantum/quantum.c ****         }
 984               		.loc 1 444 13 is_stmt 0 view .LVU255
 985               	.LBE18:
 447:quantum/quantum.c ****     }
 448:quantum/quantum.c **** }
 986               		.loc 1 448 1 view .LVU256
 987 004e CF91      		pop r28
 988 0050 1F91      		pop r17
 989 0052 0F91      		pop r16
 990               	.LVL86:
 991               		.loc 1 448 1 view .LVU257
 992 0054 0895      		ret
 993               		.cfi_endproc
 994               	.LFE119:
 996               		.section	.text.update_tri_layer,"ax",@progbits
 997               	.global	update_tri_layer
 999               	update_tri_layer:
 1000               	.LVL87:
 1001               	.LFB120:
 449:quantum/quantum.c **** 
 450:quantum/quantum.c **** void update_tri_layer(uint8_t layer1, uint8_t layer2, uint8_t layer3) {
 1002               		.loc 1 450 71 is_stmt 1 view -0
 1003               		.cfi_startproc
 1004               		.loc 1 450 71 is_stmt 0 view .LVU259
 1005 0000 8F92      		push r8
 1006               	.LCFI15:
 1007               		.cfi_def_cfa_offset 3
 1008               		.cfi_offset 8, -2
 1009 0002 9F92      		push r9
 1010               	.LCFI16:
 1011               		.cfi_def_cfa_offset 4
 1012               		.cfi_offset 9, -3
 1013 0004 AF92      		push r10
 1014               	.LCFI17:
 1015               		.cfi_def_cfa_offset 5
 1016               		.cfi_offset 10, -4
 1017 0006 BF92      		push r11
 1018               	.LCFI18:
 1019               		.cfi_def_cfa_offset 6
 1020               		.cfi_offset 11, -5
 1021 0008 CF92      		push r12
 1022               	.LCFI19:
 1023               		.cfi_def_cfa_offset 7
 1024               		.cfi_offset 12, -6
 1025 000a DF92      		push r13
 1026               	.LCFI20:
 1027               		.cfi_def_cfa_offset 8
 1028               		.cfi_offset 13, -7
 1029 000c EF92      		push r14
 1030               	.LCFI21:
 1031               		.cfi_def_cfa_offset 9
 1032               		.cfi_offset 14, -8
 1033 000e FF92      		push r15
 1034               	.LCFI22:
 1035               		.cfi_def_cfa_offset 10
 1036               		.cfi_offset 15, -9
 1037 0010 0F93      		push r16
 1038               	.LCFI23:
 1039               		.cfi_def_cfa_offset 11
 1040               		.cfi_offset 16, -10
 1041 0012 1F93      		push r17
 1042               	.LCFI24:
 1043               		.cfi_def_cfa_offset 12
 1044               		.cfi_offset 17, -11
 1045               	/* prologue: function */
 1046               	/* frame size = 0 */
 1047               	/* stack size = 10 */
 1048               	.L__stack_usage = 10
 451:quantum/quantum.c ****   if (IS_LAYER_ON(layer1) && IS_LAYER_ON(layer2)) {
 1049               		.loc 1 451 3 is_stmt 1 view .LVU260
 1050 0014 C12C      		mov r12,__zero_reg__
 1051 0016 D12C      		mov r13,__zero_reg__
 1052 0018 7601      		movw r14,r12
 1053 001a C394      		inc r12
 1054 001c 9701      		movw r18,r14
 1055 001e 8601      		movw r16,r12
 1056 0020 00C0      		rjmp 2f
 1057               		1:
 1058 0022 000F      		lsl r16
 1059 0024 111F      		rol r17
 1060 0026 221F      		rol r18
 1061 0028 331F      		rol r19
 1062               		2:
 1063 002a 6A95      		dec r22
 1064 002c 02F4      		brpl 1b
 1065 002e 4601      		movw r8,r12
 1066 0030 5701      		movw r10,r14
 1067 0032 00C0      		rjmp 2f
 1068               		1:
 1069 0034 880C      		lsl r8
 1070 0036 991C      		rol r9
 1071 0038 AA1C      		rol r10
 1072 003a BB1C      		rol r11
 1073               		2:
 1074 003c 8A95      		dec r24
 1075 003e 02F4      		brpl 1b
 1076 0040 D501      		movw r26,r10
 1077 0042 C401      		movw r24,r8
 1078               	.LVL88:
 1079               		.loc 1 451 3 is_stmt 0 view .LVU261
 1080 0044 802B      		or r24,r16
 1081 0046 912B      		or r25,r17
 1082 0048 A22B      		or r26,r18
 1083 004a B32B      		or r27,r19
 1084               		.loc 1 451 27 view .LVU262
 1085 004c 0091 0000 		lds r16,layer_state
 1086 0050 1091 0000 		lds r17,layer_state+1
 1087 0054 2091 0000 		lds r18,layer_state+2
 1088 0058 3091 0000 		lds r19,layer_state+3
 1089 005c 0823      		and r16,r24
 1090 005e 1923      		and r17,r25
 1091 0060 2A23      		and r18,r26
 1092 0062 3B23      		and r19,r27
 1093 0064 8017      		cp r24,r16
 1094 0066 9107      		cpc r25,r17
 1095 0068 A207      		cpc r26,r18
 1096 006a B307      		cpc r27,r19
 1097 006c 01F4      		brne .L96
 452:quantum/quantum.c ****     layer_on(layer3);
 1098               		.loc 1 452 5 is_stmt 1 view .LVU263
 1099 006e 842F      		mov r24,r20
 1100               	/* epilogue start */
 453:quantum/quantum.c ****   } else {
 454:quantum/quantum.c ****     layer_off(layer3);
 455:quantum/quantum.c ****   }
 456:quantum/quantum.c **** }
 1101               		.loc 1 456 1 is_stmt 0 view .LVU264
 1102 0070 1F91      		pop r17
 1103 0072 0F91      		pop r16
 1104 0074 FF90      		pop r15
 1105 0076 EF90      		pop r14
 1106 0078 DF90      		pop r13
 1107 007a CF90      		pop r12
 1108 007c BF90      		pop r11
 1109 007e AF90      		pop r10
 1110 0080 9F90      		pop r9
 1111 0082 8F90      		pop r8
 452:quantum/quantum.c ****     layer_on(layer3);
 1112               		.loc 1 452 5 view .LVU265
 1113 0084 0C94 0000 		jmp layer_on
 1114               	.LVL89:
 1115               	.L96:
 454:quantum/quantum.c ****   }
 1116               		.loc 1 454 5 is_stmt 1 view .LVU266
 1117 0088 842F      		mov r24,r20
 1118               	/* epilogue start */
 1119               		.loc 1 456 1 is_stmt 0 view .LVU267
 1120 008a 1F91      		pop r17
 1121 008c 0F91      		pop r16
 1122 008e FF90      		pop r15
 1123 0090 EF90      		pop r14
 1124 0092 DF90      		pop r13
 1125 0094 CF90      		pop r12
 1126 0096 BF90      		pop r11
 1127 0098 AF90      		pop r10
 1128 009a 9F90      		pop r9
 1129 009c 8F90      		pop r8
 454:quantum/quantum.c ****   }
 1130               		.loc 1 454 5 view .LVU268
 1131 009e 0C94 0000 		jmp layer_off
 1132               	.LVL90:
 454:quantum/quantum.c ****   }
 1133               		.loc 1 454 5 view .LVU269
 1134               		.cfi_endproc
 1135               	.LFE120:
 1137               		.section	.text.tap_random_base64,"ax",@progbits
 1138               	.global	tap_random_base64
 1140               	tap_random_base64:
 1141               	.LFB121:
 457:quantum/quantum.c **** 
 458:quantum/quantum.c **** void tap_random_base64(void) {
 1142               		.loc 1 458 30 is_stmt 1 view -0
 1143               		.cfi_startproc
 1144 0000 CF93      		push r28
 1145               	.LCFI25:
 1146               		.cfi_def_cfa_offset 3
 1147               		.cfi_offset 28, -2
 1148 0002 DF93      		push r29
 1149               	.LCFI26:
 1150               		.cfi_def_cfa_offset 4
 1151               		.cfi_offset 29, -3
 1152               	/* prologue: function */
 1153               	/* frame size = 0 */
 1154               	/* stack size = 2 */
 1155               	.L__stack_usage = 2
 459:quantum/quantum.c ****   #if defined(__AVR_ATmega32U4__)
 460:quantum/quantum.c ****     uint8_t key = (TCNT0 + TCNT1 + TCNT3 + TCNT4) % 64;
 1156               		.loc 1 460 5 view .LVU271
 1157               		.loc 1 460 20 is_stmt 0 view .LVU272
 1158 0004 46B5      		in r20,0x26
 1159               		.loc 1 460 28 view .LVU273
 1160 0006 2091 8400 		lds r18,132
 1161 000a 3091 8500 		lds r19,132+1
 1162               		.loc 1 460 36 view .LVU274
 1163 000e C091 9400 		lds r28,148
 1164 0012 D091 9500 		lds r29,148+1
 1165               		.loc 1 460 44 view .LVU275
 1166 0016 8091 BE00 		lds r24,190
 1167 001a 9091 BF00 		lds r25,190+1
 1168               		.loc 1 460 34 view .LVU276
 1169 001e C20F      		add r28,r18
 1170 0020 C40F      		add r28,r20
 1171               		.loc 1 460 42 view .LVU277
 1172 0022 C80F      		add r28,r24
 1173               		.loc 1 460 13 view .LVU278
 1174 0024 CF73      		andi r28,lo8(63)
 1175               	.LVL91:
 461:quantum/quantum.c ****   #else
 462:quantum/quantum.c ****     uint8_t key = rand() % 64;
 463:quantum/quantum.c ****   #endif
 464:quantum/quantum.c ****   switch (key) {
 1176               		.loc 1 464 3 is_stmt 1 view .LVU279
 1177 0026 CE33      		cpi r28,lo8(62)
 1178 0028 00F4      		brsh .L98
 1179 002a C533      		cpi r28,lo8(53)
 1180 002c 00F4      		brsh .L99
 1181 002e CA31      		cpi r28,lo8(26)
 1182 0030 00F0      		brlo .L100
 1183 0032 C433      		cpi r28,lo8(52)
 1184 0034 00F4      		brsh .L105
 465:quantum/quantum.c ****     case 0 ... 25:
 466:quantum/quantum.c ****       register_code(KC_LSFT);
 467:quantum/quantum.c ****       register_code(key + KC_A);
 468:quantum/quantum.c ****       unregister_code(key + KC_A);
 469:quantum/quantum.c ****       unregister_code(KC_LSFT);
 470:quantum/quantum.c ****       break;
 471:quantum/quantum.c ****     case 26 ... 51:
 472:quantum/quantum.c ****       register_code(key - 26 + KC_A);
 1185               		.loc 1 472 7 view .LVU280
 1186 0036 C651      		subi r28,lo8(-(-22))
 1187               	.LVL92:
 1188               	.L108:
 473:quantum/quantum.c ****       unregister_code(key - 26 + KC_A);
 474:quantum/quantum.c ****       break;
 475:quantum/quantum.c ****     case 52:
 476:quantum/quantum.c ****       register_code(KC_0);
 477:quantum/quantum.c ****       unregister_code(KC_0);
 478:quantum/quantum.c ****       break;
 479:quantum/quantum.c ****     case 53 ... 61:
 480:quantum/quantum.c ****       register_code(key - 53 + KC_1);
 1189               		.loc 1 480 7 is_stmt 0 view .LVU281
 1190 0038 8C2F      		mov r24,r28
 1191 003a 0E94 0000 		call register_code
 1192               	.LVL93:
 481:quantum/quantum.c ****       unregister_code(key - 53 + KC_1);
 1193               		.loc 1 481 7 is_stmt 1 view .LVU282
 1194 003e 8C2F      		mov r24,r28
 1195 0040 00C0      		rjmp .L106
 1196               	.LVL94:
 1197               	.L98:
 464:quantum/quantum.c ****     case 0 ... 25:
 1198               		.loc 1 464 3 is_stmt 0 view .LVU283
 1199 0042 CE33      		cpi r28,lo8(62)
 1200 0044 01F0      		breq .L103
 1201 0046 CF33      		cpi r28,lo8(63)
 1202 0048 01F0      		breq .L104
 1203               	.L100:
 466:quantum/quantum.c ****       register_code(key + KC_A);
 1204               		.loc 1 466 7 is_stmt 1 view .LVU284
 1205 004a 81EE      		ldi r24,lo8(-31)
 1206 004c 0E94 0000 		call register_code
 1207               	.LVL95:
 467:quantum/quantum.c ****       unregister_code(key + KC_A);
 1208               		.loc 1 467 7 view .LVU285
 1209 0050 CC5F      		subi r28,lo8(-(4))
 1210               	.LVL96:
 467:quantum/quantum.c ****       unregister_code(key + KC_A);
 1211               		.loc 1 467 7 is_stmt 0 view .LVU286
 1212 0052 8C2F      		mov r24,r28
 1213 0054 0E94 0000 		call register_code
 1214               	.LVL97:
 468:quantum/quantum.c ****       unregister_code(KC_LSFT);
 1215               		.loc 1 468 7 is_stmt 1 view .LVU287
 1216 0058 8C2F      		mov r24,r28
 1217               	.LVL98:
 1218               	.L107:
 482:quantum/quantum.c ****       break;
 483:quantum/quantum.c ****     case 62:
 484:quantum/quantum.c ****       register_code(KC_LSFT);
 485:quantum/quantum.c ****       register_code(KC_EQL);
 486:quantum/quantum.c ****       unregister_code(KC_EQL);
 1219               		.loc 1 486 7 is_stmt 0 view .LVU288
 1220 005a 0E94 0000 		call unregister_code
 1221               	.LVL99:
 487:quantum/quantum.c ****       unregister_code(KC_LSFT);
 1222               		.loc 1 487 7 is_stmt 1 view .LVU289
 1223 005e 81EE      		ldi r24,lo8(-31)
 1224 0060 00C0      		rjmp .L106
 1225               	.LVL100:
 1226               	.L105:
 476:quantum/quantum.c ****       unregister_code(KC_0);
 1227               		.loc 1 476 7 view .LVU290
 1228 0062 87E2      		ldi r24,lo8(39)
 1229 0064 0E94 0000 		call register_code
 1230               	.LVL101:
 477:quantum/quantum.c ****       break;
 1231               		.loc 1 477 7 view .LVU291
 1232 0068 87E2      		ldi r24,lo8(39)
 1233               	.LVL102:
 1234               	.L106:
 1235               	/* epilogue start */
 488:quantum/quantum.c ****       break;
 489:quantum/quantum.c ****     case 63:
 490:quantum/quantum.c ****       register_code(KC_SLSH);
 491:quantum/quantum.c ****       unregister_code(KC_SLSH);
 492:quantum/quantum.c ****       break;
 493:quantum/quantum.c ****   }
 494:quantum/quantum.c **** }
 1236               		.loc 1 494 1 is_stmt 0 view .LVU292
 1237 006a DF91      		pop r29
 1238 006c CF91      		pop r28
 491:quantum/quantum.c ****       break;
 1239               		.loc 1 491 7 view .LVU293
 1240 006e 0C94 0000 		jmp unregister_code
 1241               	.LVL103:
 1242               	.L99:
 480:quantum/quantum.c ****       unregister_code(key - 53 + KC_1);
 1243               		.loc 1 480 7 is_stmt 1 view .LVU294
 1244 0072 C751      		subi r28,lo8(-(-23))
 1245               	.LVL104:
 480:quantum/quantum.c ****       unregister_code(key - 53 + KC_1);
 1246               		.loc 1 480 7 is_stmt 0 view .LVU295
 1247 0074 00C0      		rjmp .L108
 1248               	.LVL105:
 1249               	.L103:
 484:quantum/quantum.c ****       register_code(KC_EQL);
 1250               		.loc 1 484 7 is_stmt 1 view .LVU296
 1251 0076 81EE      		ldi r24,lo8(-31)
 1252 0078 0E94 0000 		call register_code
 1253               	.LVL106:
 485:quantum/quantum.c ****       unregister_code(KC_EQL);
 1254               		.loc 1 485 7 view .LVU297
 1255 007c 8EE2      		ldi r24,lo8(46)
 1256 007e 0E94 0000 		call register_code
 1257               	.LVL107:
 486:quantum/quantum.c ****       unregister_code(KC_LSFT);
 1258               		.loc 1 486 7 view .LVU298
 1259 0082 8EE2      		ldi r24,lo8(46)
 1260 0084 00C0      		rjmp .L107
 1261               	.L104:
 490:quantum/quantum.c ****       unregister_code(KC_SLSH);
 1262               		.loc 1 490 7 view .LVU299
 1263 0086 88E3      		ldi r24,lo8(56)
 1264 0088 0E94 0000 		call register_code
 1265               	.LVL108:
 491:quantum/quantum.c ****       break;
 1266               		.loc 1 491 7 view .LVU300
 1267 008c 88E3      		ldi r24,lo8(56)
 1268 008e 00C0      		rjmp .L106
 1269               		.cfi_endproc
 1270               	.LFE121:
 1272               		.section	.text.matrix_init_quantum,"ax",@progbits
 1273               	.global	matrix_init_quantum
 1275               	matrix_init_quantum:
 1276               	.LFB122:
 495:quantum/quantum.c **** 
 496:quantum/quantum.c **** void matrix_init_quantum() {
 1277               		.loc 1 496 28 view -0
 1278               		.cfi_startproc
 1279               	/* prologue: function */
 1280               	/* frame size = 0 */
 1281               	/* stack size = 0 */
 1282               	.L__stack_usage = 0
 497:quantum/quantum.c ****   #ifdef BACKLIGHT_ENABLE
 498:quantum/quantum.c ****     backlight_init_ports();
 499:quantum/quantum.c ****   #endif
 500:quantum/quantum.c ****   matrix_init_kb();
 1283               		.loc 1 500 3 view .LVU302
 1284 0000 0C94 0000 		jmp matrix_init_kb
 1285               	.LVL109:
 1286               		.cfi_endproc
 1287               	.LFE122:
 1289               		.section	.text.matrix_scan_quantum,"ax",@progbits
 1290               	.global	matrix_scan_quantum
 1292               	matrix_scan_quantum:
 1293               	.LFB123:
 501:quantum/quantum.c **** }
 502:quantum/quantum.c **** 
 503:quantum/quantum.c **** void matrix_scan_quantum() {
 1294               		.loc 1 503 28 view -0
 1295               		.cfi_startproc
 1296               	/* prologue: function */
 1297               	/* frame size = 0 */
 1298               	/* stack size = 0 */
 1299               	.L__stack_usage = 0
 504:quantum/quantum.c ****   #ifdef AUDIO_ENABLE
 505:quantum/quantum.c ****     matrix_scan_music();
 506:quantum/quantum.c ****   #endif
 507:quantum/quantum.c **** 
 508:quantum/quantum.c ****   #ifdef TAP_DANCE_ENABLE
 509:quantum/quantum.c ****     matrix_scan_tap_dance();
 510:quantum/quantum.c ****   #endif
 511:quantum/quantum.c ****   matrix_scan_kb();
 1300               		.loc 1 511 3 view .LVU304
 1301 0000 0C94 0000 		jmp matrix_scan_kb
 1302               	.LVL110:
 1303               		.cfi_endproc
 1304               	.LFE123:
 1306               		.section	.text.backlight_init_ports,"ax",@progbits
 1307               		.weak	backlight_init_ports
 1309               	backlight_init_ports:
 1310               	.LFB142:
 1311               		.cfi_startproc
 1312               	/* prologue: function */
 1313               	/* frame size = 0 */
 1314               	/* stack size = 0 */
 1315               	.L__stack_usage = 0
 1316               	/* epilogue start */
 1317 0000 0895      		ret
 1318               		.cfi_endproc
 1319               	.LFE142:
 1321               		.section	.text.send_nibble,"ax",@progbits
 1322               	.global	send_nibble
 1324               	send_nibble:
 1325               	.LVL111:
 1326               	.LFB129:
 512:quantum/quantum.c **** }
 513:quantum/quantum.c **** 
 514:quantum/quantum.c **** #if defined(BACKLIGHT_ENABLE) && defined(BACKLIGHT_PIN)
 515:quantum/quantum.c **** 
 516:quantum/quantum.c **** static const uint8_t backlight_pin = BACKLIGHT_PIN;
 517:quantum/quantum.c **** 
 518:quantum/quantum.c **** #if BACKLIGHT_PIN == B7
 519:quantum/quantum.c **** #  define COM1x1 COM1C1
 520:quantum/quantum.c **** #  define OCR1x  OCR1C
 521:quantum/quantum.c **** #elif BACKLIGHT_PIN == B6
 522:quantum/quantum.c **** #  define COM1x1 COM1B1
 523:quantum/quantum.c **** #  define OCR1x  OCR1B
 524:quantum/quantum.c **** #elif BACKLIGHT_PIN == B5
 525:quantum/quantum.c **** #  define COM1x1 COM1A1
 526:quantum/quantum.c **** #  define OCR1x  OCR1A
 527:quantum/quantum.c **** #else
 528:quantum/quantum.c **** #  error "Backlight pin not supported - use B5, B6, or B7"
 529:quantum/quantum.c **** #endif
 530:quantum/quantum.c **** 
 531:quantum/quantum.c **** __attribute__ ((weak))
 532:quantum/quantum.c **** void backlight_init_ports(void)
 533:quantum/quantum.c **** {
 534:quantum/quantum.c **** 
 535:quantum/quantum.c ****   // Setup backlight pin as output and output low.
 536:quantum/quantum.c ****   // DDRx |= n
 537:quantum/quantum.c ****   _SFR_IO8((backlight_pin >> 4) + 1) |= _BV(backlight_pin & 0xF);
 538:quantum/quantum.c ****   // PORTx &= ~n
 539:quantum/quantum.c ****   _SFR_IO8((backlight_pin >> 4) + 2) &= ~_BV(backlight_pin & 0xF);
 540:quantum/quantum.c **** 
 541:quantum/quantum.c ****   // Use full 16-bit resolution.
 542:quantum/quantum.c ****   ICR1 = 0xFFFF;
 543:quantum/quantum.c **** 
 544:quantum/quantum.c ****   // I could write a wall of text here to explain... but TL;DW
 545:quantum/quantum.c ****   // Go read the ATmega32u4 datasheet.
 546:quantum/quantum.c ****   // And this: http://blog.saikoled.com/post/43165849837/secret-konami-cheat-code-to-high-resolutio
 547:quantum/quantum.c **** 
 548:quantum/quantum.c ****   // Pin PB7 = OCR1C (Timer 1, Channel C)
 549:quantum/quantum.c ****   // Compare Output Mode = Clear on compare match, Channel C = COM1C1=1 COM1C0=0
 550:quantum/quantum.c ****   // (i.e. start high, go low when counter matches.)
 551:quantum/quantum.c ****   // WGM Mode 14 (Fast PWM) = WGM13=1 WGM12=1 WGM11=1 WGM10=0
 552:quantum/quantum.c ****   // Clock Select = clk/1 (no prescaling) = CS12=0 CS11=0 CS10=1
 553:quantum/quantum.c **** 
 554:quantum/quantum.c ****   TCCR1A = _BV(COM1x1) | _BV(WGM11); // = 0b00001010;
 555:quantum/quantum.c ****   TCCR1B = _BV(WGM13) | _BV(WGM12) | _BV(CS10); // = 0b00011001;
 556:quantum/quantum.c **** 
 557:quantum/quantum.c ****   backlight_init();
 558:quantum/quantum.c ****   #ifdef BACKLIGHT_BREATHING
 559:quantum/quantum.c ****     breathing_defaults();
 560:quantum/quantum.c ****   #endif
 561:quantum/quantum.c **** }
 562:quantum/quantum.c **** 
 563:quantum/quantum.c **** __attribute__ ((weak))
 564:quantum/quantum.c **** void backlight_set(uint8_t level)
 565:quantum/quantum.c **** {
 566:quantum/quantum.c ****   // Prevent backlight blink on lowest level
 567:quantum/quantum.c ****   // PORTx &= ~n
 568:quantum/quantum.c ****   _SFR_IO8((backlight_pin >> 4) + 2) &= ~_BV(backlight_pin & 0xF);
 569:quantum/quantum.c **** 
 570:quantum/quantum.c ****   if ( level == 0 ) {
 571:quantum/quantum.c ****     // Turn off PWM control on backlight pin, revert to output low.
 572:quantum/quantum.c ****     TCCR1A &= ~(_BV(COM1x1));
 573:quantum/quantum.c ****     OCR1x = 0x0;
 574:quantum/quantum.c ****   } else if ( level == BACKLIGHT_LEVELS ) {
 575:quantum/quantum.c ****     // Turn on PWM control of backlight pin
 576:quantum/quantum.c ****     TCCR1A |= _BV(COM1x1);
 577:quantum/quantum.c ****     // Set the brightness
 578:quantum/quantum.c ****     OCR1x = 0xFFFF;
 579:quantum/quantum.c ****   } else {
 580:quantum/quantum.c ****     // Turn on PWM control of backlight pin
 581:quantum/quantum.c ****     TCCR1A |= _BV(COM1x1);
 582:quantum/quantum.c ****     // Set the brightness
 583:quantum/quantum.c ****     OCR1x = 0xFFFF >> ((BACKLIGHT_LEVELS - level) * ((BACKLIGHT_LEVELS + 1) / 2));
 584:quantum/quantum.c ****   }
 585:quantum/quantum.c **** 
 586:quantum/quantum.c ****   #ifdef BACKLIGHT_BREATHING
 587:quantum/quantum.c ****     breathing_intensity_default();
 588:quantum/quantum.c ****   #endif
 589:quantum/quantum.c **** }
 590:quantum/quantum.c **** 
 591:quantum/quantum.c **** 
 592:quantum/quantum.c **** #ifdef BACKLIGHT_BREATHING
 593:quantum/quantum.c **** 
 594:quantum/quantum.c **** #define BREATHING_NO_HALT  0
 595:quantum/quantum.c **** #define BREATHING_HALT_OFF 1
 596:quantum/quantum.c **** #define BREATHING_HALT_ON  2
 597:quantum/quantum.c **** 
 598:quantum/quantum.c **** static uint8_t breath_intensity;
 599:quantum/quantum.c **** static uint8_t breath_speed;
 600:quantum/quantum.c **** static uint16_t breathing_index;
 601:quantum/quantum.c **** static uint8_t breathing_halt;
 602:quantum/quantum.c **** 
 603:quantum/quantum.c **** void breathing_enable(void)
 604:quantum/quantum.c **** {
 605:quantum/quantum.c ****     if (get_backlight_level() == 0)
 606:quantum/quantum.c ****     {
 607:quantum/quantum.c ****         breathing_index = 0;
 608:quantum/quantum.c ****     }
 609:quantum/quantum.c ****     else
 610:quantum/quantum.c ****     {
 611:quantum/quantum.c ****         // Set breathing_index to be at the midpoint (brightest point)
 612:quantum/quantum.c ****         breathing_index = 0x20 << breath_speed;
 613:quantum/quantum.c ****     }
 614:quantum/quantum.c **** 
 615:quantum/quantum.c ****     breathing_halt = BREATHING_NO_HALT;
 616:quantum/quantum.c **** 
 617:quantum/quantum.c ****     // Enable breathing interrupt
 618:quantum/quantum.c ****     TIMSK1 |= _BV(OCIE1A);
 619:quantum/quantum.c **** }
 620:quantum/quantum.c **** 
 621:quantum/quantum.c **** void breathing_pulse(void)
 622:quantum/quantum.c **** {
 623:quantum/quantum.c ****     if (get_backlight_level() == 0)
 624:quantum/quantum.c ****     {
 625:quantum/quantum.c ****         breathing_index = 0;
 626:quantum/quantum.c ****     }
 627:quantum/quantum.c ****     else
 628:quantum/quantum.c ****     {
 629:quantum/quantum.c ****         // Set breathing_index to be at the midpoint + 1 (brightest point)
 630:quantum/quantum.c ****         breathing_index = 0x21 << breath_speed;
 631:quantum/quantum.c ****     }
 632:quantum/quantum.c **** 
 633:quantum/quantum.c ****     breathing_halt = BREATHING_HALT_ON;
 634:quantum/quantum.c **** 
 635:quantum/quantum.c ****     // Enable breathing interrupt
 636:quantum/quantum.c ****     TIMSK1 |= _BV(OCIE1A);
 637:quantum/quantum.c **** }
 638:quantum/quantum.c **** 
 639:quantum/quantum.c **** void breathing_disable(void)
 640:quantum/quantum.c **** {
 641:quantum/quantum.c ****     // Disable breathing interrupt
 642:quantum/quantum.c ****     TIMSK1 &= ~_BV(OCIE1A);
 643:quantum/quantum.c ****     backlight_set(get_backlight_level());
 644:quantum/quantum.c **** }
 645:quantum/quantum.c **** 
 646:quantum/quantum.c **** void breathing_self_disable(void)
 647:quantum/quantum.c **** {
 648:quantum/quantum.c ****     if (get_backlight_level() == 0)
 649:quantum/quantum.c ****     {
 650:quantum/quantum.c ****         breathing_halt = BREATHING_HALT_OFF;
 651:quantum/quantum.c ****     }
 652:quantum/quantum.c ****     else
 653:quantum/quantum.c ****     {
 654:quantum/quantum.c ****         breathing_halt = BREATHING_HALT_ON;
 655:quantum/quantum.c ****     }
 656:quantum/quantum.c **** 
 657:quantum/quantum.c ****     //backlight_set(get_backlight_level());
 658:quantum/quantum.c **** }
 659:quantum/quantum.c **** 
 660:quantum/quantum.c **** void breathing_toggle(void)
 661:quantum/quantum.c **** {
 662:quantum/quantum.c ****     if (!is_breathing())
 663:quantum/quantum.c ****     {
 664:quantum/quantum.c ****         if (get_backlight_level() == 0)
 665:quantum/quantum.c ****         {
 666:quantum/quantum.c ****             breathing_index = 0;
 667:quantum/quantum.c ****         }
 668:quantum/quantum.c ****         else
 669:quantum/quantum.c ****         {
 670:quantum/quantum.c ****             // Set breathing_index to be at the midpoint + 1 (brightest point)
 671:quantum/quantum.c ****             breathing_index = 0x21 << breath_speed;
 672:quantum/quantum.c ****         }
 673:quantum/quantum.c **** 
 674:quantum/quantum.c ****         breathing_halt = BREATHING_NO_HALT;
 675:quantum/quantum.c ****     }
 676:quantum/quantum.c **** 
 677:quantum/quantum.c ****     // Toggle breathing interrupt
 678:quantum/quantum.c ****     TIMSK1 ^= _BV(OCIE1A);
 679:quantum/quantum.c **** 
 680:quantum/quantum.c ****     // Restore backlight level
 681:quantum/quantum.c ****     if (!is_breathing())
 682:quantum/quantum.c ****     {
 683:quantum/quantum.c ****         backlight_set(get_backlight_level());
 684:quantum/quantum.c ****     }
 685:quantum/quantum.c **** }
 686:quantum/quantum.c **** 
 687:quantum/quantum.c **** bool is_breathing(void)
 688:quantum/quantum.c **** {
 689:quantum/quantum.c ****     return (TIMSK1 && _BV(OCIE1A));
 690:quantum/quantum.c **** }
 691:quantum/quantum.c **** 
 692:quantum/quantum.c **** void breathing_intensity_default(void)
 693:quantum/quantum.c **** {
 694:quantum/quantum.c ****     //breath_intensity = (uint8_t)((uint16_t)100 * (uint16_t)get_backlight_level() / (uint16_t)BACK
 695:quantum/quantum.c ****     breath_intensity = ((BACKLIGHT_LEVELS - get_backlight_level()) * ((BACKLIGHT_LEVELS + 1) / 2));
 696:quantum/quantum.c **** }
 697:quantum/quantum.c **** 
 698:quantum/quantum.c **** void breathing_intensity_set(uint8_t value)
 699:quantum/quantum.c **** {
 700:quantum/quantum.c ****     breath_intensity = value;
 701:quantum/quantum.c **** }
 702:quantum/quantum.c **** 
 703:quantum/quantum.c **** void breathing_speed_default(void)
 704:quantum/quantum.c **** {
 705:quantum/quantum.c ****     breath_speed = 4;
 706:quantum/quantum.c **** }
 707:quantum/quantum.c **** 
 708:quantum/quantum.c **** void breathing_speed_set(uint8_t value)
 709:quantum/quantum.c **** {
 710:quantum/quantum.c ****     bool is_breathing_now = is_breathing();
 711:quantum/quantum.c ****     uint8_t old_breath_speed = breath_speed;
 712:quantum/quantum.c **** 
 713:quantum/quantum.c ****     if (is_breathing_now)
 714:quantum/quantum.c ****     {
 715:quantum/quantum.c ****         // Disable breathing interrupt
 716:quantum/quantum.c ****         TIMSK1 &= ~_BV(OCIE1A);
 717:quantum/quantum.c ****     }
 718:quantum/quantum.c **** 
 719:quantum/quantum.c ****     breath_speed = value;
 720:quantum/quantum.c **** 
 721:quantum/quantum.c ****     if (is_breathing_now)
 722:quantum/quantum.c ****     {
 723:quantum/quantum.c ****         // Adjust index to account for new speed
 724:quantum/quantum.c ****         breathing_index = (( (uint8_t)( (breathing_index) >> old_breath_speed ) ) & 0x3F) << breath
 725:quantum/quantum.c **** 
 726:quantum/quantum.c ****         // Enable breathing interrupt
 727:quantum/quantum.c ****         TIMSK1 |= _BV(OCIE1A);
 728:quantum/quantum.c ****     }
 729:quantum/quantum.c **** 
 730:quantum/quantum.c **** }
 731:quantum/quantum.c **** 
 732:quantum/quantum.c **** void breathing_speed_inc(uint8_t value)
 733:quantum/quantum.c **** {
 734:quantum/quantum.c ****     if ((uint16_t)(breath_speed - value) > 10 )
 735:quantum/quantum.c ****     {
 736:quantum/quantum.c ****         breathing_speed_set(0);
 737:quantum/quantum.c ****     }
 738:quantum/quantum.c ****     else
 739:quantum/quantum.c ****     {
 740:quantum/quantum.c ****         breathing_speed_set(breath_speed - value);
 741:quantum/quantum.c ****     }
 742:quantum/quantum.c **** }
 743:quantum/quantum.c **** 
 744:quantum/quantum.c **** void breathing_speed_dec(uint8_t value)
 745:quantum/quantum.c **** {
 746:quantum/quantum.c ****     if ((uint16_t)(breath_speed + value) > 10 )
 747:quantum/quantum.c ****     {
 748:quantum/quantum.c ****         breathing_speed_set(10);
 749:quantum/quantum.c ****     }
 750:quantum/quantum.c ****     else
 751:quantum/quantum.c ****     {
 752:quantum/quantum.c ****         breathing_speed_set(breath_speed + value);
 753:quantum/quantum.c ****     }
 754:quantum/quantum.c **** }
 755:quantum/quantum.c **** 
 756:quantum/quantum.c **** void breathing_defaults(void)
 757:quantum/quantum.c **** {
 758:quantum/quantum.c ****     breathing_intensity_default();
 759:quantum/quantum.c ****     breathing_speed_default();
 760:quantum/quantum.c ****     breathing_halt = BREATHING_NO_HALT;
 761:quantum/quantum.c **** }
 762:quantum/quantum.c **** 
 763:quantum/quantum.c **** /* Breathing Sleep LED brighness(PWM On period) table
 764:quantum/quantum.c ****  * (64[steps] * 4[duration]) / 64[PWM periods/s] = 4 second breath cycle
 765:quantum/quantum.c ****  *
 766:quantum/quantum.c ****  * http://www.wolframalpha.com/input/?i=%28sin%28+x%2F64*pi%29**8+*+255%2C+x%3D0+to+63
 767:quantum/quantum.c ****  * (0..63).each {|x| p ((sin(x/64.0*PI)**8)*255).to_i }
 768:quantum/quantum.c ****  */
 769:quantum/quantum.c **** static const uint8_t breathing_table[64] PROGMEM = {
 770:quantum/quantum.c ****   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   2,   4,   6,  10,
 771:quantum/quantum.c ****  15,  23,  32,  44,  58,  74,  93, 113, 135, 157, 179, 199, 218, 233, 245, 252,
 772:quantum/quantum.c **** 255, 252, 245, 233, 218, 199, 179, 157, 135, 113,  93,  74,  58,  44,  32,  23,
 773:quantum/quantum.c ****  15,  10,   6,   4,   2,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
 774:quantum/quantum.c **** };
 775:quantum/quantum.c **** 
 776:quantum/quantum.c **** ISR(TIMER1_COMPA_vect)
 777:quantum/quantum.c **** {
 778:quantum/quantum.c ****     // OCR1x = (pgm_read_byte(&breathing_table[ ( (uint8_t)( (breathing_index++) >> breath_speed ) 
 779:quantum/quantum.c **** 
 780:quantum/quantum.c **** 
 781:quantum/quantum.c ****     uint8_t local_index = ( (uint8_t)( (breathing_index++) >> breath_speed ) ) & 0x3F;
 782:quantum/quantum.c **** 
 783:quantum/quantum.c ****     if (((breathing_halt == BREATHING_HALT_ON) && (local_index == 0x20)) || ((breathing_halt == BRE
 784:quantum/quantum.c ****     {
 785:quantum/quantum.c ****         // Disable breathing interrupt
 786:quantum/quantum.c ****         TIMSK1 &= ~_BV(OCIE1A);
 787:quantum/quantum.c ****     }
 788:quantum/quantum.c **** 
 789:quantum/quantum.c ****     OCR1x = (uint16_t)(((uint16_t)pgm_read_byte(&breathing_table[local_index]) * 257)) >> breath_in
 790:quantum/quantum.c **** 
 791:quantum/quantum.c **** }
 792:quantum/quantum.c **** 
 793:quantum/quantum.c **** 
 794:quantum/quantum.c **** 
 795:quantum/quantum.c **** #endif // breathing
 796:quantum/quantum.c **** 
 797:quantum/quantum.c **** #else // backlight
 798:quantum/quantum.c **** 
 799:quantum/quantum.c **** __attribute__ ((weak))
 800:quantum/quantum.c **** void backlight_init_ports(void)
 801:quantum/quantum.c **** {
 802:quantum/quantum.c **** 
 803:quantum/quantum.c **** }
 804:quantum/quantum.c **** 
 805:quantum/quantum.c **** __attribute__ ((weak))
 806:quantum/quantum.c **** void backlight_set(uint8_t level)
 807:quantum/quantum.c **** {
 808:quantum/quantum.c **** 
 809:quantum/quantum.c **** }
 810:quantum/quantum.c **** 
 811:quantum/quantum.c **** #endif // backlight
 812:quantum/quantum.c **** 
 813:quantum/quantum.c **** 
 814:quantum/quantum.c **** // Functions for spitting out values
 815:quantum/quantum.c **** //
 816:quantum/quantum.c **** 
 817:quantum/quantum.c **** void send_dword(uint32_t number) { // this might not actually work
 818:quantum/quantum.c ****     uint16_t word = (number >> 16);
 819:quantum/quantum.c ****     send_word(word);
 820:quantum/quantum.c ****     send_word(number & 0xFFFFUL);
 821:quantum/quantum.c **** }
 822:quantum/quantum.c **** 
 823:quantum/quantum.c **** void send_word(uint16_t number) {
 824:quantum/quantum.c ****     uint8_t byte = number >> 8;
 825:quantum/quantum.c ****     send_byte(byte);
 826:quantum/quantum.c ****     send_byte(number & 0xFF);
 827:quantum/quantum.c **** }
 828:quantum/quantum.c **** 
 829:quantum/quantum.c **** void send_byte(uint8_t number) {
 830:quantum/quantum.c ****     uint8_t nibble = number >> 4;
 831:quantum/quantum.c ****     send_nibble(nibble);
 832:quantum/quantum.c ****     send_nibble(number & 0xF);
 833:quantum/quantum.c **** }
 834:quantum/quantum.c **** 
 835:quantum/quantum.c **** void send_nibble(uint8_t number) {
 1327               		.loc 1 835 34 view -0
 1328               		.cfi_startproc
 1329               		.loc 1 835 34 is_stmt 0 view .LVU306
 1330 0000 CF93      		push r28
 1331               	.LCFI27:
 1332               		.cfi_def_cfa_offset 3
 1333               		.cfi_offset 28, -2
 1334               	/* prologue: function */
 1335               	/* frame size = 0 */
 1336               	/* stack size = 1 */
 1337               	.L__stack_usage = 1
 836:quantum/quantum.c ****     switch (number) {
 1338               		.loc 1 836 5 is_stmt 1 view .LVU307
 1339 0002 8A30      		cpi r24,lo8(10)
 1340 0004 00F4      		brsh .L113
 1341 0006 8823      		tst r24
 1342 0008 01F0      		breq .L118
 837:quantum/quantum.c ****         case 0:
 838:quantum/quantum.c ****             register_code(KC_0);
 839:quantum/quantum.c ****             unregister_code(KC_0);
 840:quantum/quantum.c ****             break;
 841:quantum/quantum.c ****         case 1 ... 9:
 842:quantum/quantum.c ****             register_code(KC_1 + (number - 1));
 1343               		.loc 1 842 13 view .LVU308
 1344 000a CDE1      		ldi r28,lo8(29)
 1345               	.L121:
 843:quantum/quantum.c ****             unregister_code(KC_1 + (number - 1));
 844:quantum/quantum.c ****             break;
 845:quantum/quantum.c ****         case 0xA ... 0xF:
 846:quantum/quantum.c ****             register_code(KC_A + (number - 0xA));
 1346               		.loc 1 846 13 is_stmt 0 view .LVU309
 1347 000c C80F      		add r28,r24
 1348 000e 8C2F      		mov r24,r28
 1349               	.LVL112:
 1350               		.loc 1 846 13 view .LVU310
 1351 0010 0E94 0000 		call register_code
 1352               	.LVL113:
 847:quantum/quantum.c ****             unregister_code(KC_A + (number - 0xA));
 1353               		.loc 1 847 13 is_stmt 1 view .LVU311
 1354 0014 8C2F      		mov r24,r28
 1355 0016 00C0      		rjmp .L120
 1356               	.LVL114:
 1357               	.L113:
 846:quantum/quantum.c ****             unregister_code(KC_A + (number - 0xA));
 1358               		.loc 1 846 13 is_stmt 0 view .LVU312
 1359 0018 CAEF      		ldi r28,lo8(-6)
 836:quantum/quantum.c ****         case 0:
 1360               		.loc 1 836 5 view .LVU313
 1361 001a 8031      		cpi r24,lo8(16)
 1362 001c 00F0      		brlo .L121
 1363               	/* epilogue start */
 848:quantum/quantum.c ****             break;
 849:quantum/quantum.c ****     }
 850:quantum/quantum.c **** }
 1364               		.loc 1 850 1 view .LVU314
 1365 001e CF91      		pop r28
 1366 0020 0895      		ret
 1367               	.L118:
 838:quantum/quantum.c ****             unregister_code(KC_0);
 1368               		.loc 1 838 13 is_stmt 1 view .LVU315
 1369 0022 87E2      		ldi r24,lo8(39)
 1370               	.LVL115:
 838:quantum/quantum.c ****             unregister_code(KC_0);
 1371               		.loc 1 838 13 is_stmt 0 view .LVU316
 1372 0024 0E94 0000 		call register_code
 1373               	.LVL116:
 839:quantum/quantum.c ****             break;
 1374               		.loc 1 839 13 is_stmt 1 view .LVU317
 1375 0028 87E2      		ldi r24,lo8(39)
 1376               	.L120:
 1377               	/* epilogue start */
 1378               		.loc 1 850 1 is_stmt 0 view .LVU318
 1379 002a CF91      		pop r28
 847:quantum/quantum.c ****             break;
 1380               		.loc 1 847 13 view .LVU319
 1381 002c 0C94 0000 		jmp unregister_code
 1382               	.LVL117:
 1383               		.cfi_endproc
 1384               	.LFE129:
 1386               		.section	.text.send_byte,"ax",@progbits
 1387               	.global	send_byte
 1389               	send_byte:
 1390               	.LVL118:
 1391               	.LFB128:
 829:quantum/quantum.c ****     uint8_t nibble = number >> 4;
 1392               		.loc 1 829 32 is_stmt 1 view -0
 1393               		.cfi_startproc
 829:quantum/quantum.c ****     uint8_t nibble = number >> 4;
 1394               		.loc 1 829 32 is_stmt 0 view .LVU321
 1395 0000 CF93      		push r28
 1396               	.LCFI28:
 1397               		.cfi_def_cfa_offset 3
 1398               		.cfi_offset 28, -2
 1399               	/* prologue: function */
 1400               	/* frame size = 0 */
 1401               	/* stack size = 1 */
 1402               	.L__stack_usage = 1
 1403 0002 C82F      		mov r28,r24
 830:quantum/quantum.c ****     send_nibble(nibble);
 1404               		.loc 1 830 5 is_stmt 1 view .LVU322
 1405               	.LVL119:
 831:quantum/quantum.c ****     send_nibble(number & 0xF);
 1406               		.loc 1 831 5 view .LVU323
 1407 0004 8295      		swap r24
 1408               	.LVL120:
 831:quantum/quantum.c ****     send_nibble(number & 0xF);
 1409               		.loc 1 831 5 is_stmt 0 view .LVU324
 1410 0006 8F70      		andi r24,lo8(15)
 1411 0008 0E94 0000 		call send_nibble
 1412               	.LVL121:
 832:quantum/quantum.c **** }
 1413               		.loc 1 832 5 is_stmt 1 view .LVU325
 1414 000c 8C2F      		mov r24,r28
 1415 000e 8F70      		andi r24,lo8(15)
 1416               	/* epilogue start */
 833:quantum/quantum.c **** 
 1417               		.loc 1 833 1 is_stmt 0 view .LVU326
 1418 0010 CF91      		pop r28
 1419               	.LVL122:
 832:quantum/quantum.c **** }
 1420               		.loc 1 832 5 view .LVU327
 1421 0012 0C94 0000 		jmp send_nibble
 1422               	.LVL123:
 1423               		.cfi_endproc
 1424               	.LFE128:
 1426               		.section	.text.send_word,"ax",@progbits
 1427               	.global	send_word
 1429               	send_word:
 1430               	.LVL124:
 1431               	.LFB127:
 823:quantum/quantum.c ****     uint8_t byte = number >> 8;
 1432               		.loc 1 823 33 is_stmt 1 view -0
 1433               		.cfi_startproc
 823:quantum/quantum.c ****     uint8_t byte = number >> 8;
 1434               		.loc 1 823 33 is_stmt 0 view .LVU329
 1435 0000 CF93      		push r28
 1436               	.LCFI29:
 1437               		.cfi_def_cfa_offset 3
 1438               		.cfi_offset 28, -2
 1439               	/* prologue: function */
 1440               	/* frame size = 0 */
 1441               	/* stack size = 1 */
 1442               	.L__stack_usage = 1
 1443 0002 C82F      		mov r28,r24
 824:quantum/quantum.c ****     send_byte(byte);
 1444               		.loc 1 824 5 is_stmt 1 view .LVU330
 1445               	.LVL125:
 825:quantum/quantum.c ****     send_byte(number & 0xFF);
 1446               		.loc 1 825 5 view .LVU331
 1447 0004 892F      		mov r24,r25
 1448               	.LVL126:
 825:quantum/quantum.c ****     send_byte(number & 0xFF);
 1449               		.loc 1 825 5 is_stmt 0 view .LVU332
 1450 0006 0E94 0000 		call send_byte
 1451               	.LVL127:
 826:quantum/quantum.c **** }
 1452               		.loc 1 826 5 is_stmt 1 view .LVU333
 1453 000a 8C2F      		mov r24,r28
 1454               	/* epilogue start */
 827:quantum/quantum.c **** 
 1455               		.loc 1 827 1 is_stmt 0 view .LVU334
 1456 000c CF91      		pop r28
 826:quantum/quantum.c **** }
 1457               		.loc 1 826 5 view .LVU335
 1458 000e 0C94 0000 		jmp send_byte
 1459               	.LVL128:
 1460               		.cfi_endproc
 1461               	.LFE127:
 1463               		.section	.text.send_dword,"ax",@progbits
 1464               	.global	send_dword
 1466               	send_dword:
 1467               	.LVL129:
 1468               	.LFB126:
 817:quantum/quantum.c ****     uint16_t word = (number >> 16);
 1469               		.loc 1 817 34 is_stmt 1 view -0
 1470               		.cfi_startproc
 817:quantum/quantum.c ****     uint16_t word = (number >> 16);
 1471               		.loc 1 817 34 is_stmt 0 view .LVU337
 1472 0000 CF92      		push r12
 1473               	.LCFI30:
 1474               		.cfi_def_cfa_offset 3
 1475               		.cfi_offset 12, -2
 1476 0002 DF92      		push r13
 1477               	.LCFI31:
 1478               		.cfi_def_cfa_offset 4
 1479               		.cfi_offset 13, -3
 1480 0004 EF92      		push r14
 1481               	.LCFI32:
 1482               		.cfi_def_cfa_offset 5
 1483               		.cfi_offset 14, -4
 1484 0006 FF92      		push r15
 1485               	.LCFI33:
 1486               		.cfi_def_cfa_offset 6
 1487               		.cfi_offset 15, -5
 1488               	/* prologue: function */
 1489               	/* frame size = 0 */
 1490               	/* stack size = 4 */
 1491               	.L__stack_usage = 4
 1492 0008 6B01      		movw r12,r22
 818:quantum/quantum.c ****     send_word(word);
 1493               		.loc 1 818 5 is_stmt 1 view .LVU338
 819:quantum/quantum.c ****     send_word(number & 0xFFFFUL);
 1494               		.loc 1 819 5 view .LVU339
 1495 000a 0E94 0000 		call send_word
 1496               	.LVL130:
 820:quantum/quantum.c **** }
 1497               		.loc 1 820 5 view .LVU340
 1498 000e C601      		movw r24,r12
 1499               	/* epilogue start */
 821:quantum/quantum.c **** 
 1500               		.loc 1 821 1 is_stmt 0 view .LVU341
 1501 0010 FF90      		pop r15
 1502 0012 EF90      		pop r14
 1503 0014 DF90      		pop r13
 1504 0016 CF90      		pop r12
 820:quantum/quantum.c **** }
 1505               		.loc 1 820 5 view .LVU342
 1506 0018 0C94 0000 		jmp send_word
 1507               	.LVL131:
 1508               		.cfi_endproc
 1509               	.LFE126:
 1511               		.section	.text.api_send_unicode,"ax",@progbits
 1512               	.global	api_send_unicode
 1514               	api_send_unicode:
 1515               	.LVL132:
 1516               	.LFB130:
 851:quantum/quantum.c **** 
 852:quantum/quantum.c **** void api_send_unicode(uint32_t unicode) {
 1517               		.loc 1 852 41 is_stmt 1 view -0
 1518               		.cfi_startproc
 1519               	/* prologue: function */
 1520               	/* frame size = 0 */
 1521               	/* stack size = 0 */
 1522               	.L__stack_usage = 0
 853:quantum/quantum.c **** #ifdef API_ENABLE
 854:quantum/quantum.c ****     uint8_t chunk[4];
 855:quantum/quantum.c ****     dword_to_bytes(unicode, chunk);
 856:quantum/quantum.c ****     MT_SEND_DATA(DT_UNICODE, chunk, 5);
 857:quantum/quantum.c **** #endif
 858:quantum/quantum.c **** }
 1523               		.loc 1 858 1 view .LVU344
 1524               	/* epilogue start */
 1525 0000 0895      		ret
 1526               		.cfi_endproc
 1527               	.LFE130:
 1529               		.section	.text.led_set_user,"ax",@progbits
 1530               		.weak	led_set_user
 1532               	led_set_user:
 1533               	.LVL133:
 1534               	.LFB131:
 859:quantum/quantum.c **** 
 860:quantum/quantum.c **** __attribute__ ((weak))
 861:quantum/quantum.c **** void led_set_user(uint8_t usb_led) {
 1535               		.loc 1 861 36 view -0
 1536               		.cfi_startproc
 1537               	/* prologue: function */
 1538               	/* frame size = 0 */
 1539               	/* stack size = 0 */
 1540               	.L__stack_usage = 0
 862:quantum/quantum.c **** 
 863:quantum/quantum.c **** }
 1541               		.loc 1 863 1 view .LVU346
 1542               	/* epilogue start */
 1543 0000 0895      		ret
 1544               		.cfi_endproc
 1545               	.LFE131:
 1547               		.set	led_set_user.localalias.1,led_set_user
 1548               		.section	.text.backlight_set,"ax",@progbits
 1549               		.weak	backlight_set
 1551               	backlight_set:
 1552               	.LFB144:
 1553               		.cfi_startproc
 1554               	/* prologue: function */
 1555               	/* frame size = 0 */
 1556               	/* stack size = 0 */
 1557               	.L__stack_usage = 0
 1558               	/* epilogue start */
 1559 0000 0895      		ret
 1560               		.cfi_endproc
 1561               	.LFE144:
 1563               		.section	.text.led_set_kb,"ax",@progbits
 1564               		.weak	led_set_kb
 1566               	led_set_kb:
 1567               	.LVL134:
 1568               	.LFB132:
 864:quantum/quantum.c **** 
 865:quantum/quantum.c **** __attribute__ ((weak))
 866:quantum/quantum.c **** void led_set_kb(uint8_t usb_led) {
 1569               		.loc 1 866 34 view -0
 1570               		.cfi_startproc
 1571               	/* prologue: function */
 1572               	/* frame size = 0 */
 1573               	/* stack size = 0 */
 1574               	.L__stack_usage = 0
 867:quantum/quantum.c ****     led_set_user(usb_led);
 1575               		.loc 1 867 5 view .LVU348
 1576 0000 0C94 0000 		jmp led_set_user
 1577               	.LVL135:
 1578               		.loc 1 867 5 is_stmt 0 view .LVU349
 1579               		.cfi_endproc
 1580               	.LFE132:
 1582               		.section	.text.led_init_ports,"ax",@progbits
 1583               		.weak	led_init_ports
 1585               	led_init_ports:
 1586               	.LFB133:
 868:quantum/quantum.c **** }
 869:quantum/quantum.c **** 
 870:quantum/quantum.c **** __attribute__ ((weak))
 871:quantum/quantum.c **** void led_init_ports(void)
 872:quantum/quantum.c **** {
 1587               		.loc 1 872 1 is_stmt 1 view -0
 1588               		.cfi_startproc
 1589               	/* prologue: function */
 1590               	/* frame size = 0 */
 1591               	/* stack size = 0 */
 1592               	.L__stack_usage = 0
 873:quantum/quantum.c **** 
 874:quantum/quantum.c **** }
 1593               		.loc 1 874 1 view .LVU351
 1594               	/* epilogue start */
 1595 0000 0895      		ret
 1596               		.cfi_endproc
 1597               	.LFE133:
 1599               		.section	.text.led_set,"ax",@progbits
 1600               		.weak	led_set
 1602               	led_set:
 1603               	.LVL136:
 1604               	.LFB134:
 875:quantum/quantum.c **** 
 876:quantum/quantum.c **** __attribute__ ((weak))
 877:quantum/quantum.c **** void led_set(uint8_t usb_led)
 878:quantum/quantum.c **** {
 1605               		.loc 1 878 1 view -0
 1606               		.cfi_startproc
 1607               	/* prologue: function */
 1608               	/* frame size = 0 */
 1609               	/* stack size = 0 */
 1610               	.L__stack_usage = 0
 879:quantum/quantum.c **** 
 880:quantum/quantum.c ****   // Example LED Code
 881:quantum/quantum.c ****   //
 882:quantum/quantum.c ****     // // Using PE6 Caps Lock LED
 883:quantum/quantum.c ****     // if (usb_led & (1<<USB_LED_CAPS_LOCK))
 884:quantum/quantum.c ****     // {
 885:quantum/quantum.c ****     //     // Output high.
 886:quantum/quantum.c ****     //     DDRE |= (1<<6);
 887:quantum/quantum.c ****     //     PORTE |= (1<<6);
 888:quantum/quantum.c ****     // }
 889:quantum/quantum.c ****     // else
 890:quantum/quantum.c ****     // {
 891:quantum/quantum.c ****     //     // Output low.
 892:quantum/quantum.c ****     //     DDRE &= ~(1<<6);
 893:quantum/quantum.c ****     //     PORTE &= ~(1<<6);
 894:quantum/quantum.c ****     // }
 895:quantum/quantum.c **** 
 896:quantum/quantum.c ****   led_set_kb(usb_led);
 1611               		.loc 1 896 3 view .LVU353
 1612 0000 0C94 0000 		jmp led_set_kb
 1613               	.LVL137:
 1614               		.loc 1 896 3 is_stmt 0 view .LVU354
 1615               		.cfi_endproc
 1616               	.LFE134:
 1618               		.section	.text.startup_user,"ax",@progbits
 1619               		.weak	startup_user
 1621               	startup_user:
 1622               	.LFB138:
 1623               		.cfi_startproc
 1624               	/* prologue: function */
 1625               	/* frame size = 0 */
 1626               	/* stack size = 0 */
 1627               	.L__stack_usage = 0
 1628               	/* epilogue start */
 1629 0000 0895      		ret
 1630               		.cfi_endproc
 1631               	.LFE138:
 1633               		.section	.text.shutdown_user,"ax",@progbits
 1634               		.weak	shutdown_user
 1636               	shutdown_user:
 1637               	.LFB140:
 1638               		.cfi_startproc
 1639               	/* prologue: function */
 1640               	/* frame size = 0 */
 1641               	/* stack size = 0 */
 1642               	.L__stack_usage = 0
 1643               	/* epilogue start */
 1644 0000 0895      		ret
 1645               		.cfi_endproc
 1646               	.LFE140:
 1648               	.global	ascii_to_qwerty_keycode_lut
 1649               		.section	.progmem.data.ascii_to_qwerty_keycode_lut,"a"
 1652               	ascii_to_qwerty_keycode_lut:
 1653 0000 00        		.byte	0
 1654 0001 00        		.byte	0
 1655 0002 00        		.byte	0
 1656 0003 00        		.byte	0
 1657 0004 00        		.byte	0
 1658 0005 00        		.byte	0
 1659 0006 00        		.byte	0
 1660 0007 00        		.byte	0
 1661 0008 2A        		.byte	42
 1662 0009 2B        		.byte	43
 1663 000a 28        		.byte	40
 1664 000b 00        		.byte	0
 1665 000c 00        		.byte	0
 1666 000d 00        		.byte	0
 1667 000e 00        		.byte	0
 1668 000f 00        		.byte	0
 1669 0010 00        		.byte	0
 1670 0011 00        		.byte	0
 1671 0012 00        		.byte	0
 1672 0013 00        		.byte	0
 1673 0014 00        		.byte	0
 1674 0015 00        		.byte	0
 1675 0016 00        		.byte	0
 1676 0017 00        		.byte	0
 1677 0018 00        		.byte	0
 1678 0019 00        		.byte	0
 1679 001a 00        		.byte	0
 1680 001b 29        		.byte	41
 1681 001c 00        		.byte	0
 1682 001d 00        		.byte	0
 1683 001e 00        		.byte	0
 1684 001f 00        		.byte	0
 1685 0020 2C        		.byte	44
 1686 0021 1E        		.byte	30
 1687 0022 34        		.byte	52
 1688 0023 20        		.byte	32
 1689 0024 21        		.byte	33
 1690 0025 22        		.byte	34
 1691 0026 24        		.byte	36
 1692 0027 34        		.byte	52
 1693 0028 26        		.byte	38
 1694 0029 27        		.byte	39
 1695 002a 25        		.byte	37
 1696 002b 2E        		.byte	46
 1697 002c 36        		.byte	54
 1698 002d 2D        		.byte	45
 1699 002e 37        		.byte	55
 1700 002f 38        		.byte	56
 1701 0030 27        		.byte	39
 1702 0031 1E        		.byte	30
 1703 0032 1F        		.byte	31
 1704 0033 20        		.byte	32
 1705 0034 21        		.byte	33
 1706 0035 22        		.byte	34
 1707 0036 23        		.byte	35
 1708 0037 24        		.byte	36
 1709 0038 25        		.byte	37
 1710 0039 26        		.byte	38
 1711 003a 33        		.byte	51
 1712 003b 33        		.byte	51
 1713 003c 36        		.byte	54
 1714 003d 2E        		.byte	46
 1715 003e 37        		.byte	55
 1716 003f 38        		.byte	56
 1717 0040 1F        		.byte	31
 1718 0041 04        		.byte	4
 1719 0042 05        		.byte	5
 1720 0043 06        		.byte	6
 1721 0044 07        		.byte	7
 1722 0045 08        		.byte	8
 1723 0046 09        		.byte	9
 1724 0047 0A        		.byte	10
 1725 0048 0B        		.byte	11
 1726 0049 0C        		.byte	12
 1727 004a 0D        		.byte	13
 1728 004b 0E        		.byte	14
 1729 004c 0F        		.byte	15
 1730 004d 10        		.byte	16
 1731 004e 11        		.byte	17
 1732 004f 12        		.byte	18
 1733 0050 13        		.byte	19
 1734 0051 14        		.byte	20
 1735 0052 15        		.byte	21
 1736 0053 16        		.byte	22
 1737 0054 17        		.byte	23
 1738 0055 18        		.byte	24
 1739 0056 19        		.byte	25
 1740 0057 1A        		.byte	26
 1741 0058 1B        		.byte	27
 1742 0059 1C        		.byte	28
 1743 005a 1D        		.byte	29
 1744 005b 2F        		.byte	47
 1745 005c 31        		.byte	49
 1746 005d 30        		.byte	48
 1747 005e 23        		.byte	35
 1748 005f 2D        		.byte	45
 1749 0060 35        		.byte	53
 1750 0061 04        		.byte	4
 1751 0062 05        		.byte	5
 1752 0063 06        		.byte	6
 1753 0064 07        		.byte	7
 1754 0065 08        		.byte	8
 1755 0066 09        		.byte	9
 1756 0067 0A        		.byte	10
 1757 0068 0B        		.byte	11
 1758 0069 0C        		.byte	12
 1759 006a 0D        		.byte	13
 1760 006b 0E        		.byte	14
 1761 006c 0F        		.byte	15
 1762 006d 10        		.byte	16
 1763 006e 11        		.byte	17
 1764 006f 12        		.byte	18
 1765 0070 13        		.byte	19
 1766 0071 14        		.byte	20
 1767 0072 15        		.byte	21
 1768 0073 16        		.byte	22
 1769 0074 17        		.byte	23
 1770 0075 18        		.byte	24
 1771 0076 19        		.byte	25
 1772 0077 1A        		.byte	26
 1773 0078 1B        		.byte	27
 1774 0079 1C        		.byte	28
 1775 007a 1D        		.byte	29
 1776 007b 2F        		.byte	47
 1777 007c 31        		.byte	49
 1778 007d 30        		.byte	48
 1779 007e 35        		.byte	53
 1780 007f 4C        		.byte	76
 1781               	.global	ascii_to_qwerty_shift_lut
 1782               		.section	.progmem.data.ascii_to_qwerty_shift_lut,"a"
 1785               	ascii_to_qwerty_shift_lut:
 1786 0000 00        		.byte	0
 1787 0001 00        		.byte	0
 1788 0002 00        		.byte	0
 1789 0003 00        		.byte	0
 1790 0004 00        		.byte	0
 1791 0005 00        		.byte	0
 1792 0006 00        		.byte	0
 1793 0007 00        		.byte	0
 1794 0008 00        		.byte	0
 1795 0009 00        		.byte	0
 1796 000a 00        		.byte	0
 1797 000b 00        		.byte	0
 1798 000c 00        		.byte	0
 1799 000d 00        		.byte	0
 1800 000e 00        		.byte	0
 1801 000f 00        		.byte	0
 1802 0010 00        		.byte	0
 1803 0011 00        		.byte	0
 1804 0012 00        		.byte	0
 1805 0013 00        		.byte	0
 1806 0014 00        		.byte	0
 1807 0015 00        		.byte	0
 1808 0016 00        		.byte	0
 1809 0017 00        		.byte	0
 1810 0018 00        		.byte	0
 1811 0019 00        		.byte	0
 1812 001a 00        		.byte	0
 1813 001b 00        		.byte	0
 1814 001c 00        		.byte	0
 1815 001d 00        		.byte	0
 1816 001e 00        		.byte	0
 1817 001f 00        		.byte	0
 1818 0020 00        		.byte	0
 1819 0021 01        		.byte	1
 1820 0022 01        		.byte	1
 1821 0023 01        		.byte	1
 1822 0024 01        		.byte	1
 1823 0025 01        		.byte	1
 1824 0026 01        		.byte	1
 1825 0027 00        		.byte	0
 1826 0028 01        		.byte	1
 1827 0029 01        		.byte	1
 1828 002a 01        		.byte	1
 1829 002b 01        		.byte	1
 1830 002c 00        		.byte	0
 1831 002d 00        		.byte	0
 1832 002e 00        		.byte	0
 1833 002f 00        		.byte	0
 1834 0030 00        		.byte	0
 1835 0031 00        		.byte	0
 1836 0032 00        		.byte	0
 1837 0033 00        		.byte	0
 1838 0034 00        		.byte	0
 1839 0035 00        		.byte	0
 1840 0036 00        		.byte	0
 1841 0037 00        		.byte	0
 1842 0038 00        		.byte	0
 1843 0039 00        		.byte	0
 1844 003a 01        		.byte	1
 1845 003b 00        		.byte	0
 1846 003c 01        		.byte	1
 1847 003d 00        		.byte	0
 1848 003e 01        		.byte	1
 1849 003f 01        		.byte	1
 1850 0040 01        		.byte	1
 1851 0041 01        		.byte	1
 1852 0042 01        		.byte	1
 1853 0043 01        		.byte	1
 1854 0044 01        		.byte	1
 1855 0045 01        		.byte	1
 1856 0046 01        		.byte	1
 1857 0047 01        		.byte	1
 1858 0048 01        		.byte	1
 1859 0049 01        		.byte	1
 1860 004a 01        		.byte	1
 1861 004b 01        		.byte	1
 1862 004c 01        		.byte	1
 1863 004d 01        		.byte	1
 1864 004e 01        		.byte	1
 1865 004f 01        		.byte	1
 1866 0050 01        		.byte	1
 1867 0051 01        		.byte	1
 1868 0052 01        		.byte	1
 1869 0053 01        		.byte	1
 1870 0054 01        		.byte	1
 1871 0055 01        		.byte	1
 1872 0056 01        		.byte	1
 1873 0057 01        		.byte	1
 1874 0058 01        		.byte	1
 1875 0059 01        		.byte	1
 1876 005a 01        		.byte	1
 1877 005b 00        		.byte	0
 1878 005c 00        		.byte	0
 1879 005d 00        		.byte	0
 1880 005e 01        		.byte	1
 1881 005f 01        		.byte	1
 1882 0060 00        		.byte	0
 1883 0061 00        		.byte	0
 1884 0062 00        		.byte	0
 1885 0063 00        		.byte	0
 1886 0064 00        		.byte	0
 1887 0065 00        		.byte	0
 1888 0066 00        		.byte	0
 1889 0067 00        		.byte	0
 1890 0068 00        		.byte	0
 1891 0069 00        		.byte	0
 1892 006a 00        		.byte	0
 1893 006b 00        		.byte	0
 1894 006c 00        		.byte	0
 1895 006d 00        		.byte	0
 1896 006e 00        		.byte	0
 1897 006f 00        		.byte	0
 1898 0070 00        		.byte	0
 1899 0071 00        		.byte	0
 1900 0072 00        		.byte	0
 1901 0073 00        		.byte	0
 1902 0074 00        		.byte	0
 1903 0075 00        		.byte	0
 1904 0076 00        		.byte	0
 1905 0077 00        		.byte	0
 1906 0078 00        		.byte	0
 1907 0079 00        		.byte	0
 1908 007a 00        		.byte	0
 1909 007b 01        		.byte	1
 1910 007c 01        		.byte	1
 1911 007d 01        		.byte	1
 1912 007e 01        		.byte	1
 1913 007f 00        		.byte	0
 1914               		.section	.bss.scs_timer,"aw",@nobits
 1917               	scs_timer:
 1918 0000 0000      		.zero	2
 1919               		.section	.bss.shift_interrupted,"aw",@nobits
 1922               	shift_interrupted:
 1923 0000 0000      		.zero	2
 1924               		.text
 1925               	.Letext0:
 1926               		.file 4 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/stdint.h"
 1927               		.file 5 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/lib/avr-gcc/8/gcc/avr/8.5.0/include/stddef.h"
 1928               		.file 6 "./tmk_core/common/keyboard.h"
 1929               		.file 7 "./tmk_core/common/action.h"
 1930               		.file 8 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 1931               		.file 9 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 1932               		.file 10 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 1933               		.file 11 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 1934               		.file 12 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/stdio.h"
 1935               		.file 13 "./tmk_core/common/report.h"
 1936               		.file 14 "./tmk_core/common/host.h"
 1937               		.file 15 "./tmk_core/common/debug.h"
 1938               		.file 16 "quantum/keycode_config.h"
 1939               		.file 17 "./tmk_core/common/keycode.h"
 1940               		.file 18 "quantum/quantum_keycodes.h"
 1941               		.file 19 "quantum/keymap.h"
 1942               		.file 20 "./tmk_core/common/action_layer.h"
 1943               		.file 21 "./tmk_core/common/timer.h"
 1944               		.file 22 "./tmk_core/common/action_util.h"
 1945               		.file 23 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/stdlib.h"
 1946               		.file 24 "quantum/quantum.h"
 1947               		.file 25 "./quantum/process_keycode/process_leader.h"
 1948               		.file 26 "./tmk_core/common/eeconfig.h"
 1949               		.file 27 "./tmk_core/common/bootloader.h"
DEFINED SYMBOLS
                            *ABS*:00000000 quantum.c
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:2      *ABS*:0000003e __SP_H__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:3      *ABS*:0000003d __SP_L__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:4      *ABS*:0000003f __SREG__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6      *ABS*:00000001 __zero_reg__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:12     .text.do_code16:00000000 do_code16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:16     .text.do_code16:00000000 .Loc.0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:17     .text.do_code16:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:18     .text.do_code16:00000000 .Loc.1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:41     .text.do_code16:0000000c .Loc.2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:44     .text.do_code16:0000000e .Loc.3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:48     .text.do_code16:00000014 .Loc.4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:49     .text.do_code16:00000014 .Loc.5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:50     .text.do_code16:00000014 .Loc.6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:53     .text.do_code16:00000018 .Loc.7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:59     .text.do_code16:0000001e .Loc.8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:60     .text.do_code16:0000001e .Loc.9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:63     .text.do_code16:00000022 .Loc.10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:69     .text.do_code16:00000028 .Loc.11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:70     .text.do_code16:00000028 .Loc.12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:73     .text.do_code16:0000002c .Loc.13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:79     .text.do_code16:00000032 .Loc.14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:80     .text.do_code16:00000032 .Loc.15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:83     .text.do_code16:00000036 .Loc.16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:89     .text.do_code16:0000003c .Loc.17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:90     .text.do_code16:0000003c .Loc.18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:94     .text.do_code16:00000042 .Loc.19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:95     .text.do_code16:00000042 .Loc.20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:100    .text.do_code16:00000048 .Loc.21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:101    .text.do_code16:00000048 .Loc.22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:106    .text.do_code16:0000004e .Loc.23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:107    .text.do_code16:0000004e .Loc.24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:112    .text.do_code16:00000054 .Loc.25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:113    .text.do_code16:00000054 .Loc.26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:117    .text.do_code16:00000058 .Loc.27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:121    .text.do_code16:0000005c .Loc.28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:125    .text.do_code16:00000060 .Loc.29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:130    .text.do_code16:00000062 .Loc.30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:134    .text.do_code16:00000066 .Loc.31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:138    .text.do_code16:0000006a .Loc.32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:140    .text.do_code16:0000006c L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:146    .text.register_code16:00000000 register_code16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:149    .text.register_code16:00000000 .Loc.33
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:150    .text.register_code16:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:151    .text.register_code16:00000000 .Loc.34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:161    .text.register_code16:00000004 .Loc.35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:166    .text.register_code16:0000000c .Loc.36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:169    .text.register_code16:0000000e .Loc.37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:171    .text.register_code16:00000010 .Loc.38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:174    .text.register_code16:00000014 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:180    .text.unregister_code16:00000000 unregister_code16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:183    .text.unregister_code16:00000000 .Loc.39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:184    .text.unregister_code16:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:185    .text.unregister_code16:00000000 .Loc.40
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:199    .text.unregister_code16:00000006 .Loc.41
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:202    .text.unregister_code16:0000000a .Loc.42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:207    .text.unregister_code16:00000010 .Loc.43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:211    .text.unregister_code16:00000014 .Loc.44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:214    .text.unregister_code16:00000018 .Loc.45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:215    .text.unregister_code16:00000018 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:221    .text.process_action_kb:00000000 process_action_kb
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:224    .text.process_action_kb:00000000 .Loc.46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:225    .text.process_action_kb:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:230    .text.process_action_kb:00000000 .Loc.47
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:231    .text.process_action_kb:00000000 .Loc.48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:235    .text.process_action_kb:00000002 .Loc.49
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:237    .text.process_action_kb:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:243    .text.process_record_user:00000000 process_record_user
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:246    .text.process_record_user:00000000 .Loc.50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:247    .text.process_record_user:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:252    .text.process_record_user:00000000 .Loc.51
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:253    .text.process_record_user:00000000 .Loc.52
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:257    .text.process_record_user:00000002 .Loc.53
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:259    .text.process_record_user:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:265    .text.process_record_kb:00000000 process_record_kb
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:268    .text.process_record_kb:00000000 .Loc.54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:269    .text.process_record_kb:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:274    .text.process_record_kb:00000000 .Loc.55
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:275    .text.process_record_kb:00000000 .Loc.56
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:278    .text.process_record_kb:00000004 .Loc.57
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:279    .text.process_record_kb:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:285    .text.reset_keyboard:00000000 reset_keyboard
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:287    .text.reset_keyboard:00000000 .Loc.58
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:288    .text.reset_keyboard:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:293    .text.reset_keyboard:00000000 .Loc.59
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:296    .text.reset_keyboard:00000004 .Loc.60
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:300    .text.reset_keyboard:00000004 .Loc.61
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:302    .text.reset_keyboard:00000004 .Loc.62
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:303    .text.reset_keyboard:00000004 .Loc.63
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:304    .text.reset_keyboard:00000004 .Loc.64
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:305    .text.reset_keyboard:00000004 .Loc.65
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:306    .text.reset_keyboard:00000004 .Loc.66
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:307    .text.reset_keyboard:00000004 .Loc.67
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:311    .text.reset_keyboard:00000004 .Loc.68
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:314    .text.reset_keyboard:00000004 .Loc.69
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:322    .text.reset_keyboard:00000014 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:325    .text.reset_keyboard:00000016 .Loc.70
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:328    .text.reset_keyboard:00000016 .Loc.71
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:331    .text.reset_keyboard:0000001a L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:337    .text.process_record_quantum:00000000 process_record_quantum
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:340    .text.process_record_quantum:00000000 .Loc.72
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:341    .text.process_record_quantum:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:342    .text.process_record_quantum:00000000 .Loc.73
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:368    .text.process_record_quantum:0000000c .Loc.74
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:369    .text.process_record_quantum:0000000c .Loc.75
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:374    .text.process_record_quantum:00000012 .Loc.76
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:375    .text.process_record_quantum:00000012 .Loc.77
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:376    .text.process_record_quantum:00000012 .Loc.78
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:379    .text.process_record_quantum:00000016 .Loc.79
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:383    .text.process_record_quantum:0000001a .Loc.80
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:384    .text.process_record_quantum:0000001a .Loc.81
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:385    .text.process_record_quantum:0000001a .Loc.82
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:389    .text.process_record_quantum:00000020 .Loc.83
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:391    .text.process_record_quantum:00000020 .Loc.84
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:397    .text.process_record_quantum:00000028 .Loc.85
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:403    .text.process_record_quantum:00000030 .Loc.86
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:404    .text.process_record_quantum:00000030 .Loc.87
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:409    .text.process_record_quantum:00000034 .Loc.88
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:411    .text.process_record_quantum:00000034 .Loc.89
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:416    .text.process_record_quantum:0000003a .Loc.90
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:417    .text.process_record_quantum:0000003a .Loc.91
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:421    .text.process_record_quantum:00000040 .Loc.92
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:423    .text.process_record_quantum:00000044 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:425    .text.process_record_quantum:00000046 .Loc.93
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:430    .text.process_record_quantum:0000004e .Loc.94
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:432    .text.process_record_quantum:00000052 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:434    .text.process_record_quantum:00000054 .Loc.95
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:442    .text.process_record_quantum:00000064 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:452    .text.process_record_quantum:00000074 .Loc.96
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:453    .text.process_record_quantum:00000074 .Loc.97
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1922   .bss.shift_interrupted:00000000 shift_interrupted
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:456    .text.process_record_quantum:0000007a .Loc.98
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:457    .text.process_record_quantum:0000007a .Loc.99
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:459    .text.process_record_quantum:0000007e .Loc.100
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:461    .text.process_record_quantum:0000007e .Loc.101
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:462    .text.process_record_quantum:0000007e .Loc.102
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:465    .text.process_record_quantum:00000080 .Loc.103
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:469    .text.process_record_quantum:00000084 .Loc.104
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:473    .text.process_record_quantum:00000088 .Loc.105
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:475    .text.process_record_quantum:0000008a .Loc.106
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:480    .text.process_record_quantum:0000008e .Loc.107
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:481    .text.process_record_quantum:0000008e .Loc.108
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:487    .text.process_record_quantum:00000096 .Loc.109
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:491    .text.process_record_quantum:00000098 .Loc.110
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:493    .text.process_record_quantum:00000098 .Loc.111
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:494    .text.process_record_quantum:00000098 .Loc.112
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:498    .text.process_record_quantum:0000009e .Loc.113
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:503    .text.process_record_quantum:000000a2 .Loc.114
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:507    .text.process_record_quantum:000000aa L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:512    .text.process_record_quantum:000000b2 .Loc.115
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:513    .text.process_record_quantum:000000b2 .Loc.116
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:516    .text.process_record_quantum:000000b6 .Loc.117
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:518    .text.process_record_quantum:000000ba L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:520    .text.process_record_quantum:000000bc .Loc.118
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:521    .text.process_record_quantum:000000bc .Loc.119
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:523    .text.process_record_quantum:000000c0 .Loc.120
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:524    .text.process_record_quantum:000000c0 .Loc.121
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:527    .text.process_record_quantum:000000c4 .Loc.122
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1917   .bss.scs_timer:00000000 scs_timer
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:530    .text.process_record_quantum:000000cc .Loc.123
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:534    .text.process_record_quantum:000000d0 .Loc.124
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:535    .text.process_record_quantum:000000d0 .Loc.125
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:539    .text.process_record_quantum:000000d6 .Loc.126
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:543    .text.process_record_quantum:000000da .Loc.127
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:549    .text.process_record_quantum:000000e0 .Loc.128
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:553    .text.process_record_quantum:000000e4 .Loc.129
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:558    .text.process_record_quantum:000000e8 .Loc.130
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:559    .text.process_record_quantum:000000e8 .Loc.131
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:560    .text.process_record_quantum:000000e8 .Loc.132
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:565    .text.process_record_quantum:000000f0 .Loc.133
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:566    .text.process_record_quantum:000000f0 .Loc.134
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:567    .text.process_record_quantum:000000f0 .Loc.135
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:573    .text.process_record_quantum:000000fc .Loc.136
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:574    .text.process_record_quantum:000000fc .Loc.137
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:575    .text.process_record_quantum:000000fc .Loc.138
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:579    .text.process_record_quantum:00000104 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:581    .text.process_record_quantum:00000106 .Loc.139
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:582    .text.process_record_quantum:00000106 .Loc.140
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:585    .text.process_record_quantum:0000010a .Loc.141
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:588    .text.process_record_quantum:0000010e .Loc.142
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:592    .text.process_record_quantum:00000112 .Loc.143
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:593    .text.process_record_quantum:00000112 .Loc.144
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:599    .text.process_record_quantum:00000120 .Loc.145
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:603    .text.process_record_quantum:00000126 .Loc.146
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:635    .text.process_record_quantum:0000013a .Loc.147
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:636    .text.process_record_quantum:0000013a .Loc.148
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:640    .text.process_record_quantum:00000140 .Loc.149
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:642    .text.process_record_quantum:00000144 .Loc.150
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:643    .text.process_record_quantum:00000144 .Loc.151
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:647    .text.process_record_quantum:0000014c .Loc.152
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:650    .text.process_record_quantum:00000150 .Loc.153
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:651    .text.process_record_quantum:00000150 .Loc.154
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:654    .text.process_record_quantum:00000152 .Loc.155
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:655    .text.process_record_quantum:00000152 .Loc.156
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:660    .text.process_record_quantum:0000015a .Loc.157
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:661    .text.process_record_quantum:0000015a .Loc.158
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:666    .text.process_record_quantum:00000162 .Loc.159
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:667    .text.process_record_quantum:00000162 .Loc.160
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:672    .text.process_record_quantum:0000016a .Loc.161
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:673    .text.process_record_quantum:0000016a .Loc.162
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:678    .text.process_record_quantum:00000172 .Loc.163
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:679    .text.process_record_quantum:00000172 .Loc.164
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:684    .text.process_record_quantum:0000017a .Loc.165
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:685    .text.process_record_quantum:0000017a .Loc.166
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:690    .text.process_record_quantum:00000182 .Loc.167
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:691    .text.process_record_quantum:00000182 .Loc.168
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:692    .text.process_record_quantum:00000182 .Loc.169
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:697    .text.process_record_quantum:0000018a .Loc.170
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:698    .text.process_record_quantum:0000018a .Loc.171
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:703    .text.process_record_quantum:00000192 .Loc.172
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:704    .text.process_record_quantum:00000192 .Loc.173
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:709    .text.process_record_quantum:0000019a .Loc.174
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:710    .text.process_record_quantum:0000019a .Loc.175
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:715    .text.process_record_quantum:000001a2 .Loc.176
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:716    .text.process_record_quantum:000001a2 .Loc.177
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:721    .text.process_record_quantum:000001aa .Loc.178
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:722    .text.process_record_quantum:000001aa .Loc.179
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:727    .text.process_record_quantum:000001b2 .Loc.180
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:728    .text.process_record_quantum:000001b2 .Loc.181
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:733    .text.process_record_quantum:000001ba .Loc.182
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:734    .text.process_record_quantum:000001ba .Loc.183
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:739    .text.process_record_quantum:000001c2 .Loc.184
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:740    .text.process_record_quantum:000001c2 .Loc.185
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:745    .text.process_record_quantum:000001ca .Loc.186
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:746    .text.process_record_quantum:000001ca .Loc.187
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:747    .text.process_record_quantum:000001ca .Loc.188
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:752    .text.process_record_quantum:000001d2 .Loc.189
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:753    .text.process_record_quantum:000001d2 .Loc.190
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:755    .text.process_record_quantum:000001d6 .Loc.191
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:762    .text.process_record_quantum:000001e0 .Loc.192
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:763    .text.process_record_quantum:000001e0 .Loc.193
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:766    .text.process_record_quantum:000001e4 .Loc.194
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:769    .text.process_record_quantum:000001e8 .Loc.195
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:770    .text.process_record_quantum:000001e8 .Loc.196
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:772    .text.process_record_quantum:000001ec .Loc.197
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:773    .text.process_record_quantum:000001ec .Loc.198
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:776    .text.process_record_quantum:000001f0 .Loc.199
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:779    .text.process_record_quantum:000001f8 .Loc.200
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:782    .text.process_record_quantum:000001fa .Loc.201
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:787    .text.process_record_quantum:00000200 .Loc.202
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:788    .text.process_record_quantum:00000200 .Loc.203
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:792    .text.process_record_quantum:00000208 .Loc.204
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:797    .text.process_record_quantum:00000214 .Loc.205
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:801    .text.process_record_quantum:0000021a .Loc.206
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:805    .text.process_record_quantum:00000220 .Loc.207
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:810    .text.process_record_quantum:00000226 .Loc.208
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:813    .text.process_record_quantum:00000228 .Loc.209
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:818    .text.process_record_quantum:0000022e .Loc.210
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:819    .text.process_record_quantum:0000022e .Loc.211
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:823    .text.process_record_quantum:00000236 .Loc.212
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:828    .text.process_record_quantum:00000242 .Loc.213
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:832    .text.process_record_quantum:00000248 .Loc.214
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:836    .text.process_record_quantum:0000024e .Loc.215
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:841    .text.process_record_quantum:00000254 .Loc.216
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:844    .text.process_record_quantum:00000258 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:850    .text.send_string:00000000 send_string
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:853    .text.send_string:00000000 .Loc.217
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:854    .text.send_string:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:855    .text.send_string:00000000 .Loc.218
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:875    .text.send_string:00000008 .Loc.219
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:877    .text.send_string:00000008 .Loc.220
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:878    .text.send_string:00000008 .Loc.221
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:880    .text.send_string:00000008 .Loc.222
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:881    .text.send_string:00000008 .Loc.223
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:882    .text.send_string:00000008 .Loc.224
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:890    .text.send_string:0000000c .Loc.225
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:891    .text.send_string:0000000c .Loc.226
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:894    .text.send_string:0000000c .Loc.227
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:895    .text.send_string:0000000c .Loc.228
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:898    .text.send_string:00000010 .Loc.229
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:900    .text.send_string:00000010 .Loc.230
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:903    .text.send_string:00000012 .Loc.231
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:904    .text.send_string:00000012 .Loc.232
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1652   .progmem.data.ascii_to_qwerty_keycode_lut:00000000 ascii_to_qwerty_keycode_lut
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:909    .text.send_string:00000018 .Loc.233
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:916    .text.send_string:0000001a .Loc.234
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:917    .text.send_string:0000001a .Loc.235
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:920    .text.send_string:0000001a .Loc.236
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:922    .text.send_string:0000001a .Loc.237
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:923    .text.send_string:0000001a .Loc.238
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:924    .text.send_string:0000001a .Loc.239
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1785   .progmem.data.ascii_to_qwerty_shift_lut:00000000 ascii_to_qwerty_shift_lut
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:928    .text.send_string:0000001e .Loc.240
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:931    .text.send_string:00000020 .Loc.241
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:938    .text.send_string:00000022 .Loc.242
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:941    .text.send_string:00000022 .Loc.243
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:944    .text.send_string:00000026 .Loc.244
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:948    .text.send_string:0000002c .Loc.245
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:952    .text.send_string:00000032 .Loc.246
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:956    .text.send_string:00000038 .Loc.247
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:959    .text.send_string:0000003a .Loc.248
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:962    .text.send_string:0000003e .Loc.249
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:966    .text.send_string:00000042 .Loc.250
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:968    .text.send_string:00000042 .Loc.251
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:969    .text.send_string:00000042 .Loc.252
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:974    .text.send_string:00000044 .Loc.253
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:978    .text.send_string:0000004a .Loc.254
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:984    .text.send_string:0000004e .Loc.255
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:986    .text.send_string:0000004e .Loc.256
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:991    .text.send_string:00000054 .Loc.257
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:993    .text.send_string:00000056 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:999    .text.update_tri_layer:00000000 update_tri_layer
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1002   .text.update_tri_layer:00000000 .Loc.258
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1003   .text.update_tri_layer:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1004   .text.update_tri_layer:00000000 .Loc.259
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1049   .text.update_tri_layer:00000014 .Loc.260
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1079   .text.update_tri_layer:00000044 .Loc.261
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1084   .text.update_tri_layer:0000004c .Loc.262
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1098   .text.update_tri_layer:0000006e .Loc.263
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1101   .text.update_tri_layer:00000070 .Loc.264
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1112   .text.update_tri_layer:00000084 .Loc.265
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1116   .text.update_tri_layer:00000088 .Loc.266
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1119   .text.update_tri_layer:0000008a .Loc.267
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1130   .text.update_tri_layer:0000009e .Loc.268
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1133   .text.update_tri_layer:000000a2 .Loc.269
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1134   .text.update_tri_layer:000000a2 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1140   .text.tap_random_base64:00000000 tap_random_base64
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1142   .text.tap_random_base64:00000000 .Loc.270
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1143   .text.tap_random_base64:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1156   .text.tap_random_base64:00000004 .Loc.271
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1157   .text.tap_random_base64:00000004 .Loc.272
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1159   .text.tap_random_base64:00000006 .Loc.273
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1162   .text.tap_random_base64:0000000e .Loc.274
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1165   .text.tap_random_base64:00000016 .Loc.275
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1168   .text.tap_random_base64:0000001e .Loc.276
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1171   .text.tap_random_base64:00000022 .Loc.277
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1173   .text.tap_random_base64:00000024 .Loc.278
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1176   .text.tap_random_base64:00000026 .Loc.279
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1185   .text.tap_random_base64:00000036 .Loc.280
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1189   .text.tap_random_base64:00000038 .Loc.281
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1193   .text.tap_random_base64:0000003e .Loc.282
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1198   .text.tap_random_base64:00000042 .Loc.283
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1204   .text.tap_random_base64:0000004a .Loc.284
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1208   .text.tap_random_base64:00000050 .Loc.285
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1211   .text.tap_random_base64:00000052 .Loc.286
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1215   .text.tap_random_base64:00000058 .Loc.287
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1219   .text.tap_random_base64:0000005a .Loc.288
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1222   .text.tap_random_base64:0000005e .Loc.289
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1227   .text.tap_random_base64:00000062 .Loc.290
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1231   .text.tap_random_base64:00000068 .Loc.291
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1236   .text.tap_random_base64:0000006a .Loc.292
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1239   .text.tap_random_base64:0000006e .Loc.293
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1243   .text.tap_random_base64:00000072 .Loc.294
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1246   .text.tap_random_base64:00000074 .Loc.295
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1250   .text.tap_random_base64:00000076 .Loc.296
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1254   .text.tap_random_base64:0000007c .Loc.297
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1258   .text.tap_random_base64:00000082 .Loc.298
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1262   .text.tap_random_base64:00000086 .Loc.299
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1266   .text.tap_random_base64:0000008c .Loc.300
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1269   .text.tap_random_base64:00000090 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1275   .text.matrix_init_quantum:00000000 matrix_init_quantum
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1277   .text.matrix_init_quantum:00000000 .Loc.301
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1278   .text.matrix_init_quantum:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1283   .text.matrix_init_quantum:00000000 .Loc.302
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1286   .text.matrix_init_quantum:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1292   .text.matrix_scan_quantum:00000000 matrix_scan_quantum
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1294   .text.matrix_scan_quantum:00000000 .Loc.303
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1295   .text.matrix_scan_quantum:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1300   .text.matrix_scan_quantum:00000000 .Loc.304
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1303   .text.matrix_scan_quantum:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1309   .text.backlight_init_ports:00000000 backlight_init_ports
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1311   .text.backlight_init_ports:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1318   .text.backlight_init_ports:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1324   .text.send_nibble:00000000 send_nibble
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1327   .text.send_nibble:00000000 .Loc.305
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1328   .text.send_nibble:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1329   .text.send_nibble:00000000 .Loc.306
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1338   .text.send_nibble:00000002 .Loc.307
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1343   .text.send_nibble:0000000a .Loc.308
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1346   .text.send_nibble:0000000c .Loc.309
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1350   .text.send_nibble:00000010 .Loc.310
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1353   .text.send_nibble:00000014 .Loc.311
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1358   .text.send_nibble:00000018 .Loc.312
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1360   .text.send_nibble:0000001a .Loc.313
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1364   .text.send_nibble:0000001e .Loc.314
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1368   .text.send_nibble:00000022 .Loc.315
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1371   .text.send_nibble:00000024 .Loc.316
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1374   .text.send_nibble:00000028 .Loc.317
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1378   .text.send_nibble:0000002a .Loc.318
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1380   .text.send_nibble:0000002c .Loc.319
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1383   .text.send_nibble:00000030 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1389   .text.send_byte:00000000 send_byte
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1392   .text.send_byte:00000000 .Loc.320
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1393   .text.send_byte:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1394   .text.send_byte:00000000 .Loc.321
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1404   .text.send_byte:00000004 .Loc.322
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1406   .text.send_byte:00000004 .Loc.323
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1409   .text.send_byte:00000006 .Loc.324
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1413   .text.send_byte:0000000c .Loc.325
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1417   .text.send_byte:00000010 .Loc.326
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1420   .text.send_byte:00000012 .Loc.327
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1423   .text.send_byte:00000016 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1429   .text.send_word:00000000 send_word
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1432   .text.send_word:00000000 .Loc.328
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1433   .text.send_word:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1434   .text.send_word:00000000 .Loc.329
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1444   .text.send_word:00000004 .Loc.330
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1446   .text.send_word:00000004 .Loc.331
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1449   .text.send_word:00000006 .Loc.332
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1452   .text.send_word:0000000a .Loc.333
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1455   .text.send_word:0000000c .Loc.334
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1457   .text.send_word:0000000e .Loc.335
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1460   .text.send_word:00000012 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1466   .text.send_dword:00000000 send_dword
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1469   .text.send_dword:00000000 .Loc.336
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1470   .text.send_dword:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1471   .text.send_dword:00000000 .Loc.337
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1493   .text.send_dword:0000000a .Loc.338
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1494   .text.send_dword:0000000a .Loc.339
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1497   .text.send_dword:0000000e .Loc.340
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1500   .text.send_dword:00000010 .Loc.341
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1505   .text.send_dword:00000018 .Loc.342
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1508   .text.send_dword:0000001c L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1514   .text.api_send_unicode:00000000 api_send_unicode
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1517   .text.api_send_unicode:00000000 .Loc.343
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1518   .text.api_send_unicode:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1523   .text.api_send_unicode:00000000 .Loc.344
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1526   .text.api_send_unicode:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1532   .text.led_set_user:00000000 led_set_user
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1535   .text.led_set_user:00000000 .Loc.345
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1536   .text.led_set_user:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1541   .text.led_set_user:00000000 .Loc.346
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1544   .text.led_set_user:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1532   .text.led_set_user:00000000 led_set_user.localalias.1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1551   .text.backlight_set:00000000 backlight_set
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1553   .text.backlight_set:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1560   .text.backlight_set:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1566   .text.led_set_kb:00000000 led_set_kb
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1569   .text.led_set_kb:00000000 .Loc.347
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1570   .text.led_set_kb:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1575   .text.led_set_kb:00000000 .Loc.348
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1578   .text.led_set_kb:00000004 .Loc.349
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1579   .text.led_set_kb:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1585   .text.led_init_ports:00000000 led_init_ports
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1587   .text.led_init_ports:00000000 .Loc.350
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1588   .text.led_init_ports:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1593   .text.led_init_ports:00000000 .Loc.351
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1596   .text.led_init_ports:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1602   .text.led_set:00000000 led_set
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1605   .text.led_set:00000000 .Loc.352
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1606   .text.led_set:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1611   .text.led_set:00000000 .Loc.353
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1614   .text.led_set:00000004 .Loc.354
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1615   .text.led_set:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1621   .text.startup_user:00000000 startup_user
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1623   .text.startup_user:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1630   .text.startup_user:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1636   .text.shutdown_user:00000000 shutdown_user
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1638   .text.shutdown_user:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1645   .text.shutdown_user:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:143    .text.do_code16:0000006c L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:177    .text.register_code16:00000014 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:218    .text.unregister_code16:00000018 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:240    .text.process_action_kb:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:262    .text.process_record_user:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:282    .text.process_record_kb:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:334    .text.reset_keyboard:0000001a L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:847    .text.process_record_quantum:00000258 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:996    .text.send_string:00000056 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1137   .text.update_tri_layer:000000a2 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1272   .text.tap_random_base64:00000090 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1289   .text.matrix_init_quantum:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1306   .text.matrix_scan_quantum:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1386   .text.send_nibble:00000030 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1426   .text.send_byte:00000016 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1463   .text.send_word:00000012 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1511   .text.send_dword:0000001c L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1529   .text.api_send_unicode:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1548   .text.led_set_user:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1582   .text.led_set_kb:00000004 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1599   .text.led_init_ports:00000002 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1618   .text.led_set:00000004 L0
                     .debug_frame:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:128    .text.do_code16:00000062 .L1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:58     .text.do_code16:0000001e .L4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:68     .text.do_code16:00000028 .L5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:78     .text.do_code16:00000032 .L6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:88     .text.do_code16:0000003c .L7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:318    .text.reset_keyboard:0000000a .L11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:490    .text.process_record_quantum:00000098 .L28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:478    .text.process_record_quantum:0000008e .L29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:542    .text.process_record_quantum:000000da .L27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:502    .text.process_record_quantum:000000a2 .L35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:572    .text.process_record_quantum:000000fc .L36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:533    .text.process_record_quantum:000000d0 .L37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:557    .text.process_record_quantum:000000e8 .L38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:402    .text.process_record_quantum:00000030 .L30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:408    .text.process_record_quantum:00000034 .L85
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:761    .text.process_record_quantum:000001e0 .L40
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:451    .text.process_record_quantum:00000074 .L39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:817    .text.process_record_quantum:0000022e .L69
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:781    .text.process_record_quantum:000001fa .L87
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:460    .text.process_record_quantum:0000007e .L42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:591    .text.process_record_quantum:00000112 .L43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:639    .text.process_record_quantum:00000140 .L86
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:614    .jumptables.gcc.process_record_quantum:00000000 .L46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:786    .text.process_record_quantum:00000200 .L65
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:809    .text.process_record_quantum:00000226 .L67
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:840    .text.process_record_quantum:00000254 .L71
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:812    .text.process_record_quantum:00000228 .L88
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:634    .text.process_record_quantum:0000013a .L63
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:653    .text.process_record_quantum:00000152 .L62
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:659    .text.process_record_quantum:0000015a .L61
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:665    .text.process_record_quantum:00000162 .L60
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:671    .text.process_record_quantum:0000016a .L59
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:677    .text.process_record_quantum:00000172 .L58
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:683    .text.process_record_quantum:0000017a .L57
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:689    .text.process_record_quantum:00000182 .L56
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:696    .text.process_record_quantum:0000018a .L55
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:702    .text.process_record_quantum:00000192 .L54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:708    .text.process_record_quantum:0000019a .L53
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:714    .text.process_record_quantum:000001a2 .L52
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:720    .text.process_record_quantum:000001aa .L51
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:726    .text.process_record_quantum:000001b2 .L50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:732    .text.process_record_quantum:000001ba .L49
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:738    .text.process_record_quantum:000001c2 .L48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:744    .text.process_record_quantum:000001ca .L47
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:751    .text.process_record_quantum:000001d2 .L45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:982    .text.send_string:0000004e .L89
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:972    .text.send_string:00000044 .L91
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:874    .text.send_string:00000008 .L93
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:958    .text.send_string:0000003a .L94
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1062   .text.update_tri_layer:0000002a .L21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1057   .text.update_tri_layer:00000022 .L12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1073   .text.update_tri_layer:0000003c .L22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1068   .text.update_tri_layer:00000034 .L13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1115   .text.update_tri_layer:00000088 .L96
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1197   .text.tap_random_base64:00000042 .L98
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1242   .text.tap_random_base64:00000072 .L99
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1203   .text.tap_random_base64:0000004a .L100
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1226   .text.tap_random_base64:00000062 .L105
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1234   .text.tap_random_base64:0000006a .L106
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1249   .text.tap_random_base64:00000076 .L103
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1261   .text.tap_random_base64:00000086 .L104
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1188   .text.tap_random_base64:00000038 .L108
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1218   .text.tap_random_base64:0000005a .L107
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1357   .text.send_nibble:00000018 .L113
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1367   .text.send_nibble:00000022 .L118
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1376   .text.send_nibble:0000002a .L120
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1345   .text.send_nibble:0000000c .L121
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:5452   .debug_abbrev:00000000 .Ldebug_abbrev0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:8105   .debug_ranges:00000000 .Ldebug_ranges0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:8171   .debug_line:00000000 .Ldebug_line0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1604   .text.led_set:00000000 .LFB134
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1616   .text.led_set:00000004 .LFE134
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6652   .debug_loc:00000004 .LLST46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6647   .debug_loc:00000000 .LVUS46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1613   .text.led_set:00000004 .LVL137
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1568   .text.led_set_kb:00000000 .LFB132
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1580   .text.led_set_kb:00000004 .LFE132
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6671   .debug_loc:00000029 .LLST45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6666   .debug_loc:00000025 .LVUS45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1577   .text.led_set_kb:00000004 .LVL135
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1534   .text.led_set_user:00000000 .LFB131
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1545   .text.led_set_user:00000002 .LFE131
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1516   .text.api_send_unicode:00000000 .LFB130
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1527   .text.api_send_unicode:00000002 .LFE130
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1326   .text.send_nibble:00000000 .LFB129
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1384   .text.send_nibble:00000030 .LFE129
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6685   .debug_loc:0000004a .LLST35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6709   .debug_loc:00000074 .LLST36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6700   .debug_loc:0000006c .LVUS36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1352   .text.send_nibble:00000014 .LVL113
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1373   .text.send_nibble:00000028 .LVL116
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1382   .text.send_nibble:00000030 .LVL117
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1391   .text.send_byte:00000000 .LFB128
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1424   .text.send_byte:00000016 .LFE128
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6734   .debug_loc:000000ae .LLST37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6756   .debug_loc:000000d6 .LLST38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6749   .debug_loc:000000d0 .LVUS38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6781   .debug_loc:00000108 .LLST39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6774   .debug_loc:00000102 .LVUS39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1412   .text.send_byte:0000000c .LVL121
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1422   .text.send_byte:00000016 .LVL123
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1431   .text.send_word:00000000 .LFB127
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1461   .text.send_word:00000012 .LFE127
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6809   .debug_loc:0000013e .LLST40
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6829   .debug_loc:00000164 .LLST41
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6824   .debug_loc:00000160 .LVUS41
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6851   .debug_loc:0000018c .LLST42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6848   .debug_loc:0000018a .LVUS42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1451   .text.send_word:0000000a .LVL127
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1459   .text.send_word:00000012 .LVL128
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1468   .text.send_dword:00000000 .LFB126
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1509   .text.send_dword:0000001c .LFE126
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6858   .debug_loc:0000019f .LLST43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6896   .debug_loc:000001ec .LLST44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6891   .debug_loc:000001e8 .LVUS44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1496   .text.send_dword:0000000e .LVL130
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1507   .text.send_dword:0000001c .LVL131
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1293   .text.matrix_scan_quantum:00000000 .LFB123
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1304   .text.matrix_scan_quantum:00000004 .LFE123
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1302   .text.matrix_scan_quantum:00000004 .LVL110
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1276   .text.matrix_init_quantum:00000000 .LFB122
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1287   .text.matrix_init_quantum:00000004 .LFE122
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1285   .text.matrix_init_quantum:00000004 .LVL109
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1141   .text.tap_random_base64:00000000 .LFB121
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1270   .text.tap_random_base64:00000090 .LFE121
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6921   .debug_loc:00000218 .LLST33
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6957   .debug_loc:00000255 .LLST34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6942   .debug_loc:00000247 .LVUS34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1192   .text.tap_random_base64:0000003e .LVL93
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1207   .text.tap_random_base64:00000050 .LVL95
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1214   .text.tap_random_base64:00000058 .LVL97
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1221   .text.tap_random_base64:0000005e .LVL99
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1230   .text.tap_random_base64:00000068 .LVL101
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1241   .text.tap_random_base64:00000072 .LVL103
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1253   .text.tap_random_base64:0000007c .LVL106
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1257   .text.tap_random_base64:00000082 .LVL107
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1265   .text.tap_random_base64:0000008c .LVL108
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1001   .text.update_tri_layer:00000000 .LFB120
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1135   .text.update_tri_layer:000000a2 .LFE120
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:6992   .debug_loc:000002ae .LLST29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7066   .debug_loc:00000349 .LLST30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7061   .debug_loc:00000345 .LVUS30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7089   .debug_loc:00000372 .LLST31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7080   .debug_loc:0000036a .LVUS31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7123   .debug_loc:000003b4 .LLST32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7114   .debug_loc:000003ac .LVUS32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1114   .text.update_tri_layer:00000088 .LVL89
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1132   .text.update_tri_layer:000000a2 .LVL90
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:852    .text.send_string:00000000 .LFB119
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:994    .text.send_string:00000056 .LFE119
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7148   .debug_loc:000003ee .LLST19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7182   .debug_loc:00000430 .LLST20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7175   .debug_loc:0000042a .LVUS20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7215   .debug_loc:0000046a .LLST21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7212   .debug_loc:00000468 .LVUS21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7227   .debug_loc:00000481 .LLST22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7222   .debug_loc:0000047d .LVUS22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:879    .text.send_string:00000008 .LBB15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:893    .text.send_string:0000000c .LBE15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7247   .debug_loc:000004a7 .LLST23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7238   .debug_loc:0000049f .LVUS23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7288   .debug_loc:000004f0 .LLST24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7283   .debug_loc:000004ec .LVUS24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:899    .text.send_string:00000010 .LBB16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:919    .text.send_string:0000001a .LBE16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7310   .debug_loc:00000518 .LLST25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7299   .debug_loc:0000050e .LVUS25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7370   .debug_loc:00000590 .LLST26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7367   .debug_loc:0000058e .LVUS26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:921    .text.send_string:0000001a .LBB17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:940    .text.send_string:00000022 .LBE17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7386   .debug_loc:000005ab .LLST27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7377   .debug_loc:000005a3 .LVUS27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7430   .debug_loc:000005fa .LLST28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7425   .debug_loc:000005f6 .LVUS28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:947    .text.send_string:0000002c .LVL78
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:951    .text.send_string:00000032 .LVL79
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:955    .text.send_string:00000038 .LVL80
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:961    .text.send_string:0000003e .LVL81
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:977    .text.send_string:0000004a .LVL84
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:339    .text.process_record_quantum:00000000 .LFB118
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:845    .text.process_record_quantum:00000258 .LFE118
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7441   .debug_loc:00000618 .LLST14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7495   .debug_loc:0000067c .LLST15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7480   .debug_loc:0000066e .LVUS15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7564   .debug_loc:000006f6 .LLST16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7557   .debug_loc:000006f0 .LVUS16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7603   .debug_loc:00000736 .LLST17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7594   .debug_loc:0000072e .LVUS17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7647   .debug_loc:00000782 .LLST18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7642   .debug_loc:0000077e .LVUS18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:394    .text.process_record_quantum:00000026 .LVL34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:401    .text.process_record_quantum:00000030 .LVL36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:484    .text.process_record_quantum:00000094 .LVL45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:413    .text.process_record_quantum:00000038 .LVL38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:420    .text.process_record_quantum:00000040 .LVL40
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:429    .text.process_record_quantum:0000004e .LVL41
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:477    .text.process_record_quantum:0000008e .LVL44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:497    .text.process_record_quantum:0000009e .LVL48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:526    .text.process_record_quantum:000000c4 .LVL50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:541    .text.process_record_quantum:000000da .LVL51
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:584    .text.process_record_quantum:0000010a .LVL55
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:590    .text.process_record_quantum:00000112 .LVL56
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:595    .text.process_record_quantum:00000116 .LVL57
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:646    .text.process_record_quantum:0000014c .LVL58
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:649    .text.process_record_quantum:00000150 .LVL59
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:775    .text.process_record_quantum:000001f0 .LVL60
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:784    .text.process_record_quantum:000001fe .LVL61
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:796    .text.process_record_quantum:00000214 .LVL62
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:804    .text.process_record_quantum:00000220 .LVL63
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:808    .text.process_record_quantum:00000226 .LVL64
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:815    .text.process_record_quantum:0000022c .LVL65
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:827    .text.process_record_quantum:00000242 .LVL66
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:835    .text.process_record_quantum:0000024e .LVL67
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:839    .text.process_record_quantum:00000254 .LVL68
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:286    .text.reset_keyboard:00000000 .LFB117
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:332    .text.reset_keyboard:0000001a .LFE117
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:298    .text.reset_keyboard:00000004 .LBI8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7661   .debug_loc:000007a2 .LLST11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7658   .debug_loc:000007a0 .LVUS11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7673   .debug_loc:000007bc .LLST12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7670   .debug_loc:000007ba .LVUS12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7685   .debug_loc:000007d6 .LLST13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7682   .debug_loc:000007d4 .LVUS13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:295    .text.reset_keyboard:00000004 .LVL27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:330    .text.reset_keyboard:0000001a .LVL29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:245    .text.process_record_user:00000000 .LFB116
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:260    .text.process_record_user:00000004 .LFE116
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7699   .debug_loc:000007f2 .LLST8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7694   .debug_loc:000007ee .LVUS8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:267    .text.process_record_kb:00000000 .LFB115
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:280    .text.process_record_kb:00000004 .LFE115
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7723   .debug_loc:0000081c .LLST9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7718   .debug_loc:00000818 .LVUS9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7747   .debug_loc:00000846 .LLST10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7742   .debug_loc:00000842 .LVUS10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:277    .text.process_record_kb:00000004 .LVL26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:223    .text.process_action_kb:00000000 .LFB114
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:238    .text.process_action_kb:00000004 .LFE114
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7771   .debug_loc:00000870 .LLST7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7766   .debug_loc:0000086c .LVUS7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:182    .text.unregister_code16:00000000 .LFB113
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:216    .text.unregister_code16:00000018 .LFE113
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7790   .debug_loc:00000896 .LLST5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7820   .debug_loc:000008cd .LLST6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7811   .debug_loc:000008c5 .LVUS6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:201    .text.unregister_code16:0000000a .LVL18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:213    .text.unregister_code16:00000018 .LVL20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:148    .text.register_code16:00000000 .LFB112
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:175    .text.register_code16:00000014 .LFE112
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7857   .debug_loc:00000913 .LLST3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7877   .debug_loc:00000939 .LLST4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7872   .debug_loc:00000935 .LVUS4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:165    .text.register_code16:0000000c .LVL15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:173    .text.register_code16:00000014 .LVL16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:14     .text.do_code16:00000000 .LFB111
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:141    .text.do_code16:0000006c .LFE111
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7896   .debug_loc:0000095f .LLST0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7940   .debug_loc:000009b2 .LLST1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7929   .debug_loc:000009a8 .LVUS1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7997   .debug_loc:00000a12 .LLST2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:7984   .debug_loc:00000a06 .LVUS2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:57     .text.do_code16:0000001e .LVL2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:67     .text.do_code16:00000028 .LVL3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:77     .text.do_code16:00000032 .LVL4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:87     .text.do_code16:0000003c .LVL5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:99     .text.do_code16:00000048 .LVL6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:105    .text.do_code16:0000004e .LVL7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:111    .text.do_code16:00000054 .LVL8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:127    .text.do_code16:00000062 .LVL11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1586   .text.led_init_ports:00000000 .LFB133
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1597   .text.led_init_ports:00000002 .LFE133
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1603   .text.led_set:00000000 .LVL136
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1567   .text.led_set_kb:00000000 .LVL134
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1331   .text.send_nibble:00000002 .LCFI27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1325   .text.send_nibble:00000000 .LVL111
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1349   .text.send_nibble:00000010 .LVL112
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1356   .text.send_nibble:00000018 .LVL114
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1370   .text.send_nibble:00000024 .LVL115
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1396   .text.send_byte:00000002 .LCFI28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1390   .text.send_byte:00000000 .LVL118
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1408   .text.send_byte:00000006 .LVL120
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1419   .text.send_byte:00000012 .LVL122
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1405   .text.send_byte:00000004 .LVL119
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1436   .text.send_word:00000002 .LCFI29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1430   .text.send_word:00000000 .LVL124
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1448   .text.send_word:00000006 .LVL126
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1445   .text.send_word:00000004 .LVL125
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1473   .text.send_dword:00000002 .LCFI30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1477   .text.send_dword:00000004 .LCFI31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1481   .text.send_dword:00000006 .LCFI32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1485   .text.send_dword:00000008 .LCFI33
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1467   .text.send_dword:00000000 .LVL129
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1145   .text.tap_random_base64:00000002 .LCFI25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1149   .text.tap_random_base64:00000004 .LCFI26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1175   .text.tap_random_base64:00000026 .LVL91
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1187   .text.tap_random_base64:00000038 .LVL92
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1196   .text.tap_random_base64:00000042 .LVL94
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1210   .text.tap_random_base64:00000052 .LVL96
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1217   .text.tap_random_base64:0000005a .LVL98
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1225   .text.tap_random_base64:00000062 .LVL100
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1233   .text.tap_random_base64:0000006a .LVL102
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1245   .text.tap_random_base64:00000074 .LVL104
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1248   .text.tap_random_base64:00000076 .LVL105
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1006   .text.update_tri_layer:00000002 .LCFI15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1010   .text.update_tri_layer:00000004 .LCFI16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1014   .text.update_tri_layer:00000006 .LCFI17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1018   .text.update_tri_layer:00000008 .LCFI18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1022   .text.update_tri_layer:0000000a .LCFI19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1026   .text.update_tri_layer:0000000c .LCFI20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1030   .text.update_tri_layer:0000000e .LCFI21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1034   .text.update_tri_layer:00000010 .LCFI22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1038   .text.update_tri_layer:00000012 .LCFI23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1042   .text.update_tri_layer:00000014 .LCFI24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1000   .text.update_tri_layer:00000000 .LVL87
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1078   .text.update_tri_layer:00000044 .LVL88
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:857    .text.send_string:00000002 .LCFI12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:861    .text.send_string:00000004 .LCFI13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:865    .text.send_string:00000006 .LCFI14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:851    .text.send_string:00000000 .LVL69
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:873    .text.send_string:00000008 .LVL70
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:990    .text.send_string:00000054 .LVL86
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:915    .text.send_string:0000001a .LVL74
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:981    .text.send_string:0000004e .LVL85
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:889    .text.send_string:0000000c .LVL71
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:927    .text.send_string:0000001e .LVL75
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:965    .text.send_string:00000042 .LVL82
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:971    .text.send_string:00000044 .LVL83
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:902    .text.send_string:00000012 .LVL72
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:908    .text.send_string:00000018 .LVL73
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:930    .text.send_string:00000020 .LVL76
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:937    .text.send_string:00000022 .LVL77
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:344    .text.process_record_quantum:00000002 .LCFI7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:348    .text.process_record_quantum:00000004 .LCFI8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:352    .text.process_record_quantum:00000006 .LCFI9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:356    .text.process_record_quantum:00000008 .LCFI10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:360    .text.process_record_quantum:0000000a .LCFI11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:338    .text.process_record_quantum:00000000 .LVL30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:378    .text.process_record_quantum:00000016 .LVL32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:472    .text.process_record_quantum:00000088 .LVL43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:552    .text.process_record_quantum:000000e4 .LVL53
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:556    .text.process_record_quantum:000000e8 .LVL54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:390    .text.process_record_quantum:00000020 .LVL33
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:415    .text.process_record_quantum:0000003a .LVL39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:489    .text.process_record_quantum:00000098 .LVL47
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:501    .text.process_record_quantum:000000a2 .LVL49
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:468    .text.process_record_quantum:00000084 .LVL42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:548    .text.process_record_quantum:000000e0 .LVL52
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:396    .text.process_record_quantum:00000028 .LVL35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:407    .text.process_record_quantum:00000034 .LVL37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:486    .text.process_record_quantum:00000096 .LVL46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:324    .text.reset_keyboard:00000016 .LVL28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:244    .text.process_record_user:00000000 .LVL23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:255    .text.process_record_user:00000002 .LVL24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:266    .text.process_record_kb:00000000 .LVL25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:222    .text.process_action_kb:00000000 .LVL21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:233    .text.process_action_kb:00000002 .LVL22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:187    .text.unregister_code16:00000002 .LCFI5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:191    .text.unregister_code16:00000004 .LCFI6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:181    .text.unregister_code16:00000000 .LVL17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:210    .text.unregister_code16:00000014 .LVL19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:153    .text.register_code16:00000002 .LCFI4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:147    .text.register_code16:00000000 .LVL14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:20     .text.do_code16:00000002 .LCFI0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:24     .text.do_code16:00000004 .LCFI1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:28     .text.do_code16:00000006 .LCFI2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:32     .text.do_code16:00000008 .LCFI3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:13     .text.do_code16:00000000 .LVL0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:43     .text.do_code16:0000000e .LVL1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:124    .text.do_code16:00000060 .LVL10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:137    .text.do_code16:0000006a .LVL13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:120    .text.do_code16:0000005c .LVL9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:133    .text.do_code16:00000066 .LVL12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:1951   .debug_info:00000000 .Ldebug_info0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:297    .text.reset_keyboard:00000004 .LBB8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:309    .text.reset_keyboard:00000004 .LBE8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:312    .text.reset_keyboard:00000004 .LBB11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:327    .text.reset_keyboard:00000016 .LBE11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:382    .text.process_record_quantum:0000001a .LBB12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:410    .text.process_record_quantum:00000034 .LBE12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:479    .text.process_record_quantum:0000008e .LBB13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:492    .text.process_record_quantum:00000098 .LBE13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:876    .text.send_string:00000008 .LBB14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:967    .text.send_string:00000042 .LBE14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:973    .text.send_string:00000044 .LBB18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccBgG9bQ.s:985    .text.send_string:0000004e .LBE18

UNDEFINED SYMBOLS
register_code
unregister_code
clear_keyboard
bootloader_jump
disable_action_cache
layer_switch_get_layer
update_source_layers_cache
keymap_key_to_keycode
process_leader
read_source_layers_cache
timer_read
debug_config
eeconfig_is_enabled
eeconfig_init
eeconfig_read_keymap
keymap_config
__tablejump2__
eeconfig_update_keymap
register_mods
timer_elapsed
unregister_mods
layer_state
layer_on
layer_off
matrix_init_kb
matrix_scan_kb
__do_clear_bss
