   1               		.file	"action_macro.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_macro_play,"ax",@progbits
  11               	.global	action_macro_play
  13               	action_macro_play:
  14               	.LVL0:
  15               	.LFB107:
  16               		.file 1 "./tmk_core/common/action_macro.c"
   1:./tmk_core/common/action_macro.c **** /*
   2:./tmk_core/common/action_macro.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/action_macro.c **** 
   4:./tmk_core/common/action_macro.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/action_macro.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/action_macro.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/action_macro.c **** (at your option) any later version.
   8:./tmk_core/common/action_macro.c **** 
   9:./tmk_core/common/action_macro.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/action_macro.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/action_macro.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/action_macro.c **** GNU General Public License for more details.
  13:./tmk_core/common/action_macro.c **** 
  14:./tmk_core/common/action_macro.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/action_macro.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/action_macro.c **** */
  17:./tmk_core/common/action_macro.c **** #include "action.h"
  18:./tmk_core/common/action_macro.c **** #include "action_util.h"
  19:./tmk_core/common/action_macro.c **** #include "action_macro.h"
  20:./tmk_core/common/action_macro.c **** #include "wait.h"
  21:./tmk_core/common/action_macro.c **** 
  22:./tmk_core/common/action_macro.c **** #ifdef DEBUG_ACTION
  23:./tmk_core/common/action_macro.c **** #include "debug.h"
  24:./tmk_core/common/action_macro.c **** #else
  25:./tmk_core/common/action_macro.c **** #include "nodebug.h"
  26:./tmk_core/common/action_macro.c **** #endif
  27:./tmk_core/common/action_macro.c **** 
  28:./tmk_core/common/action_macro.c **** 
  29:./tmk_core/common/action_macro.c **** #ifndef NO_ACTION_MACRO
  30:./tmk_core/common/action_macro.c **** 
  31:./tmk_core/common/action_macro.c **** #define MACRO_READ()  (macro = MACRO_GET(macro_p++))
  32:./tmk_core/common/action_macro.c **** void action_macro_play(const macro_t *macro_p)
  33:./tmk_core/common/action_macro.c **** {
  17               		.loc 1 33 1 view -0
  18               		.cfi_startproc
  19               		.loc 1 33 1 is_stmt 0 view .LVU1
  20 0000 EF92      		push r14
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 14, -2
  24 0002 FF92      		push r15
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 15, -3
  28 0004 0F93      		push r16
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 16, -4
  32 0006 1F93      		push r17
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 6
  35               		.cfi_offset 17, -5
  36 0008 CF93      		push r28
  37               	.LCFI4:
  38               		.cfi_def_cfa_offset 7
  39               		.cfi_offset 28, -6
  40 000a DF93      		push r29
  41               	.LCFI5:
  42               		.cfi_def_cfa_offset 8
  43               		.cfi_offset 29, -7
  44               	/* prologue: function */
  45               	/* frame size = 0 */
  46               	/* stack size = 6 */
  47               	.L__stack_usage = 6
  48 000c 8C01      		movw r16,r24
  34:./tmk_core/common/action_macro.c ****     macro_t macro = END;
  49               		.loc 1 34 5 is_stmt 1 view .LVU2
  50               	.LVL1:
  35:./tmk_core/common/action_macro.c ****     uint8_t interval = 0;
  51               		.loc 1 35 5 view .LVU3
  36:./tmk_core/common/action_macro.c **** 
  37:./tmk_core/common/action_macro.c ****     if (!macro_p) return;
  52               		.loc 1 37 5 view .LVU4
  53               		.loc 1 37 8 is_stmt 0 view .LVU5
  54 000e 892B      		or r24,r25
  55 0010 01F0      		breq .L1
  35:./tmk_core/common/action_macro.c ****     uint8_t interval = 0;
  56               		.loc 1 35 13 view .LVU6
  57 0012 F12C      		mov r15,__zero_reg__
  38:./tmk_core/common/action_macro.c ****     while (true) {
  39:./tmk_core/common/action_macro.c ****         switch (MACRO_READ()) {
  40:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
  41:./tmk_core/common/action_macro.c ****                 MACRO_READ();
  42:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
  43:./tmk_core/common/action_macro.c ****                 if (IS_MOD(macro)) {
  44:./tmk_core/common/action_macro.c ****                     add_macro_mods(MOD_BIT(macro));
  58               		.loc 1 44 36 view .LVU7
  59 0014 EE24      		clr r14
  60 0016 E394      		inc r14
  61               	.LVL2:
  62               	.L17:
  38:./tmk_core/common/action_macro.c ****     while (true) {
  63               		.loc 1 38 5 is_stmt 1 view .LVU8
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
  64               		.loc 1 39 9 view .LVU9
  65               	.LBB28:
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
  66               		.loc 1 39 17 view .LVU10
  67 0018 E801      		movw r28,r16
  68 001a 2196      		adiw r28,1
  69               	.LVL3:
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
  70               		.loc 1 39 17 view .LVU11
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
  71               		.loc 1 39 17 view .LVU12
  72 001c F801      		movw r30,r16
  73               	/* #APP */
  74               	 ;  39 "./tmk_core/common/action_macro.c" 1
  75 001e 8491      		lpm r24, Z
  76               		
  77               	 ;  0 "" 2
  78               	.LVL4:
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
  79               		.loc 1 39 17 view .LVU13
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
  80               		.loc 1 39 17 is_stmt 0 view .LVU14
  81               	/* #NOAPP */
  82               	.LBE28:
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
  83               		.loc 1 39 9 view .LVU15
  84 0020 8437      		cpi r24,lo8(116)
  85 0022 00F4      		brsh .L3
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
  86               		.loc 1 39 9 view .LVU16
  87 0024 8430      		cpi r24,lo8(4)
  88 0026 00F0      		brlo .+2
  89 0028 00C0      		rjmp .L4
  90 002a 8130      		cpi r24,lo8(1)
  91 002c 01F0      		breq .L5
  92 002e 8230      		cpi r24,lo8(2)
  93 0030 01F0      		breq .L6
  94               	.LVL5:
  95               	.L1:
  96               	/* epilogue start */
  45:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
  46:./tmk_core/common/action_macro.c ****                 } else {
  47:./tmk_core/common/action_macro.c ****                     register_code(macro);
  48:./tmk_core/common/action_macro.c ****                 }
  49:./tmk_core/common/action_macro.c ****                 break;
  50:./tmk_core/common/action_macro.c ****             case KEY_UP:
  51:./tmk_core/common/action_macro.c ****                 MACRO_READ();
  52:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
  53:./tmk_core/common/action_macro.c ****                 if (IS_MOD(macro)) {
  54:./tmk_core/common/action_macro.c ****                     del_macro_mods(MOD_BIT(macro));
  55:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
  56:./tmk_core/common/action_macro.c ****                 } else {
  57:./tmk_core/common/action_macro.c ****                     unregister_code(macro);
  58:./tmk_core/common/action_macro.c ****                 }
  59:./tmk_core/common/action_macro.c ****                 break;
  60:./tmk_core/common/action_macro.c ****             case WAIT:
  61:./tmk_core/common/action_macro.c ****                 MACRO_READ();
  62:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
  63:./tmk_core/common/action_macro.c ****                 { uint8_t ms = macro; while (ms--) wait_ms(1); }
  64:./tmk_core/common/action_macro.c ****                 break;
  65:./tmk_core/common/action_macro.c ****             case INTERVAL:
  66:./tmk_core/common/action_macro.c ****                 interval = MACRO_READ();
  67:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
  68:./tmk_core/common/action_macro.c ****                 break;
  69:./tmk_core/common/action_macro.c ****             case 0x04 ... 0x73:
  70:./tmk_core/common/action_macro.c ****                 dprintf("DOWN(%02X)\n", macro);
  71:./tmk_core/common/action_macro.c ****                 register_code(macro);
  72:./tmk_core/common/action_macro.c ****                 break;
  73:./tmk_core/common/action_macro.c ****             case 0x84 ... 0xF3:
  74:./tmk_core/common/action_macro.c ****                 dprintf("UP(%02X)\n", macro);
  75:./tmk_core/common/action_macro.c ****                 unregister_code(macro&0x7F);
  76:./tmk_core/common/action_macro.c ****                 break;
  77:./tmk_core/common/action_macro.c ****             case END:
  78:./tmk_core/common/action_macro.c ****             default:
  79:./tmk_core/common/action_macro.c ****                 return;
  80:./tmk_core/common/action_macro.c ****         }
  81:./tmk_core/common/action_macro.c ****         // interval
  82:./tmk_core/common/action_macro.c ****         { uint8_t ms = interval; while (ms--) wait_ms(1); }
  83:./tmk_core/common/action_macro.c ****     }
  84:./tmk_core/common/action_macro.c **** }
  97               		.loc 1 84 1 view .LVU17
  98 0032 DF91      		pop r29
  99 0034 CF91      		pop r28
 100 0036 1F91      		pop r17
 101 0038 0F91      		pop r16
 102 003a FF90      		pop r15
 103 003c EF90      		pop r14
 104 003e 0895      		ret
 105               	.LVL6:
 106               	.L3:
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
 107               		.loc 1 39 9 view .LVU18
 108 0040 8537      		cpi r24,lo8(117)
 109 0042 01F4      		brne .+2
 110 0044 00C0      		rjmp .L7
 111 0046 00F4      		brsh .+2
 112 0048 00C0      		rjmp .L8
 113 004a 9CE7      		ldi r25,lo8(124)
 114 004c 980F      		add r25,r24
 115 004e 9037      		cpi r25,lo8(112)
 116 0050 00F4      		brsh .L1
  74:./tmk_core/common/action_macro.c ****                 unregister_code(macro&0x7F);
 117               		.loc 1 74 45 is_stmt 1 view .LVU19
  75:./tmk_core/common/action_macro.c ****                 break;
 118               		.loc 1 75 17 view .LVU20
 119 0052 8F77      		andi r24,lo8(127)
 120               	.LVL7:
  75:./tmk_core/common/action_macro.c ****                 break;
 121               		.loc 1 75 17 is_stmt 0 view .LVU21
 122 0054 0E94 0000 		call unregister_code
 123               	.LVL8:
 124 0058 00C0      		rjmp .L23
 125               	.LVL9:
 126               	.L5:
  41:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 127               		.loc 1 41 17 is_stmt 1 view .LVU22
 128               	.LBB29:
  41:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 129               		.loc 1 41 17 view .LVU23
 130 005a 0E5F      		subi r16,-2
 131 005c 1F4F      		sbci r17,-1
 132               	.LVL10:
  41:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 133               		.loc 1 41 17 view .LVU24
  41:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 134               		.loc 1 41 17 view .LVU25
 135 005e FE01      		movw r30,r28
 136               	.LVL11:
  41:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 137               		.loc 1 41 17 is_stmt 0 view .LVU26
 138               	/* #APP */
 139               	 ;  41 "./tmk_core/common/action_macro.c" 1
 140 0060 8491      		lpm r24, Z
 141               		
 142               	 ;  0 "" 2
 143               	.LVL12:
  41:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 144               		.loc 1 41 17 is_stmt 1 view .LVU27
  41:./tmk_core/common/action_macro.c ****                 dprintf("KEY_DOWN(%02X)\n", macro);
 145               		.loc 1 41 17 is_stmt 0 view .LVU28
 146               	/* #NOAPP */
 147               	.LBE29:
  42:./tmk_core/common/action_macro.c ****                 if (IS_MOD(macro)) {
 148               		.loc 1 42 51 is_stmt 1 view .LVU29
  43:./tmk_core/common/action_macro.c ****                     add_macro_mods(MOD_BIT(macro));
 149               		.loc 1 43 17 view .LVU30
  43:./tmk_core/common/action_macro.c ****                     add_macro_mods(MOD_BIT(macro));
 150               		.loc 1 43 21 is_stmt 0 view .LVU31
 151 0062 90E2      		ldi r25,lo8(32)
 152 0064 980F      		add r25,r24
  43:./tmk_core/common/action_macro.c ****                     add_macro_mods(MOD_BIT(macro));
 153               		.loc 1 43 20 view .LVU32
 154 0066 9830      		cpi r25,lo8(8)
 155 0068 00F4      		brsh .L10
  44:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
 156               		.loc 1 44 21 is_stmt 1 view .LVU33
  44:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
 157               		.loc 1 44 36 is_stmt 0 view .LVU34
 158 006a 8770      		andi r24,lo8(7)
 159               	.LVL13:
  44:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
 160               		.loc 1 44 21 view .LVU35
 161 006c FE2D      		mov r31,r14
 162 006e 00C0      		rjmp 2f
 163               		1:
 164 0070 FF0F      		lsl r31
 165               		2:
 166 0072 8A95      		dec r24
 167 0074 02F4      		brpl 1b
 168 0076 8F2F      		mov r24,r31
 169 0078 0E94 0000 		call add_macro_mods
 170               	.LVL14:
  45:./tmk_core/common/action_macro.c ****                 } else {
 171               		.loc 1 45 21 is_stmt 1 view .LVU36
 172               	.L22:
  55:./tmk_core/common/action_macro.c ****                 } else {
 173               		.loc 1 55 21 view .LVU37
 174 007c 0E94 0000 		call send_keyboard_report
 175               	.LVL15:
 176 0080 00C0      		rjmp .L11
 177               	.LVL16:
 178               	.L10:
  47:./tmk_core/common/action_macro.c ****                 }
 179               		.loc 1 47 21 view .LVU38
 180 0082 0E94 0000 		call register_code
 181               	.LVL17:
 182               	.L11:
 183               	.LBB30:
  82:./tmk_core/common/action_macro.c ****     }
 184               		.loc 1 82 11 view .LVU39
  82:./tmk_core/common/action_macro.c ****     }
 185               		.loc 1 82 34 view .LVU40
  82:./tmk_core/common/action_macro.c ****     }
 186               		.loc 1 82 19 is_stmt 0 view .LVU41
 187 0086 8F2D      		mov r24,r15
 188               	.LVL18:
 189               	.L15:
  82:./tmk_core/common/action_macro.c ****     }
 190               		.loc 1 82 40 is_stmt 1 discriminator 1 view .LVU42
  82:./tmk_core/common/action_macro.c ****     }
 191               		.loc 1 82 43 is_stmt 0 discriminator 1 view .LVU43
 192               	.LVL19:
 193 0088 8150      		subi r24,1
 194 008a 00F0      		brcs .L17
  82:./tmk_core/common/action_macro.c ****     }
 195               		.loc 1 82 47 is_stmt 1 view .LVU44
 196               	.LBB31:
 197               	.LBI31:
 198               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /* $Id: delay.h.in 2551 2020-10-10 20:33:35Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** _delay_ms(double __ms)
 199               		.loc 2 166 1 view .LVU45
 200               	.LBB32:
 167:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	double __tmp ;
 201               		.loc 2 168 2 view .LVU46
 169:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 202               		.loc 2 172 2 view .LVU47
 173:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 203               		.loc 2 173 2 view .LVU48
 174:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 204               		.loc 2 174 2 view .LVU49
 175:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 205               		.loc 2 184 3 view .LVU50
 206               		.loc 2 184 3 is_stmt 0 view .LVU51
 207               	.LBE32:
 208               	.LBE31:
 209               	.LBE30:
 210               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h"
   1:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* Copyright (c) 2002,2007-2009 Michael Stumpf
   2:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
   3:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    Portions of documentation Copyright (c) 1990 - 1994
   4:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    The Regents of the University of California.
   5:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    All rights reserved.
   7:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
   8:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    Redistribution and use in source and binary forms, with or without
   9:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    modification, are permitted provided that the following conditions are met:
  10:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  11:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    * Redistributions of source code must retain the above copyright
  12:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      notice, this list of conditions and the following disclaimer.
  13:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  14:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    * Redistributions in binary form must reproduce the above copyright
  15:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      notice, this list of conditions and the following disclaimer in
  16:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      the documentation and/or other materials provided with the
  17:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      distribution.
  18:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  19:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    * Neither the name of the copyright holders nor the names of
  20:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      contributors may be used to endorse or promote products derived
  21:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****      from this software without specific prior written permission.
  22:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  23:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  25:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  26:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  27:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  28:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  29:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  30:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  31:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  32:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  33:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****   POSSIBILITY OF SUCH DAMAGE. */
  34:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* $Id: math.h 2554 2021-05-20 22:22:24Z joerg_wunsch $ */
  36:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  37:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /*
  38:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    math.h - mathematical functions
  39:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  40:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    Author : Michael Stumpf
  41:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****             Michael.Stumpf@t-online.de
  42:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  43:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    __ATTR_CONST__ added by marekm@linux.org.pl for functions
  44:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    that "do not examine any values except their arguments, and have
  45:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    no effects except the return value", for better optimization by gcc.
  46:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
  47:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #ifndef __MATH_H
  49:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define __MATH_H
  50:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  51:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** \file */
  52:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** \defgroup avr_math <math.h>: Mathematics
  53:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     \code #include <math.h> \endcode
  54:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  55:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     This header file declares basic mathematics constants and
  56:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     functions.
  57:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  58:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     \par Notes:
  59:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     - In order to access the functions declared herein, it is usually
  60:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       also required to additionally link against the library \c libm.a.
  61:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       See also the related \ref faq_libm "FAQ entry".
  62:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     - Math functions do not raise exceptions and do not change the
  63:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       \c errno variable. Therefore the majority of them are declared
  64:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       with const attribute, for better optimization by GCC.	*/
  65:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  66:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  67:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** \ingroup avr_math	*/
  68:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /*@{*/
  69:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a e.	*/
  71:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_E		2.7182818284590452354
  72:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  73:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The logarithm of the \a e to base 2. */
  74:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LOG2E		1.4426950408889634074	/* log_2 e */
  75:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  76:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The logarithm of the \a e to base 10. */
  77:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LOG10E	0.43429448190325182765	/* log_10 e */
  78:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The natural logarithm of the 2.	*/
  80:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LN2		0.69314718055994530942	/* log_e 2 */
  81:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  82:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The natural logarithm of the 10.	*/
  83:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_LN10		2.30258509299404568402	/* log_e 10 */
  84:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a pi.	*/
  86:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_PI		3.14159265358979323846	/* pi */
  87:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  88:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a pi/2.	*/
  89:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_PI_2		1.57079632679489661923	/* pi/2 */
  90:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  91:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a pi/4.	*/
  92:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_PI_4		0.78539816339744830962	/* pi/4 */
  93:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  94:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 1/pi.	*/
  95:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_1_PI		0.31830988618379067154	/* 1/pi */
  96:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 2/pi.	*/
  98:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_2_PI		0.63661977236758134308	/* 2/pi */
  99:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 100:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 2/sqrt(pi).	*/
 101:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_2_SQRTPI	1.12837916709551257390	/* 2/sqrt(pi) */
 102:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The square root of 2.	*/
 104:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_SQRT2		1.41421356237309504880	/* sqrt(2) */
 105:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 106:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** The constant \a 1/sqrt(2).	*/
 107:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define M_SQRT1_2	0.70710678118654752440	/* 1/sqrt(2) */
 108:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 109:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** NAN constant.	*/
 110:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define NAN	__builtin_nan("")
 111:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 112:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /** INFINITY constant.	*/
 113:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define INFINITY	__builtin_inf()
 114:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 116:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #ifndef __ATTR_CONST__
 117:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** # define __ATTR_CONST__ __attribute__((__const__))
 118:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #endif
 119:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 120:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #if __SIZEOF_DOUBLE__ == __SIZEOF_FLOAT__
 121:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* In order to provide aliases for double functions in the case where
 122:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    double = float, use declarations with according assembler name.
 123:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    That way:
 124:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    1) We do *NOT* use macros like
 125:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****          #define sin sinf
 126:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       because that would interfere with C++.  For example, if some class
 127:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       would implement a method 'sin', or if there was polymorthism for
 128:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****       a function 'sin', then we would silently rename these to 'sinf'.
 129:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    2) We have proper prototypes, both for 'sin' and for 'sinf'.
 130:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****    3) It is zero-overhead.  */
 131:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define __ASM_ALIAS(x) __asm(#x)
 132:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #else
 133:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /* double != float: Provide double prototypes. */
 134:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #define __ASM_ALIAS(x) /* empty */
 135:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #endif
 136:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #ifdef __cplusplus
 138:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** extern "C" {
 139:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** #endif
 140:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 141:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 142:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The cosf() function returns the cosine of \a __x, measured in radians.
 143:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 144:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern float cosf (float __x);
 145:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern double cos (double __x) __ASM_ALIAS(cosf);		/**< The alias for cosf().	*/
 146:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 148:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The sinf() function returns the sine of \a __x, measured in radians.
 149:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 150:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern float sinf (float __x);
 151:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern double sin (double __x) __ASM_ALIAS(sinf);		/**< The alias for sinf().	*/
 152:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 153:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 154:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The tanf() function returns the tangent of \a __x, measured in radians.
 155:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 156:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern float tanf (float __x);
 157:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** __ATTR_CONST__ extern double tan (double __x) __ASM_ALIAS(tanf);		/**< The alias for tanf().	*/
 158:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 159:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** /**
 160:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     The fabsf() function computes the absolute value of a floating-point
 161:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     number \a __x.
 162:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****  */
 163:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** static inline float fabsf (float __x)
 164:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** {
 165:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     return __builtin_fabsf (__x);
 166:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** }
 167:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** 
 168:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** static inline double fabs (double __x)
 169:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h **** {
 170:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/math.h ****     return __builtin_fabs (__x);
 211               		.loc 3 170 5 is_stmt 1 view .LVU52
 212               	.LBB35:
 213               	.LBB34:
 214               	.LBB33:
 185:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 215               		.loc 2 187 2 view .LVU53
 216 008c EFE9      		ldi r30,lo8(3999)
 217 008e FFE0      		ldi r31,hi8(3999)
 218 0090 3197      	1:	sbiw r30,1
 219 0092 01F4      		brne 1b
 220 0094 00C0      		rjmp .
 221 0096 0000      		nop
 222 0098 00C0      		rjmp .L15
 223               	.LVL20:
 224               	.L6:
 225               		.loc 2 187 2 is_stmt 0 view .LVU54
 226               	.LBE33:
 227               	.LBE34:
 228               	.LBE35:
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 229               		.loc 1 51 17 is_stmt 1 view .LVU55
 230               	.LBB36:
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 231               		.loc 1 51 17 view .LVU56
 232 009a 0E5F      		subi r16,-2
 233 009c 1F4F      		sbci r17,-1
 234               	.LVL21:
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 235               		.loc 1 51 17 view .LVU57
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 236               		.loc 1 51 17 view .LVU58
 237 009e FE01      		movw r30,r28
 238               	.LVL22:
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 239               		.loc 1 51 17 is_stmt 0 view .LVU59
 240               	/* #APP */
 241               	 ;  51 "./tmk_core/common/action_macro.c" 1
 242 00a0 8491      		lpm r24, Z
 243               		
 244               	 ;  0 "" 2
 245               	.LVL23:
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 246               		.loc 1 51 17 is_stmt 1 view .LVU60
  51:./tmk_core/common/action_macro.c ****                 dprintf("KEY_UP(%02X)\n", macro);
 247               		.loc 1 51 17 is_stmt 0 view .LVU61
 248               	/* #NOAPP */
 249               	.LBE36:
  52:./tmk_core/common/action_macro.c ****                 if (IS_MOD(macro)) {
 250               		.loc 1 52 49 is_stmt 1 view .LVU62
  53:./tmk_core/common/action_macro.c ****                     del_macro_mods(MOD_BIT(macro));
 251               		.loc 1 53 17 view .LVU63
  53:./tmk_core/common/action_macro.c ****                     del_macro_mods(MOD_BIT(macro));
 252               		.loc 1 53 21 is_stmt 0 view .LVU64
 253 00a2 90E2      		ldi r25,lo8(32)
 254 00a4 980F      		add r25,r24
  53:./tmk_core/common/action_macro.c ****                     del_macro_mods(MOD_BIT(macro));
 255               		.loc 1 53 20 view .LVU65
 256 00a6 9830      		cpi r25,lo8(8)
 257 00a8 00F4      		brsh .L12
  54:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
 258               		.loc 1 54 21 is_stmt 1 view .LVU66
  54:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
 259               		.loc 1 54 36 is_stmt 0 view .LVU67
 260 00aa 8770      		andi r24,lo8(7)
 261               	.LVL24:
  54:./tmk_core/common/action_macro.c ****                     send_keyboard_report();
 262               		.loc 1 54 21 view .LVU68
 263 00ac FE2D      		mov r31,r14
 264 00ae 00C0      		rjmp 2f
 265               		1:
 266 00b0 FF0F      		lsl r31
 267               		2:
 268 00b2 8A95      		dec r24
 269 00b4 02F4      		brpl 1b
 270 00b6 8F2F      		mov r24,r31
 271 00b8 0E94 0000 		call del_macro_mods
 272               	.LVL25:
 273 00bc 00C0      		rjmp .L22
 274               	.LVL26:
 275               	.L12:
  57:./tmk_core/common/action_macro.c ****                 }
 276               		.loc 1 57 21 is_stmt 1 view .LVU69
 277 00be 0E94 0000 		call unregister_code
 278               	.LVL27:
  57:./tmk_core/common/action_macro.c ****                 }
 279               		.loc 1 57 21 is_stmt 0 view .LVU70
 280 00c2 00C0      		rjmp .L11
 281               	.LVL28:
 282               	.L8:
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 283               		.loc 1 61 17 is_stmt 1 view .LVU71
 284               	.LBB37:
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 285               		.loc 1 61 17 view .LVU72
 286 00c4 0E5F      		subi r16,-2
 287 00c6 1F4F      		sbci r17,-1
 288               	.LVL29:
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 289               		.loc 1 61 17 view .LVU73
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 290               		.loc 1 61 17 view .LVU74
 291 00c8 FE01      		movw r30,r28
 292               	.LVL30:
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 293               		.loc 1 61 17 is_stmt 0 view .LVU75
 294               	/* #APP */
 295               	 ;  61 "./tmk_core/common/action_macro.c" 1
 296 00ca C491      		lpm r28, Z
 297               		
 298               	 ;  0 "" 2
 299               	.LVL31:
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 300               		.loc 1 61 17 is_stmt 1 view .LVU76
  61:./tmk_core/common/action_macro.c ****                 dprintf("WAIT(%u)\n", macro);
 301               		.loc 1 61 17 is_stmt 0 view .LVU77
 302               	/* #NOAPP */
 303               	.LBE37:
  62:./tmk_core/common/action_macro.c ****                 { uint8_t ms = macro; while (ms--) wait_ms(1); }
 304               		.loc 1 62 45 is_stmt 1 view .LVU78
 305               	.LBB38:
  63:./tmk_core/common/action_macro.c ****                 break;
 306               		.loc 1 63 19 view .LVU79
  63:./tmk_core/common/action_macro.c ****                 break;
 307               		.loc 1 63 39 view .LVU80
 308               	.L13:
  63:./tmk_core/common/action_macro.c ****                 break;
 309               		.loc 1 63 45 discriminator 1 view .LVU81
  63:./tmk_core/common/action_macro.c ****                 break;
 310               		.loc 1 63 48 is_stmt 0 discriminator 1 view .LVU82
 311               	.LVL32:
 312 00cc C150      		subi r28,1
 313 00ce 00F0      		brcs .L11
  63:./tmk_core/common/action_macro.c ****                 break;
 314               		.loc 1 63 52 is_stmt 1 view .LVU83
 315               	.LBB39:
 316               	.LBI39:
 166:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** {
 317               		.loc 2 166 1 view .LVU84
 318               	.LBB40:
 168:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 319               		.loc 2 168 2 view .LVU85
 172:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 320               		.loc 2 172 2 view .LVU86
 173:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 321               		.loc 2 173 2 view .LVU87
 174:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 
 322               		.loc 2 174 2 view .LVU88
 184:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 323               		.loc 2 184 3 view .LVU89
 184:/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/util/delay.h **** 	#endif
 324               		.loc 2 184 3 is_stmt 0 view .LVU90
 325               	.LBE40:
 326               	.LBE39:
 327               	.LBE38:
 328               		.loc 3 170 5 is_stmt 1 view .LVU91
 329               	.LBB43:
 330               	.LBB42:
 331               	.LBB41:
 332               		.loc 2 187 2 view .LVU92
 333 00d0 8FE9      		ldi r24,lo8(3999)
 334 00d2 9FE0      		ldi r25,hi8(3999)
 335 00d4 0197      	1:	sbiw r24,1
 336 00d6 01F4      		brne 1b
 337 00d8 00C0      		rjmp .
 338 00da 0000      		nop
 339 00dc 00C0      		rjmp .L13
 340               	.LVL33:
 341               	.L7:
 342               		.loc 2 187 2 is_stmt 0 view .LVU93
 343               	.LBE41:
 344               	.LBE42:
 345               	.LBE43:
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 346               		.loc 1 66 17 is_stmt 1 view .LVU94
 347               	.LBB44:
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 348               		.loc 1 66 28 view .LVU95
 349 00de 0E5F      		subi r16,-2
 350 00e0 1F4F      		sbci r17,-1
 351               	.LVL34:
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 352               		.loc 1 66 28 view .LVU96
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 353               		.loc 1 66 28 view .LVU97
 354 00e2 FE01      		movw r30,r28
 355               	.LVL35:
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 356               		.loc 1 66 28 is_stmt 0 view .LVU98
 357               	/* #APP */
 358               	 ;  66 "./tmk_core/common/action_macro.c" 1
 359 00e4 F490      		lpm r15, Z
 360               		
 361               	 ;  0 "" 2
 362               	.LVL36:
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 363               		.loc 1 66 28 is_stmt 1 view .LVU99
  66:./tmk_core/common/action_macro.c ****                 dprintf("INTERVAL(%u)\n", interval);
 364               		.loc 1 66 28 is_stmt 0 view .LVU100
 365               	/* #NOAPP */
 366               	.LBE44:
  67:./tmk_core/common/action_macro.c ****                 break;
 367               		.loc 1 67 52 is_stmt 1 view .LVU101
  68:./tmk_core/common/action_macro.c ****             case 0x04 ... 0x73:
 368               		.loc 1 68 17 view .LVU102
 369 00e6 00C0      		rjmp .L11
 370               	.LVL37:
 371               	.L4:
  70:./tmk_core/common/action_macro.c ****                 register_code(macro);
 372               		.loc 1 70 47 view .LVU103
  71:./tmk_core/common/action_macro.c ****                 break;
 373               		.loc 1 71 17 view .LVU104
 374 00e8 0E94 0000 		call register_code
 375               	.LVL38:
  72:./tmk_core/common/action_macro.c ****             case 0x84 ... 0xF3:
 376               		.loc 1 72 17 view .LVU105
 377               	.L23:
  76:./tmk_core/common/action_macro.c ****             case END:
 378               		.loc 1 76 17 view .LVU106
 379               	.LBB45:
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
 380               		.loc 1 39 17 is_stmt 0 view .LVU107
 381 00ec 8E01      		movw r16,r28
 382               	.LVL39:
  39:./tmk_core/common/action_macro.c ****             case KEY_DOWN:
 383               		.loc 1 39 17 view .LVU108
 384               	.LBE45:
  76:./tmk_core/common/action_macro.c ****             case END:
 385               		.loc 1 76 17 view .LVU109
 386 00ee 00C0      		rjmp .L11
 387               		.cfi_endproc
 388               	.LFE107:
 390               		.text
 391               	.Letext0:
 392               		.file 4 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/stdint.h"
 393               		.file 5 "./tmk_core/common/action_macro.h"
 394               		.file 6 "./tmk_core/common/keycode.h"
 395               		.file 7 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 396               		.file 8 "./tmk_core/common/action.h"
 397               		.file 9 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 398               		.file 10 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 399               		.file 11 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 400               		.file 12 "/usr/local/Cellar/avr-gcc@8/8.5.0_1/avr/include/stdio.h"
 401               		.file 13 "./tmk_core/common/report.h"
 402               		.file 14 "./tmk_core/common/action_util.h"
 403               		.file 15 "./tmk_core/common/debug.h"
DEFINED SYMBOLS
                            *ABS*:00000000 action_macro.c
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:2      *ABS*:0000003e __SP_H__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3      *ABS*:0000003d __SP_L__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:4      *ABS*:0000003f __SREG__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:6      *ABS*:00000001 __zero_reg__
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:13     .text.action_macro_play:00000000 action_macro_play
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:17     .text.action_macro_play:00000000 .Loc.0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:18     .text.action_macro_play:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:19     .text.action_macro_play:00000000 .Loc.1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:49     .text.action_macro_play:0000000e .Loc.2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:51     .text.action_macro_play:0000000e .Loc.3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:52     .text.action_macro_play:0000000e .Loc.4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:53     .text.action_macro_play:0000000e .Loc.5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:56     .text.action_macro_play:00000012 .Loc.6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:58     .text.action_macro_play:00000014 .Loc.7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:63     .text.action_macro_play:00000018 .Loc.8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:64     .text.action_macro_play:00000018 .Loc.9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:66     .text.action_macro_play:00000018 .Loc.10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:70     .text.action_macro_play:0000001c .Loc.11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:71     .text.action_macro_play:0000001c .Loc.12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:79     .text.action_macro_play:00000020 .Loc.13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:80     .text.action_macro_play:00000020 .Loc.14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:83     .text.action_macro_play:00000020 .Loc.15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:86     .text.action_macro_play:00000024 .Loc.16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:88     .text.action_macro_play:00000028 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:97     .text.action_macro_play:00000032 .Loc.17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:107    .text.action_macro_play:00000040 .Loc.18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:109    .text.action_macro_play:00000044 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:111    .text.action_macro_play:00000048 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:117    .text.action_macro_play:00000052 .Loc.19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:118    .text.action_macro_play:00000052 .Loc.20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:121    .text.action_macro_play:00000054 .Loc.21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:127    .text.action_macro_play:0000005a .Loc.22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:129    .text.action_macro_play:0000005a .Loc.23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:133    .text.action_macro_play:0000005e .Loc.24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:134    .text.action_macro_play:0000005e .Loc.25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:137    .text.action_macro_play:00000060 .Loc.26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:144    .text.action_macro_play:00000062 .Loc.27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:145    .text.action_macro_play:00000062 .Loc.28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:148    .text.action_macro_play:00000062 .Loc.29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:149    .text.action_macro_play:00000062 .Loc.30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:150    .text.action_macro_play:00000062 .Loc.31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:153    .text.action_macro_play:00000066 .Loc.32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:156    .text.action_macro_play:0000006a .Loc.33
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:157    .text.action_macro_play:0000006a .Loc.34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:160    .text.action_macro_play:0000006c .Loc.35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:171    .text.action_macro_play:0000007c .Loc.36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:173    .text.action_macro_play:0000007c .Loc.37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:179    .text.action_macro_play:00000082 .Loc.38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:184    .text.action_macro_play:00000086 .Loc.39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:185    .text.action_macro_play:00000086 .Loc.40
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:186    .text.action_macro_play:00000086 .Loc.41
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:190    .text.action_macro_play:00000088 .Loc.42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:191    .text.action_macro_play:00000088 .Loc.43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:195    .text.action_macro_play:0000008c .Loc.44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:199    .text.action_macro_play:0000008c .Loc.45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:201    .text.action_macro_play:0000008c .Loc.46
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:202    .text.action_macro_play:0000008c .Loc.47
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:203    .text.action_macro_play:0000008c .Loc.48
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:204    .text.action_macro_play:0000008c .Loc.49
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:205    .text.action_macro_play:0000008c .Loc.50
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:206    .text.action_macro_play:0000008c .Loc.51
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:211    .text.action_macro_play:0000008c .Loc.52
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:215    .text.action_macro_play:0000008c .Loc.53
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:220    .text.action_macro_play:00000096 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:225    .text.action_macro_play:0000009a .Loc.54
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:229    .text.action_macro_play:0000009a .Loc.55
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:231    .text.action_macro_play:0000009a .Loc.56
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:235    .text.action_macro_play:0000009e .Loc.57
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:236    .text.action_macro_play:0000009e .Loc.58
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:239    .text.action_macro_play:000000a0 .Loc.59
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:246    .text.action_macro_play:000000a2 .Loc.60
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:247    .text.action_macro_play:000000a2 .Loc.61
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:250    .text.action_macro_play:000000a2 .Loc.62
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:251    .text.action_macro_play:000000a2 .Loc.63
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:252    .text.action_macro_play:000000a2 .Loc.64
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:255    .text.action_macro_play:000000a6 .Loc.65
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:258    .text.action_macro_play:000000aa .Loc.66
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:259    .text.action_macro_play:000000aa .Loc.67
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:262    .text.action_macro_play:000000ac .Loc.68
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:276    .text.action_macro_play:000000be .Loc.69
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:279    .text.action_macro_play:000000c2 .Loc.70
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:283    .text.action_macro_play:000000c4 .Loc.71
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:285    .text.action_macro_play:000000c4 .Loc.72
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:289    .text.action_macro_play:000000c8 .Loc.73
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:290    .text.action_macro_play:000000c8 .Loc.74
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:293    .text.action_macro_play:000000ca .Loc.75
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:300    .text.action_macro_play:000000cc .Loc.76
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:301    .text.action_macro_play:000000cc .Loc.77
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:304    .text.action_macro_play:000000cc .Loc.78
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:306    .text.action_macro_play:000000cc .Loc.79
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:307    .text.action_macro_play:000000cc .Loc.80
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:309    .text.action_macro_play:000000cc .Loc.81
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:310    .text.action_macro_play:000000cc .Loc.82
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:314    .text.action_macro_play:000000d0 .Loc.83
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:317    .text.action_macro_play:000000d0 .Loc.84
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:319    .text.action_macro_play:000000d0 .Loc.85
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:320    .text.action_macro_play:000000d0 .Loc.86
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:321    .text.action_macro_play:000000d0 .Loc.87
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:322    .text.action_macro_play:000000d0 .Loc.88
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:323    .text.action_macro_play:000000d0 .Loc.89
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:324    .text.action_macro_play:000000d0 .Loc.90
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:328    .text.action_macro_play:000000d0 .Loc.91
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:332    .text.action_macro_play:000000d0 .Loc.92
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:337    .text.action_macro_play:000000da L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:342    .text.action_macro_play:000000de .Loc.93
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:346    .text.action_macro_play:000000de .Loc.94
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:348    .text.action_macro_play:000000de .Loc.95
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:352    .text.action_macro_play:000000e2 .Loc.96
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:353    .text.action_macro_play:000000e2 .Loc.97
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:356    .text.action_macro_play:000000e4 .Loc.98
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:363    .text.action_macro_play:000000e6 .Loc.99
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:364    .text.action_macro_play:000000e6 .Loc.100
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:367    .text.action_macro_play:000000e6 .Loc.101
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:368    .text.action_macro_play:000000e6 .Loc.102
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:372    .text.action_macro_play:000000e8 .Loc.103
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:373    .text.action_macro_play:000000e8 .Loc.104
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:376    .text.action_macro_play:000000ec .Loc.105
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:378    .text.action_macro_play:000000ec .Loc.106
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:380    .text.action_macro_play:000000ec .Loc.107
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:383    .text.action_macro_play:000000ee .Loc.108
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:385    .text.action_macro_play:000000ee .Loc.109
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:387    .text.action_macro_play:000000f0 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:390    .text.action_macro_play:000000f0 L0
                     .debug_frame:00000000 L0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:95     .text.action_macro_play:00000032 .L1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:106    .text.action_macro_play:00000040 .L3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:371    .text.action_macro_play:000000e8 .L4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:126    .text.action_macro_play:0000005a .L5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:224    .text.action_macro_play:0000009a .L6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:341    .text.action_macro_play:000000de .L7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:282    .text.action_macro_play:000000c4 .L8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:377    .text.action_macro_play:000000ec .L23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:178    .text.action_macro_play:00000082 .L10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:165    .text.action_macro_play:00000072 .L21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:163    .text.action_macro_play:00000070 .L11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:182    .text.action_macro_play:00000086 .L11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:62     .text.action_macro_play:00000018 .L17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:218    .text.action_macro_play:00000090 .L12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:189    .text.action_macro_play:00000088 .L15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:275    .text.action_macro_play:000000be .L12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:267    .text.action_macro_play:000000b2 .L22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:265    .text.action_macro_play:000000b0 .L13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:172    .text.action_macro_play:0000007c .L22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:335    .text.action_macro_play:000000d4 .L14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:308    .text.action_macro_play:000000cc .L13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:1839   .debug_abbrev:00000000 .Ldebug_abbrev0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3262   .debug_ranges:00000000 .Ldebug_ranges0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3298   .debug_line:00000000 .Ldebug_line0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:15     .text.action_macro_play:00000000 .LFB107
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:388    .text.action_macro_play:000000f0 .LFE107
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:2508   .debug_loc:00000000 .LLST0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:2578   .debug_loc:0000007b .LLST1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:2553   .debug_loc:00000063 .LVUS1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:2718   .debug_loc:0000015f .LLST2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:2689   .debug_loc:00000143 .LVUS2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:2787   .debug_loc:0000020a .LLST3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:2778   .debug_loc:00000202 .LVUS3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:2842   .debug_loc:00000261 .LLST4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:2807   .debug_loc:0000023f .LVUS4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:2990   .debug_loc:00000370 .LLST5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:2977   .debug_loc:00000364 .LVUS5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:128    .text.action_macro_play:0000005a .LBB29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:147    .text.action_macro_play:00000062 .LBE29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3022   .debug_loc:000003be .LLST6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3017   .debug_loc:000003ba .LVUS6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3048   .debug_loc:000003ea .LLST7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3043   .debug_loc:000003e6 .LVUS7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:230    .text.action_macro_play:0000009a .LBB36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:249    .text.action_macro_play:000000a2 .LBE36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3062   .debug_loc:0000040a .LLST12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3059   .debug_loc:00000408 .LVUS12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3079   .debug_loc:00000426 .LLST13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3074   .debug_loc:00000422 .LVUS13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:284    .text.action_macro_play:000000c4 .LBB37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:303    .text.action_macro_play:000000cc .LBE37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3095   .debug_loc:00000448 .LLST14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3090   .debug_loc:00000444 .LVUS14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3119   .debug_loc:00000472 .LLST15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3116   .debug_loc:00000470 .LVUS15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3129   .debug_loc:00000487 .LLST16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3126   .debug_loc:00000485 .LVUS16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:316    .text.action_macro_play:000000d0 .LBI39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3139   .debug_loc:0000049c .LLST17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3136   .debug_loc:0000049a .LVUS17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3151   .debug_loc:000004b6 .LLST18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3148   .debug_loc:000004b4 .LVUS18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3163   .debug_loc:000004d0 .LLST19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3160   .debug_loc:000004ce .LVUS19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:347    .text.action_macro_play:000000de .LBB44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:366    .text.action_macro_play:000000e6 .LBE44
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3175   .debug_loc:000004e8 .LLST20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3172   .debug_loc:000004e6 .LVUS20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3190   .debug_loc:00000502 .LLST21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3187   .debug_loc:00000500 .LVUS21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3202   .debug_loc:00000519 .LLST8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3197   .debug_loc:00000515 .LVUS8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:197    .text.action_macro_play:0000008c .LBI31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3216   .debug_loc:00000539 .LLST9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3213   .debug_loc:00000537 .LVUS9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3228   .debug_loc:00000553 .LLST10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3225   .debug_loc:00000551 .LVUS10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3240   .debug_loc:0000056d .LLST11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:3237   .debug_loc:0000056b .LVUS11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:123    .text.action_macro_play:00000058 .LVL8
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:170    .text.action_macro_play:0000007c .LVL14
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:175    .text.action_macro_play:00000080 .LVL15
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:181    .text.action_macro_play:00000086 .LVL17
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:272    .text.action_macro_play:000000bc .LVL25
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:278    .text.action_macro_play:000000c2 .LVL27
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:375    .text.action_macro_play:000000ec .LVL38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:21     .text.action_macro_play:00000002 .LCFI0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:25     .text.action_macro_play:00000004 .LCFI1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:29     .text.action_macro_play:00000006 .LCFI2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:33     .text.action_macro_play:00000008 .LCFI3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:37     .text.action_macro_play:0000000a .LCFI4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:41     .text.action_macro_play:0000000c .LCFI5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:14     .text.action_macro_play:00000000 .LVL0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:61     .text.action_macro_play:00000018 .LVL2
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:69     .text.action_macro_play:0000001c .LVL3
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:94     .text.action_macro_play:00000032 .LVL5
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:105    .text.action_macro_play:00000040 .LVL6
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:132    .text.action_macro_play:0000005e .LVL10
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:223    .text.action_macro_play:0000009a .LVL20
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:234    .text.action_macro_play:0000009e .LVL21
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:281    .text.action_macro_play:000000c4 .LVL28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:288    .text.action_macro_play:000000c8 .LVL29
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:340    .text.action_macro_play:000000de .LVL33
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:351    .text.action_macro_play:000000e2 .LVL34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:370    .text.action_macro_play:000000e8 .LVL37
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:50     .text.action_macro_play:0000000e .LVL1
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:78     .text.action_macro_play:00000020 .LVL4
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:120    .text.action_macro_play:00000054 .LVL7
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:125    .text.action_macro_play:0000005a .LVL9
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:143    .text.action_macro_play:00000062 .LVL12
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:159    .text.action_macro_play:0000006c .LVL13
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:177    .text.action_macro_play:00000082 .LVL16
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:245    .text.action_macro_play:000000a2 .LVL23
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:261    .text.action_macro_play:000000ac .LVL24
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:274    .text.action_macro_play:000000be .LVL26
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:299    .text.action_macro_play:000000cc .LVL31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:362    .text.action_macro_play:000000e6 .LVL36
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:136    .text.action_macro_play:00000060 .LVL11
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:238    .text.action_macro_play:000000a0 .LVL22
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:292    .text.action_macro_play:000000ca .LVL30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:355    .text.action_macro_play:000000e4 .LVL35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:382    .text.action_macro_play:000000ee .LVL39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:311    .text.action_macro_play:000000cc .LVL32
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:188    .text.action_macro_play:00000088 .LVL18
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:192    .text.action_macro_play:00000088 .LVL19
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:405    .debug_info:00000000 .Ldebug_info0
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:65     .text.action_macro_play:00000018 .LBB28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:82     .text.action_macro_play:00000020 .LBE28
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:379    .text.action_macro_play:000000ec .LBB45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:384    .text.action_macro_play:000000ee .LBE45
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:183    .text.action_macro_play:00000086 .LBB30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:209    .text.action_macro_play:0000008c .LBE30
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:212    .text.action_macro_play:0000008c .LBB35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:228    .text.action_macro_play:0000009a .LBE35
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:196    .text.action_macro_play:0000008c .LBB31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:208    .text.action_macro_play:0000008c .LBE31
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:213    .text.action_macro_play:0000008c .LBB34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:227    .text.action_macro_play:0000009a .LBE34
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:305    .text.action_macro_play:000000cc .LBB38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:327    .text.action_macro_play:000000d0 .LBE38
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:329    .text.action_macro_play:000000d0 .LBB43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:345    .text.action_macro_play:000000de .LBE43
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:315    .text.action_macro_play:000000d0 .LBB39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:326    .text.action_macro_play:000000d0 .LBE39
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:330    .text.action_macro_play:000000d0 .LBB42
/var/folders/f1/r0m_vh_54tg0jls9tjh4vqkr0000gn/T//ccmKxKfe.s:344    .text.action_macro_play:000000de .LBE42

UNDEFINED SYMBOLS
unregister_code
add_macro_mods
send_keyboard_report
register_code
del_macro_mods
